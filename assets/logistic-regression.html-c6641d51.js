import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as t,c as e,e as n,a as s,b as p}from"./app-4ef9fb52.js";const i={},l=n(`<h1 id="logistic-regression" tabindex="-1"><a class="header-anchor" href="#logistic-regression" aria-hidden="true">#</a> Logistic regression</h1><h2 id="numerical-or-categorical" tabindex="-1"><a class="header-anchor" href="#numerical-or-categorical" aria-hidden="true">#</a> Numerical or Categorical</h2><ul><li>Numerical variables: income, age, years of education.</li><li>Categorical variables: sex, race. <ul><li>多种（1,2,3,4 表示）</li><li>两种 (Boolean variable)：布尔（<strong>0,1</strong> 或者 -1,1 表示)</li></ul></li></ul><p>因此，将 Categorical variables 用 数字代替后，其实就和 Numerical variables 的回归一样了。</p><h2 id="boolean-variable" tabindex="-1"><a class="header-anchor" href="#boolean-variable" aria-hidden="true">#</a> Boolean variable</h2><p>变量值只有0和1</p><p>Logistic regression 可用于对 Boolean variable 值的回归</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># C(sex) 是一个函数，常用于Categorical variables，这里不过多解释。sex 可能是 1 或者 2</span>
formula <span class="token operator">=</span> <span class="token string">&#39;gunlaw ~ age + age2 + educ + educ2 + C(sex)&#39;</span>
results <span class="token operator">=</span> smf<span class="token punctuation">.</span>logit<span class="token punctuation">(</span>formula<span class="token punctuation">,</span> data<span class="token operator">=</span>gss<span class="token punctuation">)</span><span class="token punctuation">.</span>fit<span class="token punctuation">(</span><span class="token punctuation">)</span>
results<span class="token punctuation">.</span>params
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Intercept 1.653862
C(sex)		[T.2] 0.757249
age 			-0.018849
age2 			0.000189
educ 			-0.124373
educ2			0.006653
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="数据预览" tabindex="-1"><a class="header-anchor" href="#数据预览" aria-hidden="true">#</a> 数据预览</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Draw a logistic regression trend line and a scatter plot of time_since_first_purchase vs. has_churned</span>
sns<span class="token punctuation">.</span>regplot<span class="token punctuation">(</span>x<span class="token operator">=</span> <span class="token string">&quot;time_since_first_purchase&quot;</span><span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token string">&quot;has_churned&quot;</span><span class="token punctuation">,</span> data <span class="token operator">=</span> churn<span class="token punctuation">,</span> logistic <span class="token operator">=</span> <span class="token boolean">True</span><span class="token punctuation">,</span> line_kws<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&quot;color&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;blue&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><img src="https://pic.hanjiaming.com.cn/2022/06/25/f62bf5e1707cb.png" alt="1656157395710.png" style="zoom:33%;"><h2 id="预测和评估" tabindex="-1"><a class="header-anchor" href="#预测和评估" aria-hidden="true">#</a> 预测和评估</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">)</span>

df<span class="token punctuation">[</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">89</span><span class="token punctuation">)</span>
df<span class="token punctuation">[</span><span class="token string">&#39;educ&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">12</span>
df<span class="token punctuation">[</span><span class="token string">&#39;age2&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">]</span><span class="token operator">**</span><span class="token number">2</span>
df<span class="token punctuation">[</span><span class="token string">&#39;educ2&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;educ&#39;</span><span class="token punctuation">]</span><span class="token operator">**</span><span class="token number">2</span>

df<span class="token punctuation">[</span><span class="token string">&#39;sex&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>
pred1 <span class="token operator">=</span> results<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>df<span class="token punctuation">)</span>
df<span class="token punctuation">[</span><span class="token string">&#39;sex&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2</span>
pred2 <span class="token operator">=</span> results<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>df<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="数据可视化" tabindex="-1"><a class="header-anchor" href="#数据可视化" aria-hidden="true">#</a> 数据可视化</h2><h3 id="案例1" tabindex="-1"><a class="header-anchor" href="#案例1" aria-hidden="true">#</a> 案例1</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Create prediction_data</span>
prediction_data <span class="token operator">=</span> explanatory_data<span class="token punctuation">.</span>assign<span class="token punctuation">(</span>
    has_churned <span class="token operator">=</span> mdl_churn_vs_relationship<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>explanatory_data<span class="token punctuation">)</span>
<span class="token punctuation">)</span>

fig <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># Create a scatter plot with logistic trend line</span>
sns<span class="token punctuation">.</span>regplot<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">&quot;time_since_first_purchase&quot;</span><span class="token punctuation">,</span>
            y<span class="token operator">=</span><span class="token string">&quot;has_churned&quot;</span><span class="token punctuation">,</span>
            data<span class="token operator">=</span>churn<span class="token punctuation">,</span>
            ci<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
            logistic<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

<span class="token comment"># Overlay with prediction_data, colored red</span>
sns<span class="token punctuation">.</span>scatterplot<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">&quot;time_since_first_purchase&quot;</span><span class="token punctuation">,</span>
                y<span class="token operator">=</span><span class="token string">&quot;has_churned&quot;</span><span class="token punctuation">,</span>
                data<span class="token operator">=</span>prediction_data<span class="token punctuation">,</span>
                color<span class="token operator">=</span><span class="token string">&quot;red&quot;</span><span class="token punctuation">)</span>

plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><img src="https://pic.hanjiaming.com.cn/2022/06/25/d217592c81713.png" alt="1656160167765.png" style="zoom:50%;"><h3 id="案例2" tabindex="-1"><a class="header-anchor" href="#案例2" aria-hidden="true">#</a> 案例2</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>grouped <span class="token operator">=</span> gss<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">)</span>
favor_by_age <span class="token operator">=</span> grouped<span class="token punctuation">[</span><span class="token string">&#39;gunlaw&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>favor_by_age<span class="token punctuation">,</span> <span class="token string">&#39;o&#39;</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">)</span>

plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> pred1<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&#39;Male&#39;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> pred2<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">&#39;Female&#39;</span><span class="token punctuation">)</span>

plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&#39;Age&#39;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&#39;Probability of favoring gun law&#39;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://pic.hanjiaming.com.cn/2022/06/09/b144be33d2274.png" alt="1654782014929.png" tabindex="0" loading="lazy"><figcaption>1654782014929.png</figcaption></figure><p>到目前为止，我们只应用逻辑回归得到了概率，并没有预测是0，还是1。</p><h2 id="most-likely-outcome" tabindex="-1"><a class="header-anchor" href="#most-likely-outcome" aria-hidden="true">#</a> Most likely outcome</h2><p>在向非技术人员解释您的结果时，您可能希望回避谈论概率并简单地解释最可能的结果。也就是说，与其说客户流失的可能性为 60%，不如说最有可能的结果是客户会流失。这里的权衡是更容易解释，但会以细微差别为代价。</p><p>通常认为 y &lt; 0.5 时为0，否则为1.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Update prediction data by adding most_likely_outcome</span>
prediction_data<span class="token punctuation">[</span><span class="token string">&quot;most_likely_outcome&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> np<span class="token punctuation">.</span><span class="token builtin">round</span><span class="token punctuation">(</span>prediction_data<span class="token punctuation">[</span><span class="token string">&quot;has_churned&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

fig <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># Create a scatter plot with logistic trend line (from previous exercise)</span>
sns<span class="token punctuation">.</span>regplot<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">&quot;time_since_first_purchase&quot;</span><span class="token punctuation">,</span>
            y<span class="token operator">=</span><span class="token string">&quot;has_churned&quot;</span><span class="token punctuation">,</span>
            data<span class="token operator">=</span>churn<span class="token punctuation">,</span>
            ci<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
            logistic<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

<span class="token comment"># Overlay with prediction_data, colored red</span>
sns<span class="token punctuation">.</span>scatterplot<span class="token punctuation">(</span>x <span class="token operator">=</span> <span class="token string">&quot;time_since_first_purchase&quot;</span><span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token string">&quot;most_likely_outcome&quot;</span> <span class="token punctuation">,</span>data <span class="token operator">=</span> prediction_data<span class="token punctuation">,</span> color <span class="token operator">=</span> <span class="token string">&quot;red&quot;</span><span class="token punctuation">)</span>

plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><img src="https://pic.hanjiaming.com.cn/2022/06/25/c1066da4191f4.png" alt="1656160473689.png" style="zoom:50%;"><h3 id="odds-ratios" tabindex="-1"><a class="header-anchor" href="#odds-ratios" aria-hidden="true">#</a> Odds ratios</h3><p>赔率是指事情发生的概率除以不发生的概率。</p><p>赔率比较某事发生的概率和不发生的概率。这有时比概率更容易推理，特别是当你想对选择做出决定时。例如，如果一个客户有20%的机会流失，说 &quot;他们不流失的机会比他们流失的机会高四倍 &quot;可能更直观。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>prediction_data<span class="token punctuation">[</span><span class="token string">&quot;odds_ratio&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> prediction_data<span class="token punctuation">[</span><span class="token string">&quot;has_churned&quot;</span><span class="token punctuation">]</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> prediction_data<span class="token punctuation">[</span><span class="token string">&quot;has_churned&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Update prediction data with odds_ratio</span>
prediction_data<span class="token punctuation">[</span><span class="token string">&quot;odds_ratio&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> prediction_data<span class="token punctuation">[</span><span class="token string">&quot;has_churned&quot;</span><span class="token punctuation">]</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> prediction_data<span class="token punctuation">[</span><span class="token string">&quot;has_churned&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

fig <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># Create a line plot of odds_ratio vs time_since_first_purchase</span>
sns<span class="token punctuation">.</span>lineplot<span class="token punctuation">(</span>x <span class="token operator">=</span> <span class="token string">&quot;time_since_first_purchase&quot;</span><span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token string">&quot;odds_ratio&quot;</span><span class="token punctuation">,</span> data <span class="token operator">=</span> prediction_data<span class="token punctuation">)</span>

<span class="token comment"># Add a dotted horizontal line at odds_ratio = 1</span>
plt<span class="token punctuation">.</span>axhline<span class="token punctuation">(</span>y<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> linestyle<span class="token operator">=</span><span class="token string">&quot;dotted&quot;</span><span class="token punctuation">)</span>

plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><img src="https://pic.hanjiaming.com.cn/2022/06/25/05b6b08192b30.png" alt="1656160952865.png" style="zoom:50%;"><h3 id="visualizing-log-odds-ratio" tabindex="-1"><a class="header-anchor" href="#visualizing-log-odds-ratio" aria-hidden="true">#</a> Visualizing log odds ratio</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>sns<span class="token punctuation">.</span>lineplot<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">&quot;time_since_last_purchase&quot;</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">&quot;odds_ratio&quot;</span><span class="token punctuation">,</span> data<span class="token operator">=</span>prediction_data<span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>axhline<span class="token punctuation">(</span>y<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> linestyle<span class="token operator">=</span><span class="token string">&quot;dotted&quot;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>yscale<span class="token punctuation">(</span><span class="token string">&quot;log&quot;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://pic.hanjiaming.com.cn/2022/06/27/19ea5a235bb57.png" alt="1656341062454.png" tabindex="0" loading="lazy"><figcaption>1656341062454.png</figcaption></figure><h3 id="summary" tabindex="-1"><a class="header-anchor" href="#summary" aria-hidden="true">#</a> Summary</h3><figure><img src="https://pic.hanjiaming.com.cn/2022/06/27/dffb30c8e3678.png" alt="1656341382622.png" tabindex="0" loading="lazy"><figcaption>1656341382622.png</figcaption></figure><img src="https://pic.hanjiaming.com.cn/2022/06/27/69b893ec6deb8.png" alt="1656341397223.png"><h2 id="quantifying-fit" tabindex="-1"><a class="header-anchor" href="#quantifying-fit" aria-hidden="true">#</a> Quantifying fit</h2><p>我们为线性模型绘制的诊断图在逻辑案例中的用处不大。相反，我们将研究混淆矩阵。</p><p>混淆矩阵（有时称为混淆表）是具有分类响应（例如逻辑回归）的模型的所有性能指标的基础。它包含每个实际响应的计数 - 预测响应对。在这种情况下，如果有两种可能的响应（流失或不流失），则有四种总体结果。</p><img src="https://pic.hanjiaming.com.cn/2022/06/28/cce07763e8380.png" alt="4345ede3f2f9e.png" style="zoom:33%;"><p>表格记录了 预测是否正确 和 预测的阴阳 。</p><ol><li><strong>True positive:</strong> The customer churned and the model predicted they would.</li><li><strong>False positive:</strong> The customer didn&#39;t churn, but the model predicted they would.</li><li><strong>True negative:</strong> The customer didn&#39;t churn and the model predicted they wouldn&#39;t.</li><li><strong>False negative:</strong> The customer churned, but the model predicted they wouldn&#39;t.</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Get the actual responses</span>
actual_response <span class="token operator">=</span> churn<span class="token punctuation">[</span><span class="token string">&quot;has_churned&quot;</span><span class="token punctuation">]</span>

<span class="token comment"># Get the predicted responses</span>
predicted_response <span class="token operator">=</span> np<span class="token punctuation">.</span><span class="token builtin">round</span><span class="token punctuation">(</span>mdl_churn_vs_relationship<span class="token punctuation">.</span>predict<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># Create outcomes as a DataFrame of both Series</span>
outcomes <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;actual_response&quot;</span><span class="token punctuation">:</span> actual_response<span class="token punctuation">,</span>
                         <span class="token string">&quot;predicted_response&quot;</span><span class="token punctuation">:</span> predicted_response<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment"># Print the outcomes</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>outcomes<span class="token punctuation">.</span>value_counts<span class="token punctuation">(</span>sort <span class="token operator">=</span> <span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;script.py&gt; output:
    actual_response  predicted_response
    0                0.0                   112
                     1.0                    88
    1                0.0                    76
                     1.0                   124
    dtype: int64
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>虽然计算性能矩阵可能很有趣，但如果你需要不同模型的多个混淆矩阵，它就会变得很乏味。幸运的是，.pred_table()方法可以为你计算出混淆矩阵。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Import mosaic from statsmodels.graphics.mosaicplot</span>
<span class="token keyword">from</span> statsmodels<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span>mosaicplot <span class="token keyword">import</span> mosaic

<span class="token comment"># Calculate the confusion matrix conf_matrix</span>
conf_matrix <span class="token operator">=</span> mdl_churn_vs_relationship<span class="token punctuation">.</span>pred_table<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># Print it</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>conf_matrix<span class="token punctuation">)</span>

<span class="token comment"># Draw a mosaic plot of conf_matrix</span>
mosaic<span class="token punctuation">(</span>conf_matrix<span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;script.py&gt; output:
    [[112.  88.]
     [ 76. 124.]]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://pic.hanjiaming.com.cn/2022/06/28/d213fde0d9c70.png" alt="73bc6a67c14a3.png" tabindex="0" loading="lazy"><figcaption>73bc6a67c14a3.png</figcaption></figure><p>很多性能指标都可以从混淆矩阵中计算出来。对于逻辑回归来说，其中三个特别重要：准确性、敏感性和特异性。</p><h3 id="accuracy" tabindex="-1"><a class="header-anchor" href="#accuracy" aria-hidden="true">#</a> Accuracy</h3><p>准确率是正确预测的比例。这是正确预测的比例。也就是说，真正的阴性数加上真正的阳性数，除以总的观察数。准确率越高越好。</p><img src="https://pic.hanjiaming.com.cn/2022/06/28/ea66caebb785d.png" alt="1656346266775.png" style="zoom:50%;"><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>TN <span class="token operator">=</span> conf_matrix<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span>
TP <span class="token operator">=</span> conf_matrix<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span>
FN <span class="token operator">=</span> conf_matrix<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span>
FP <span class="token operator">=</span> conf_matrix<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span>

acc <span class="token operator">=</span> <span class="token punctuation">(</span>TN <span class="token operator">+</span> TP<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span>TN <span class="token operator">+</span> TP <span class="token operator">+</span> FN <span class="token operator">+</span> FP<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>acc<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>0.575
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="sensitivity-specificity" tabindex="-1"><a class="header-anchor" href="#sensitivity-specificity" aria-hidden="true">#</a> Sensitivity &amp; Specificity</h3><ul><li>Sensitivity: is the proportion of true positives. <ul><li>这是实际反应是真的观察结果的比例，其中模型也预测它们是真的。</li><li>也就是说，真阳性的数量 除以 假阴性和真阳性之和。</li></ul></li><li>Specificity: is the proportion of true negatives. <ul><li>这是实际反应是错误的观察结果的比例，其中模型也预测它们是错误的。</li><li>也就是说，真阴性的数量 除以 真阴性和假阳性之和。</li></ul></li></ul><p>经常有一种权衡，即提高特异性会降低敏感性，或者提高敏感性会降低特异性。</p>`,60),o=s("ul",null,[s("li",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mtext",null," sensitivity "),s("mo",null,"="),s("mfrac",null,[s("mrow",null,[s("mi",null,"T"),s("mi",null,"P")]),s("mrow",null,[s("mi",null,"F"),s("mi",null,"N"),s("mo",null,"+"),s("mi",null,"T"),s("mi",null,"P")])])]),s("annotation",{encoding:"application/x-tex"},"\\text { sensitivity }=\\frac{T P}{F N+T P}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8623em","vertical-align":"-0.1944em"}}),s("span",{class:"mord text"},[s("span",{class:"mord"}," sensitivity ")]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.2757em","vertical-align":"-0.4033em"}}),s("span",{class:"mord"},[s("span",{class:"mopen nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8723em"}},[s("span",{style:{top:"-2.655em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.10903em"}},"FN"),s("span",{class:"mbin mtight"},"+"),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.13889em"}},"TP")])])]),s("span",{style:{top:"-3.23em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3.394em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.13889em"}},"TP")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.4033em"}},[s("span")])])])]),s("span",{class:"mclose nulldelimiter"})])])])])]),s("li",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mtext",null," specificity "),s("mo",null,"="),s("mfrac",null,[s("mrow",null,[s("mi",null,"T"),s("mi",null,"N")]),s("mrow",null,[s("mi",null,"T"),s("mi",null,"N"),s("mo",null,"+"),s("mi",null,"F"),s("mi",null,"P")])])]),s("annotation",{encoding:"application/x-tex"},"\\text { specificity }=\\frac{T N}{T N+F P}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord text"},[s("span",{class:"mord"}," specificity ")]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.2757em","vertical-align":"-0.4033em"}}),s("span",{class:"mord"},[s("span",{class:"mopen nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8723em"}},[s("span",{style:{top:"-2.655em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.10903em"}},"TN"),s("span",{class:"mbin mtight"},"+"),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.13889em"}},"FP")])])]),s("span",{style:{top:"-3.23em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3.394em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.10903em"}},"TN")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.4033em"}},[s("span")])])])]),s("span",{class:"mclose nulldelimiter"})])])])])])],-1),c=n(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Calculate and print the sensitivity</span>
sensitivity <span class="token operator">=</span> TP <span class="token operator">/</span> <span class="token punctuation">(</span>TP <span class="token operator">+</span> FN<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;sensitivity: &quot;</span><span class="token punctuation">,</span> sensitivity<span class="token punctuation">)</span>

<span class="token comment"># Calculate and print the specificity</span>
specificity <span class="token operator">=</span> TN <span class="token operator">/</span> <span class="token punctuation">(</span>TN <span class="token operator">+</span> FP<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;specificity: &quot;</span><span class="token punctuation">,</span> specificity<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;script.py&gt; output:
    sensitivity:  0.62
    specificity:  0.56
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://pic.hanjiaming.com.cn/2022/06/28/0a5da598f3c1d.png" alt="1656348529376.png" tabindex="0" loading="lazy"><figcaption>1656348529376.png</figcaption></figure><h3 id="recall-and-precision" tabindex="-1"><a class="header-anchor" href="#recall-and-precision" aria-hidden="true">#</a> Recall and Precision</h3>`,4),r=s("ul",null,[s("li",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mtext",null," precision "),s("mo",null,"="),s("mfrac",null,[s("mrow",null,[s("mi",null,"T"),s("mi",null,"P")]),s("mrow",null,[s("mi",null,"F"),s("mi",null,"P"),s("mo",null,"+"),s("mi",null,"T"),s("mi",null,"P")])])]),s("annotation",{encoding:"application/x-tex"},"\\text { precision }=\\frac{T P}{F P+T P}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8623em","vertical-align":"-0.1944em"}}),s("span",{class:"mord text"},[s("span",{class:"mord"}," precision ")]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.2757em","vertical-align":"-0.4033em"}}),s("span",{class:"mord"},[s("span",{class:"mopen nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8723em"}},[s("span",{style:{top:"-2.655em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.13889em"}},"FP"),s("span",{class:"mbin mtight"},"+"),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.13889em"}},"TP")])])]),s("span",{style:{top:"-3.23em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3.394em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.13889em"}},"TP")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.4033em"}},[s("span")])])])]),s("span",{class:"mclose nulldelimiter"})])])])])]),s("li",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mtext",null," recall "),s("mo",null,"="),s("mfrac",null,[s("mrow",null,[s("mi",null,"T"),s("mi",null,"P")]),s("mrow",null,[s("mi",null,"F"),s("mi",null,"P"),s("mo",null,"+"),s("mi",null,"F"),s("mi",null,"N")])])]),s("annotation",{encoding:"application/x-tex"},"\\text { recall }=\\frac{T P}{F P+F N}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord text"},[s("span",{class:"mord"}," recall ")]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.2757em","vertical-align":"-0.4033em"}}),s("span",{class:"mord"},[s("span",{class:"mopen nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8723em"}},[s("span",{style:{top:"-2.655em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.13889em"}},"FP"),s("span",{class:"mbin mtight"},"+"),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.10903em"}},"FN")])])]),s("span",{style:{top:"-3.23em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3.394em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.13889em"}},"TP")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.4033em"}},[s("span")])])])]),s("span",{class:"mclose nulldelimiter"})])])])])])],-1),u=s("h3",{id:"f1-score",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#f1-score","aria-hidden":"true"},"#"),p(" F1 score")],-1),d=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mn",null,"2"),s("mo",null,"∗"),s("mfrac",null,[s("mrow",null,[s("mtext",null," precision "),s("mo",null,"∗"),s("mtext",null," recall ")]),s("mrow",null,[s("mtext",null," precision "),s("mo",null,"+"),s("mtext",null," recall ")])])]),s("annotation",{encoding:"application/x-tex"}," 2 * \\frac{\\text { precision } * \\text { recall }}{\\text { precision }+\\text { recall }} ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"2"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∗"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"2.2519em","vertical-align":"-0.8804em"}}),s("span",{class:"mord"},[s("span",{class:"mopen nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.3714em"}},[s("span",{style:{top:"-2.314em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord text"},[s("span",{class:"mord"}," precision ")]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord text"},[s("span",{class:"mord"}," recall ")])])]),s("span",{style:{top:"-3.23em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3.677em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord text"},[s("span",{class:"mord"}," precision ")]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∗"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord text"},[s("span",{class:"mord"}," recall ")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8804em"}},[s("span")])])])]),s("span",{class:"mclose nulldelimiter"})])])])])])],-1),m=[l,o,c,r,u,d];function k(h,v){return t(),e("div",null,m)}const y=a(i,[["render",k],["__file","logistic-regression.html.vue"]]);export{y as default};
