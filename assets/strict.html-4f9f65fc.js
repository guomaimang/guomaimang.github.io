const t=JSON.parse(`{"key":"v-00549ae2","path":"/note/cs/programming/javascript/standard/strict.html","title":"现代模式 \\"use strict\\"","lang":"zh-CN","frontmatter":{"article":false,"date":"2022-04-29T00:00:00.000Z","author":"javascriptInfo, Hirsun","description":"现代模式 \\"use strict\\" 长久以来，JavaScript 不断向前发展且并未带来任何兼容性问题。新的特性被加入，旧的功能也没有改变。这种情况一直持续到 2009 年 ECMAScript 5 (ES5) 的出现。ES5 规范增加了新的语言特性并且修改了一些已经存在的特性。 \\"use strict\\"\` 可以禁用已经废弃或者不被推荐的功能，这样更加规范和严格。这种严格模式也叫做现代模式。 \\"use strict\\" 这个指令看上去像一个字符串 \\"use strict\\" 或者 'use strict'。当它处于脚本文件的顶部时，则整个脚本文件都将以“现代”模式进行工作。","head":[["meta",{"property":"og:url","content":"https://guomaimang.github.io/note/cs/programming/javascript/standard/strict.html"}],["meta",{"property":"og:site_name","content":"Hirsun HAN (Jiaming) | 韩佳明"}],["meta",{"property":"og:title","content":"现代模式 \\"use strict\\""}],["meta",{"property":"og:description","content":"现代模式 \\"use strict\\" 长久以来，JavaScript 不断向前发展且并未带来任何兼容性问题。新的特性被加入，旧的功能也没有改变。这种情况一直持续到 2009 年 ECMAScript 5 (ES5) 的出现。ES5 规范增加了新的语言特性并且修改了一些已经存在的特性。 \\"use strict\\"\` 可以禁用已经废弃或者不被推荐的功能，这样更加规范和严格。这种严格模式也叫做现代模式。 \\"use strict\\" 这个指令看上去像一个字符串 \\"use strict\\" 或者 'use strict'。当它处于脚本文件的顶部时，则整个脚本文件都将以“现代”模式进行工作。"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-15T05:33:29.000Z"}],["meta",{"property":"article:author","content":"javascriptInfo, Hirsun"}],["meta",{"property":"article:published_time","content":"2022-04-29T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-15T05:33:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"现代模式 \\\\\\"use strict\\\\\\"\\",\\"description\\":\\"现代模式 \\\\\\"use strict\\\\\\" 长久以来，JavaScript 不断向前发展且并未带来任何兼容性问题。新的特性被加入，旧的功能也没有改变。这种情况一直持续到 2009 年 ECMAScript 5 (ES5) 的出现。ES5 规范增加了新的语言特性并且修改了一些已经存在的特性。 \\\\\\"use strict\\\\\\"\` 可以禁用已经废弃或者不被推荐的功能，这样更加规范和严格。这种严格模式也叫做现代模式。 \\\\\\"use strict\\\\\\" 这个指令看上去像一个字符串 \\\\\\"use strict\\\\\\" 或者 'use strict'。当它处于脚本文件的顶部时，则整个脚本文件都将以“现代”模式进行工作。\\"}"]]},"headers":[{"level":2,"title":"\\"use strict\\"","slug":"use-strict","link":"#use-strict","children":[]},{"level":2,"title":"浏览器控制台","slug":"浏览器控制台","link":"#浏览器控制台","children":[]},{"level":2,"title":"我们应该使用 \\"use strict\\" 吗？","slug":"我们应该使用-use-strict-吗","link":"#我们应该使用-use-strict-吗","children":[]}],"git":{"createdTime":1726378409000,"updatedTime":1726378409000,"contributors":[{"name":"hanjiaming","email":"47519540+guomaimang@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":4.99,"words":499},"filePathRelative":"note/cs/programming/javascript/standard/strict.md","localizedDate":"2022年4月29日","excerpt":"<h1> 现代模式 \\"use strict\\"</h1>\\n<p>长久以来，JavaScript 不断向前发展且并未带来任何兼容性问题。新的特性被加入，旧的功能也没有改变。这种情况一直持续到 2009 年 ECMAScript 5 (ES5) 的出现。ES5 规范增加了新的语言特性并且修改了一些已经存在的特性。</p>\\n<p>\\"use strict\\"\` 可以禁用已经废弃或者不被推荐的功能，这样更加规范和严格。这种严格模式也叫做现代模式。</p>\\n<h2> \\"use strict\\"</h2>\\n<p>这个指令看上去像一个字符串 <code>\\"use strict\\"</code> 或者 <code>'use strict'</code>。当它处于脚本文件的顶部时，则整个脚本文件都将以“现代”模式进行工作。</p>","autoDesc":true}`);export{t as data};
