import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{o as l,c as e,e as t}from"./app-838a3efe.js";const n={},a=t('<h1 id="blockchain" tabindex="-1"><a class="header-anchor" href="#blockchain" aria-hidden="true">#</a> Blockchain</h1><ol><li>introduces the basic underlying cryptographic concepts of blockchain<br> as a powerful tool<br> to support distributed ledgers in all digital transactions 「在所有数字交易中支持分布式分类账。」.</li><li>The significances of trust, anonymity 「匿名」, and consensus mechanisms 「共识机制」 are discussed.</li><li>further explores the applications of blockchain and smart contracts in various practical applications, including <ul><li>金融服务、分布式系统和特定领域</li><li>如智慧城市、医疗保健、物流和供应链等。</li></ul></li></ol><h2 id="outcomes" tabindex="-1"><a class="header-anchor" href="#outcomes" aria-hidden="true">#</a> Outcomes</h2><ul><li>基本的智能合约编程和一些安全编码问题。</li><li>区块链加密工具套件及其工作原理的详细信息。</li><li>了解区块链的一些最新进展。</li><li>判断应用程序是否适合区块链（并实施它）。</li><li>可以检查 ICO/DApp 白皮书是否有意义。</li></ul><h2 id="what-is-blockchain" tabindex="-1"><a class="header-anchor" href="#what-is-blockchain" aria-hidden="true">#</a> What is Blockchain</h2><ul><li><strong>A chain of block?</strong> actually, a good answer, from a data-structure point of view.</li><li>Distributed ledger technology (DLT) 「分布式账本技术」 <ul><li>but you heard of smart contract, Dapps? They aren’t “book”</li></ul></li><li>or, abstractly, something providing <strong>coordination</strong> between many parties, when there is no single trusted party</li></ul><p><strong>区块链是一种去中心化的数字账本技术，通过将数据分成块（block）并以链（chain）的形式连接起来。</strong></p><ul><li><strong>每个块包含了一些交易数据和一个时间戳，以及前一个块的加密哈希值</strong></li><li><strong>区块链的去中心化特性使得它在金融、供应链等多个领域具有广泛的应用。</strong></li></ul><h2 id="trust" tabindex="-1"><a class="header-anchor" href="#trust" aria-hidden="true">#</a> Trust</h2><ul><li>如果存在可信方「trusted party」 ⇒ 无需区块链</li><li>Tribal trust「部落信仰」: from people who are related to each other, speak the same language, sharing custom, religion, etc.</li><li>机构信任：美国联邦储备局、香港金融管理局 <ul><li>以及许多其他例子，其中一些（可以说）具有全球影响力</li></ul></li><li>Platform: where 2 or more entities interact</li></ul><p>How to form decentralized/distributed trust？</p><p>Decentralization: No agreed-upon definition (varies across fields)</p><div class="hint-container info"><p class="hint-container-title">Distributing Trust &amp; Enforcing Neutrality</p><figure><img src="https://pic.hanjiaming.com.cn/2024/10/05/263a7f93329cd.png" alt="1728107271865.png" tabindex="0" loading="lazy"><figcaption>1728107271865.png</figcaption></figure><p>Centralized Bank/Operator</p><ul><li>Single point of Failure</li><li>Mutability / Forgery of Records 「记录的可变性/伪造」(当中央银行怀有恶意时）</li></ul><p>De-Centralized Operators</p><ul><li>Resilience</li><li>Access controlled</li><li>Immutability「不可变性」</li><li>Verifiability</li></ul></div><h2 id="bitcoin" tabindex="-1"><a class="header-anchor" href="#bitcoin" aria-hidden="true">#</a> Bitcoin</h2><p>Innovation of OG (Original) App: Bitcoin</p><ul><li>enabled by a practical public append-only data structure (blockchain/DLT), 「由实用的公共附加数据结构（区块链/DLT）启用」</li><li>secured by “replication” and “incentives” 「以“复制”和“激励”为保障」 <ul><li>迄今未发现利用任何设计缺陷「design flaw」进行的攻击</li></ul></li><li>加密货币作为 &quot;交换媒介&quot;，又称 &quot;电子现金&quot;</li><li>store of value -&gt; a fixed supply asset (BTC)</li></ul><div class="hint-container note"><p class="hint-container-title">An Ideal Electronic-Cash System</p><img src="https://pic.hanjiaming.com.cn/2024/10/05/04a4bccfcb158.png" alt="1728106183938.png" style="zoom:33%;"></div><h2 id="byzantine-generals-problem" tabindex="-1"><a class="header-anchor" href="#byzantine-generals-problem" aria-hidden="true">#</a> Byzantine Generals Problem</h2><h3 id="分布式系统" tabindex="-1"><a class="header-anchor" href="#分布式系统" aria-hidden="true">#</a> 分布式系统</h3><p><strong>分布式系统</strong>：分布式系统是由多个独立计算机组成的系统，这些计算机通过网络进行通信和协作，以完成共同的任务。</p><p>在分布式系统中，节点是指参与系统的独立计算机或设备。节点可以是诚实的、故障的或恶意的。</p><ul><li><strong>Function = a “centralized” system</strong><ul><li>在分布式系统中，节点可以是诚实的（按预期行为）、故障的（无法正常工作）或恶意的（故意破坏系统）。</li><li>然而，在分布式系统中，没有这样的中央节点，所有节点需要通过某种机制来达成一致。</li></ul></li><li>But nodes can be honest/faulty「有缺陷的」/malicious「恶意的」 <ul><li>crash / drop messages / act arbitrarily「任意行为」 <ul><li>节点可能会崩溃、丢弃消息或以任意方式行为。</li><li>这些不确定性增加了达成共识的难度。</li></ul></li></ul></li><li>Might not be pairwise-connected「可能不是成对连接的」这意味着某些节点之间可能无法直接通信。</li></ul><div class="hint-container tip"><p class="hint-container-title">提示</p><p>PKI是一种基于公钥和私钥的加密技术，用于确保通信的安全性和真实性。了解PKI的作用可以帮助我们理解为什么在没有PKI的情况下，某些问题变得“不可解决”。</p></div><h3 id="如何达成共识" tabindex="-1"><a class="header-anchor" href="#如何达成共识" aria-hidden="true">#</a> 如何达成共识</h3><p>拜占庭将军问题：如何达成共识「consensus」？这是一个经典的分布式计算问题，描述了在存在恶意节点的情况下，如何达成一致决策。</p><ul><li>一名 &quot;首领 &quot;向所有其他将军/节点发出命令</li><li>目标是找到一种策略，确保所有诚实节点采取相同的行动。</li><li>在没有公钥基础设施（PKI）的情况下，如果恶意节点超过三分之一，达成共识是“不可能”的。</li><li>如果领导者节点是恶意「<strong>malicious</strong>」的，它可能向不同的节点发送不同的命令（例如，向节点A发送0，向节点B发送1），从而破坏共识。</li></ul><p>Dolev-Strong Protocol solves “Broadcast” in f+1 round (f := #malicious) + PKI</p><ul><li>Dolev-Strong协议通过在f+1轮广播中解决了信息传递问题，其中f是恶意节点的数量。</li><li>这个协议依赖于PKI来确保消息的真实性。</li><li>然而，这个协议在大规模分布式网络中效率较低，因为需要进行多轮的消息传递。</li></ul><p>可以把这个过程想象成一个班级里有一个同学（A）要传递一个重要信息给全班同学（B、C、D、E）。这个班级里有一个捣蛋鬼（恶意节点），他可能会试图传递错误的信息。但是，A 会先把信息传递给所有人，然后每个人再把他们收到的信息传递给其他人。由于大多数同学都是诚实的，他们会通过多数投票来决定最终的信息是什么。即使有一个捣蛋鬼，最终大家还是会收到正确的信息。</p><details class="hint-container details"><summary>Example</summary><p>好的，我来用一个形象的例子解释 Dolev-Strong 协议是如何在 ( f+1 ) 轮内解决广播问题的。</p><p>假设我们有一个网络，其中有5个节点：A、B、C、D 和 E。其中，A 是发送者，B、C、D 和 E 是接收者。在这5个节点中，有最多 ( f ) 个节点是恶意的。为了简单起见，我们假设 ( f = 1 )，即最多有一个恶意节点。</p><p>目标</p><p>广播问题的目标是：发送者 A 发送一个消息 ( m ) 给所有接收者，并且所有诚实的接收者最终都能一致地接收到相同的消息 ( m )，即使存在恶意节点试图干扰。</p><p>协议流程</p><p>Dolev-Strong 协议通过 ( f+1 ) 轮（在这个例子中是 2 轮）来达成一致。每一轮中，节点会将自己接收到的消息广播给其他所有节点。具体流程如下：</p><p>初始状态</p><ul><li>A 想要广播消息 ( m )。</li><li>B、C、D 和 E 都初始化为不知道消息 ( m )。</li></ul><p>第 0 轮（发送者广播）</p><ol><li><strong>A 发送消息 ( m ) 给 B、C、D 和 E</strong>： <ul><li>B 收到消息 ( m )。</li><li>C 收到消息 ( m )。</li><li>D 收到消息 ( m )。</li><li>E 收到消息 ( m )。</li></ul></li></ol><p>第 1 轮（接收者广播）</p><ol start="2"><li><strong>B、C、D 和 E 将他们收到的消息广播给其他所有节点</strong>： <ul><li>B 将消息 ( m ) 发送给 A、C、D 和 E。</li><li>C 将消息 ( m ) 发送给 A、B、D 和 E。</li><li>D 将消息 ( m ) 发送给 A、B、C 和 E。</li><li>E 将消息 ( m ) 发送给 A、B、C 和 D。</li></ul></li></ol><p>节点状态变化</p><ul><li><strong>A</strong>：已经知道消息 ( m )，不变。</li><li><strong>B</strong>：如果 B 是诚实的，它会广播它收到的消息 ( m )。如果 B 是恶意的，它可能广播一个假消息，但因为只有一个恶意节点，其他节点可以通过多数投票来检测。</li><li><strong>C</strong>：同样地，如果 C 是诚实的，它会广播它收到的消息 ( m )。</li><li><strong>D</strong>：同样地，如果 D 是诚实的，它会广播它收到的消息 ( m )。</li><li><strong>E</strong>：同样地，如果 E 是诚实的，它会广播它收到的消息 ( m )。</li></ul><p>最终状态</p><p>在第 2 轮结束后，每个诚实节点都会有一个消息集合。由于最多只有一个恶意节点，诚实节点会通过多数投票机制来决定最终的消息 ( m )。</p><p>具体来说：</p><ul><li>每个节点会统计它收到的消息。</li><li>如果某个消息 ( m ) 出现的次数超过 ( n-f )（在这个例子中是 4 次），则该消息被认为是正确的消息。</li></ul><p>由于恶意节点最多只有一个，诚实节点会收到足够多的正确消息 ( m )，从而达成一致。</p></details><p>通过这种方式，Dolev-Strong 协议在 ( f+1 ) 轮内解决了广播问题。</p><div class="hint-container warning"><p class="hint-container-title">我认为有 PKI 就可以保证消息的准确和不可篡改了，为什么还需要广播？</p><p>虽然公钥基础设施（PKI）可以保证消息的真实性和不可篡改性，但在分布式系统中，特别是在存在恶意节点的情况下，单靠 PKI 并不足以解决所有问题。</p><p><strong>消息的可达性和一致性</strong></p><p>PKI 可以确保消息的真实性和不可篡改性，但它不能保证消息能够被所有节点接收到。在分布式系统中，网络可能是不可靠的，消息可能会丢失或延迟。</p><p>因此，需要一个广播协议来确保所有诚实节点最终都能接收到相同的消息。</p><p><strong>防止恶意节点的干扰</strong></p><ul><li><strong>拒绝转发消息</strong>：恶意节点可能会故意不转发消息，导致一些节点无法接收到消息。</li><li><strong>发送伪造消息</strong>：恶意节点可能会发送伪造的消息，试图混淆其他节点。</li><li><strong>发送旧消息</strong>：恶意节点可能会发送过期的消息，试图扰乱系统。</li></ul><p>广播协议通过多轮消息交换和验证，确保即使有恶意节点存在，所有诚实节点最终都能达成一致。</p><p><strong>确保最终一致性</strong></p><ul><li>在分布式系统中，最终一致性是一个重要的目标。</li><li>广播协议通过多轮通信，确保所有诚实节点在一定轮次后都能接收到相同的消息，并达成一致。</li><li>这对于系统的稳定性和可靠性至关重要。</li></ul><figure><img src="https://pic.hanjiaming.com.cn/2024/10/05/da7c0b6f667ec.png" alt="1728111454901.png" tabindex="0" loading="lazy"><figcaption>1728111454901.png</figcaption></figure></div><h2 id="data-structure-ledger" tabindex="-1"><a class="header-anchor" href="#data-structure-ledger" aria-hidden="true">#</a> Data Structure/Ledger</h2><p>Blockchain as Data Structure/Ledger 「分类帐」</p><p>区块链（Blockchain）是一种特殊的数据结构和分布式账本技术，它以一种链式结构将数据块（blocks）按照时间顺序连接起来。</p><ul><li>每个区块包含多个交易（transactions），<strong>这些交易记录了资产从一个发送者到一个接收者的转移。</strong></li><li>资产可以是任何东西，例如货币、合同、访问密钥等。</li></ul><p>区块链的核心思想是通过去中心化和分布式的方式来确保数据的安全性和可信度</p><ul><li>即使在点对点（P2P）网络中也能保持可信。</li><li>每个区块通过密码学技术（如哈希函数和数字签名）与前一个区块相连，形成一个不可篡改的链条。</li><li>这种结构使得区块链具有高度的安全性和透明性。</li></ul><p>区块链不仅仅是一种数据结构，它也是一种分布式数据库。</p><ul><li>传统数据库通常由一个中心化的实体管理，</li><li>而区块链通过分布式网络中的多个节点共同维护账本，从而避免了单点故障和中心化控制。</li></ul><h2 id="maintain-a-ledger-distributively" tabindex="-1"><a class="header-anchor" href="#maintain-a-ledger-distributively" aria-hidden="true">#</a> Maintain a ledger distributively</h2><div class="hint-container info"><p class="hint-container-title">相关概念</p><p><strong>共识协议（Consensus Protocol）</strong></p><ul><li>共识协议是一种在分布式系统中实现一致性的机制。</li><li>它确保所有参与者（节点）对某个状态或交易达成一致。</li><li>在区块链中，常见的共识协议包括工作量证明（Proof of Work, PoW）、权益证明（Proof of Stake, PoS）等。</li></ul><p><strong>工作量证明（Proof of Work, PoW）</strong></p><ul><li>工作量证明是一种共识机制，通过要求节点解决复杂的计算难题来验证交易。</li><li>解决难题的过程称为“挖矿”，成功解决问题的节点可以将新的区块添加到区块链中，并获得奖励。</li><li>比特币采用的就是PoW机制。</li></ul><p><strong>Sybil 攻击</strong></p><ul><li>Sybil攻击是一种在分布式系统中通过创建多个虚假身份来破坏系统的攻击方式。</li><li>在区块链网络中，攻击者通过控制大量虚假节点来影响共识过程，从而可能导致双重支付等问题。</li></ul></div><ul><li>via Consensus Protocol (enabled by “proof of work” in bitcoin) <ul><li>Operators (miners in bitcoin) “agree” on the blockchain state. <ul><li>操作员（在比特币中称为矿工）“同意”区块链的状态。</li><li>矿工是运行区块链网络节点并参与交易验证和区块生成的个体或实体。</li><li>他们通过解决计算难题来验证交易，并在达成共识后更新区块链。</li></ul></li><li>Periodically select valid transactions to append to ledger <ul><li>定期选择有效的交易添加到账本中。</li><li>矿工会在一定时间间隔内（例如比特币的10分钟）收集网络中的交易，验证其有效性，并将其打包成一个新的区块添加到区块链中。</li></ul></li><li>Admission control: Who can join as operators? <ul><li>在区块链网络中，准入控制决定了哪些节点可以参与到交易验证和区块生成中。</li><li>在比特币网络中，任何人都可以成为矿工，只要他们具备足够的计算能力和资源。</li></ul></li><li>Access control: Who can write? <ul><li>访问控制决定了哪些节点有权将新的交易或区块写入区块链。</li><li>在比特币中，只有成功解决PoW难题的矿工才能将新的区块添加到区块链中。</li></ul></li><li>How they agree upon who can append to the ledger? <ul><li>矿工通过解决PoW难题来竞争添加新的区块。</li><li>第一个成功解决问题的矿工将区块添加到区块链中，并获得奖励。</li><li>这一过程确保了区块链的安全性和一致性。</li></ul></li></ul></li><li>Complexity of this problem in the bitcoin context: <ul><li>Peer-to-peer (P2P) setting: nodes can go offline anytime</li><li>Sybil (“fake” identities) exist, and they are malicious</li><li>In the Internet scale (many one can help, many bad guys too)</li></ul></li></ul><h2 id="cap-and-pacelc-theorem" tabindex="-1"><a class="header-anchor" href="#cap-and-pacelc-theorem" aria-hidden="true">#</a> CAP and PACELC Theorem</h2><p>CAP 定理是由计算机科学家 Eric Brewer 提出的，指出</p><blockquote><p>在一个分布式系统中，不可能同时满足<strong>一致性（Consistency）、可用性（Availability）和分区</strong>容忍性（Partition Tolerance）这三个特性。<strong>只能选择其中的两个。</strong></p><p>在网络分区（Partition Tolerance）发生时，一个分布式系统无法同时保证一致性和可用性。</p></blockquote><p>例如，<strong>在网络分区的情况下，系统必须在一致性和可用性之间做出权衡。</strong></p><img src="https://pic.hanjiaming.com.cn/2024/10/05/6eb4b8cadc15b.png" alt="1728117452677.png" style="zoom:50%;"><ul><li>一致性（Consistency）：所有节点在同一时间看到相同的数据。 <ul><li>一致性指的是在分布式系统中的所有节点在同一时间看到的数据是相同的。</li><li>即，当一个节点更新数据后，所有其他节点立即看到这个更新</li><li>这是一个强一致性的概念。</li></ul></li><li>可用性（Availability）：每个请求都能收到一个（成功或失败的）响应。 <ul><li>可用性指的是系统在任何时候都能够响应用户的请求，即使部分节点出现故障。</li><li>系统必须确保即使在某些节点不可用的情况下，仍能提供服务。</li></ul></li><li>分区容忍性（Partition Tolerance）：系统能够在任意网络分区的情况下继续运行。 <ul><li><strong>网络分区指的是由于网络故障，分布式系统的节点被分成了多个互相无法通信的部分。</strong></li><li>分区容忍性要求系统能够在网络分区的情况下继续运行，<strong>即使这意味着可能需要在一致性和可用性之间做出选择。</strong></li></ul></li></ul><div class="hint-container tip"><p class="hint-container-title">区别: 可用性 和 分区容忍性</p><ol><li><strong>关注点不同</strong>： <ul><li><strong>可用性</strong>：关注系统在任何情况下都能响应请求的能力。</li><li><strong>分区容忍性</strong>：关注系统在网络分区（通信中断或延迟）的情况下仍能继续运行。</li></ul></li><li><strong>实现方式不同</strong>： <ul><li><strong>可用性</strong>：通过冗余、故障转移、负载均衡等手段来实现。</li><li><strong>分区容忍性</strong>：通过设计系统在网络分区情况下仍能继续运行（可能会影响一致性或可用性）。</li></ul></li><li><strong>CAP 定理中的角色</strong>： <ul><li><strong>可用性</strong>：在 CAP 定理中，可用性是指系统能够在任意时间点响应请求。</li><li><strong>分区容忍性</strong>：在 CAP 定理中，分区容忍性是指系统能够在网络分区的情况下继续运行。</li></ul></li><li>关键词 <ul><li><strong>可用性</strong>：负载均衡，本地冗余</li><li><strong>分区容忍性</strong>：区块链，分布式系统</li></ul></li></ol></div><h2 id="why-blockchains-solution" tabindex="-1"><a class="header-anchor" href="#why-blockchains-solution" aria-hidden="true">#</a> Why Blockchains solution</h2><p>为什么选择区块链解决方案？</p><ul><li>区块链是一种分布式账本技术，它通过去中心化和加密技术来确保数据的安全性和透明性。</li><li>区块链特别适用于需要高可靠性和防篡改的数据存储和传输场景。</li></ul><p>For distributed systems, in case of partition:</p><ul><li>当网络分区发生时，系统的节点被分割成无法互相通信的部分，</li><li>这时系统需要在一致性和可用性之间做出选择：我们可以选择一致性或可用性。</li><li>要么等待其他分区更新，要么提供本地副本。 <ul><li>选择一致性的话，系统需要等待所有分区的数据更新完成；</li><li>选择可用性的话，系统可以立即提供本地副本的数据。</li></ul></li></ul><div class="hint-container info"><p class="hint-container-title">案例分析</p><p>假设一个分布式银行账户系统，用户可以在多个分支机构进行存取款操作。<strong>当网络分区发生时，不同分支机构之间无法通信。</strong></p><ul><li><u><strong>选择一致性</strong>：系统会等待所有分支机构的数据同步完成后再处理请求。</u><ul><li>例如，如果用户在A分行存款，系统会等待该操作在B分行也被确认后才更新用户的账户余额。</li><li>这可能导致用户在网络分区期间无法进行存取款操作，但可以确保所有分支机构的账户余额是一致的。</li></ul></li><li><strong>选择可用性</strong>：系统会立即在本地分支机构处理用户的存取款请求。 <ul><li>例如，如果用户在A分行存款，A分行会立即更新用户的账户余额，而不等待B分行的确认。</li><li>这可以确保用户在网络分区期间仍然能够进行存取款操作，但可能导致A分行和B分行的账户余额不一致。</li></ul></li></ul><p>假设一个分布式社交媒体平台，用户可以在不同服务器上发布和查看帖子。当网络分区发生时，不同服务器之间无法通信。</p><ul><li><strong>选择一致性</strong>：系统会等待所有服务器的数据同步完成后再显示帖子。 <ul><li>例如，如果用户在服务器A上发布帖子，系统会等待该帖子在服务器B上也被确认后才显示给其他用户。</li><li>这可能导致用户在网络分区期间无法看到最新的帖子，但可以确保所有用户看到的帖子是一致的。</li></ul></li><li><u><strong>选择可用性</strong>：系统会立即在本地服务器上显示用户发布的帖子，而不等待其他服务器的确认。</u><ul><li>这可以确保用户在网络分区期间仍然能够看到和发布帖子，但可能导致不同服务器上的用户看到的帖子不一致。</li></ul></li></ul></div><h2 id="blockchain-features" tabindex="-1"><a class="header-anchor" href="#blockchain-features" aria-hidden="true">#</a> Blockchain Features</h2><h3 id="probabilistic-consensus" tabindex="-1"><a class="header-anchor" href="#probabilistic-consensus" aria-hidden="true">#</a> Probabilistic Consensus</h3><p>概率共识是一种共识机制，它通过概率方式达成节点之间的一致意见。</p><ul><li>不同于绝对共识，概率共识允许在某些情况下节点之间存在短暂的不一致</li><li>但随着时间的推移，这种不一致的概率会逐渐降低，最终趋近于零。</li></ul><p>在某些时刻，一些节点可能会对账本中存储的信息有“不同步”的视图。</p><ul><li>由于网络延迟或节点故障，分布式系统中的各个节点可能不会立即对某些交易达成一致，这种情况在概率共识机制中尤为常见。</li></ul><h3 id="with-fully-replicated-state" tabindex="-1"><a class="header-anchor" href="#with-fully-replicated-state" aria-hidden="true">#</a> with fully-replicated state</h3><p>完全复制状态意味着系统中的每个节点都保存着整个账本的完整副本。这确保了即使某些节点失效，系统仍然能够通过其他节点恢复数据。</p><ul><li>provides “resilience” <ul><li>指的是系统具有很强的抗攻击性和容错性</li><li>即使部分节点失效或受到攻击，系统仍然能够继续运行并保持数据的一致性和完整性。</li></ul></li></ul><div class="hint-container tip"><p class="hint-container-title">提示</p><p>一位分布式计算研究人员可能会告诉你，区块链并不是“分布式”的，因为完全复制所有数据在某种程度上是低效、stupid 的。</p><p>在传统的分布式系统中，数据通常是分片存储的，而不是每个节点都保存全部数据。</p></div><h3 id="via-cryptographic-techniques" tabindex="-1"><a class="header-anchor" href="#via-cryptographic-techniques" aria-hidden="true">#</a> via cryptographic techniques</h3><p>unforgeable signature certifying “immutable” payments</p><ul><li>不可伪造的签名认证“不可变”的支付。</li><li>区块链使用数字签名来验证交易的合法性，一旦交易被记录在区块链上，就无法被篡改。</li></ul><h3 id="and-economics-incentive" tabindex="-1"><a class="header-anchor" href="#and-economics-incentive" aria-hidden="true">#</a> and economics incentive</h3><p>need to “pay” to join, defend against sybil (“admission control”)</p><ul><li>需要“支付”才能加入，防御女巫攻击（“准入控制”）。</li><li>为了防止恶意节点的加入，<strong>区块链系统通常要求新节点支付一定的费用（如矿工费）</strong></li><li>这有助于防御女巫攻击（即通过大量创建虚假身份来攻击网络）。</li></ul><p>“reward” those who helps maintaining/verifying the ledger</p><ul><li>“奖励”那些帮助维护/验证账本的人。</li><li>区块链系统通过提供经济奖励（如比特币）来鼓励矿工和节点参与账本的维护和验证。</li></ul><div class="hint-container info"><p class="hint-container-title">An interdisciplinary subject</p><ul><li>How to reach consensus among the operators「如何在运营商之间达成共识？」?</li><li>Distributed computing</li><li>(that can be considered as what bitcoin avoided)</li><li>turns out「事实证明」 we still need it for a “faster” blockchain「事实证明我们仍然需要它来实现“更快”的区块链」</li><li>How to enforce “admission control” (not to admit sybils)?</li><li>How to ensure verifiability「可验证性」 (while ensuring privacy)</li><li>Cryptography</li><li>How to incentivize「激励」 the operators and demotivate「抑制」 attacks?</li><li>Economy</li></ul></div><h2 id="faq" tabindex="-1"><a class="header-anchor" href="#faq" aria-hidden="true">#</a> FAQ</h2><ul><li>问：如何确保不变性和“适当”的访问控制？</li><li>A：通过验证（问：由谁验证？A：每个人）</li><li>问：当每个人都可以验证一切时，这有什么不好？ <ul><li>A：隐私丧失（问：有什么解决方案吗？A：隐私 - 增强技术。）</li><li>但是，隐私权是基本人权，维护着我们的尊严。</li><li>这不是黑白分明的——“负责任的隐私”的概念是存在的。</li><li>Regulation technology “RegTech” <em>e.g.</em>, Anti money laundering (AML)</li></ul></li><li>问：如果记录不可变，如何删除它？</li><li>A: （孩子！）色情、私人（被盗）信息</li><li>问：“可编辑”区块链</li><li>A:（问：谁可以编辑？答：“许可”环境中的“受托人”）</li></ul><h2 id="application" tabindex="-1"><a class="header-anchor" href="#application" aria-hidden="true">#</a> Application</h2><h3 id="digital-currency" tabindex="-1"><a class="header-anchor" href="#digital-currency" aria-hidden="true">#</a> Digital currency</h3><p>数字货币作为第一个应用</p><ul><li>Current largest: Bitcoin (2009), Ethereum (2015)</li><li>全球：任何有互联网连接的人都可以访问</li></ul><h3 id="smart-contract" tabindex="-1"><a class="header-anchor" href="#smart-contract" aria-hidden="true">#</a> Smart-Contract</h3><ul><li>If we can ask an “operator” to help in verifying others’ transactions, can we ask for more, <em>e.g.</em>, executing some code?</li><li>这就引出了智能合约的概念（但它有多 &quot;智能 &quot;呢？）</li><li>区块链计算机：完全可编程的环境 ⟹ 管理数字资产和金融资产的公共程序</li><li>可组合性「Composability」：在链上运行的应用程序可相互调用</li></ul><h3 id="decentralized-applications-dapps" tabindex="-1"><a class="header-anchor" href="#decentralized-applications-dapps" aria-hidden="true">#</a> Decentralized Applications (DApps)</h3><ul><li>DeFi: financial instruments managed by public programs <ul><li>stablecoins「稳定币」, lending「贷款」, exchanges , etc.</li></ul></li><li>Asset management or non-fungible tokens (NFTs) <ul><li>如艺术品、游戏资产、域名等。</li></ul></li><li>▪ 去中心化组织 (DA Os) 或去中心化治理 <ul><li>e.g., investment, for donations, for collecting art, etc.</li></ul></li></ul><h3 id="further-applications" tabindex="-1"><a class="header-anchor" href="#further-applications" aria-hidden="true">#</a> Further Applications</h3><ul><li>最有名的去中心化应用程序可能还是 Cryptokitties？</li><li>▪ If those operators are “random” peers over the whole Internet, can we enable new collaborative / decentralized apps? <ul><li>Crowdsourcing (众包) / Sharing economy app (<em>e.g.</em>, Uber)</li></ul></li><li>If we can securely transfer even money in such a P2P setting, can we enable new “secure” decentralized application? <ul><li>Gambling / Voting / “Secure multi-party computation”「安全多方计算」</li><li>Cryptographic tech. needed to ensure the security of the app.</li></ul></li><li>Secure coding needed to ensure the implementation is secure</li></ul><figure><img src="https://pic.hanjiaming.com.cn/2024/10/05/20bcd61a5a65b.png" alt="1728124433771.png" tabindex="0" loading="lazy"><figcaption>1728124433771.png</figcaption></figure><figure><img src="https://pic.hanjiaming.com.cn/2024/10/05/968eba7e42daf.png" alt="1728124456862.png" tabindex="0" loading="lazy"><figcaption>1728124456862.png</figcaption></figure>',89),r=[a];function o(s,c){return l(),e("div",null,r)}const d=i(n,[["render",o],["__file","index.html.vue"]]);export{d as default};
