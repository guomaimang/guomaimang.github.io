const e=JSON.parse(`{"key":"v-066cfb16","path":"/note/cs/cn/bc/privacy.html","title":"Privacy Enhancing Crypto","lang":"zh-CN","frontmatter":{"article":false,"date":"2024-10-30T00:00:00.000Z","index":true,"order":10,"headerDepth":0,"description":"Privacy Enhancing Crypto How signature is used in blockchain 核心思想：公钥 = 身份 如果你看到签名sig，使得Verify(pk, msg, sig) = true，可以理解为公钥pk在说，“[消息]” UTXO model in Bitcoin, Account model in Ethereum 都使用了 signature How to make a new identity Create a new, random key-pair (sk, pk) pk (or the address Hash(pk)) is the public \\"name\\" you can use You control the identity, because only you know sk 无需许可「Permissionless」：任何人可以在任何时间创建一个新的身份。这个过程不需要中央机构的批准或参与。 Make as many as you want! No central coordination! pk \\"looks random\\" and not directly connect to real-world identity?! 发送者可以为接收者“创建”一个公钥，以实现接收者的匿名性，例如在Monero中（Monero使用UTXO模型). 这种方法可以隐藏接收者的真实身份。","head":[["meta",{"property":"og:url","content":"https://guomaimang.github.io/note/cs/cn/bc/privacy.html"}],["meta",{"property":"og:site_name","content":"Hirsun HAN (Jiaming) | 韩佳明"}],["meta",{"property":"og:title","content":"Privacy Enhancing Crypto"}],["meta",{"property":"og:description","content":"Privacy Enhancing Crypto How signature is used in blockchain 核心思想：公钥 = 身份 如果你看到签名sig，使得Verify(pk, msg, sig) = true，可以理解为公钥pk在说，“[消息]” UTXO model in Bitcoin, Account model in Ethereum 都使用了 signature How to make a new identity Create a new, random key-pair (sk, pk) pk (or the address Hash(pk)) is the public \\"name\\" you can use You control the identity, because only you know sk 无需许可「Permissionless」：任何人可以在任何时间创建一个新的身份。这个过程不需要中央机构的批准或参与。 Make as many as you want! No central coordination! pk \\"looks random\\" and not directly connect to real-world identity?! 发送者可以为接收者“创建”一个公钥，以实现接收者的匿名性，例如在Monero中（Monero使用UTXO模型). 这种方法可以隐藏接收者的真实身份。"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-22T20:15:30.000Z"}],["meta",{"property":"article:author","content":"Hirsun (HAN Jiaming)"}],["meta",{"property":"article:published_time","content":"2024-10-30T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-22T20:15:30.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"Privacy Enhancing Crypto\\",\\"description\\":\\"Privacy Enhancing Crypto How signature is used in blockchain 核心思想：公钥 = 身份 如果你看到签名sig，使得Verify(pk, msg, sig) = true，可以理解为公钥pk在说，“[消息]” UTXO model in Bitcoin, Account model in Ethereum 都使用了 signature How to make a new identity Create a new, random key-pair (sk, pk) pk (or the address Hash(pk)) is the public \\\\\\"name\\\\\\" you can use You control the identity, because only you know sk 无需许可「Permissionless」：任何人可以在任何时间创建一个新的身份。这个过程不需要中央机构的批准或参与。 Make as many as you want! No central coordination! pk \\\\\\"looks random\\\\\\" and not directly connect to real-world identity?! 发送者可以为接收者“创建”一个公钥，以实现接收者的匿名性，例如在Monero中（Monero使用UTXO模型). 这种方法可以隐藏接收者的真实身份。\\"}"]]},"headers":[{"level":2,"title":"Pseudonymous","slug":"pseudonymous","link":"#pseudonymous","children":[]},{"level":2,"title":"Anonymity","slug":"anonymity","link":"#anonymity","children":[{"level":3,"title":"Fungibility","slug":"fungibility","link":"#fungibility","children":[]},{"level":3,"title":"Transparency of Blockchain","slug":"transparency-of-blockchain","link":"#transparency-of-blockchain","children":[]}]},{"level":2,"title":"3 Types of Privacy","slug":"_3-types-of-privacy","link":"#_3-types-of-privacy","children":[{"level":3,"title":"Zcash (#20, S&P '14)","slug":"zcash-20-s-p-14","link":"#zcash-20-s-p-14","children":[]},{"level":3,"title":"Monero (#13)","slug":"monero-13","link":"#monero-13","children":[]},{"level":3,"title":"Dash (#15)","slug":"dash-15","link":"#dash-15","children":[]}]},{"level":2,"title":"Privacy Concerns in Signatures","slug":"privacy-concerns-in-signatures","link":"#privacy-concerns-in-signatures","children":[]},{"level":2,"title":"Blind Signature","slug":"blind-signature","link":"#blind-signature","children":[{"level":3,"title":"A Simple E-Cash System","slug":"a-simple-e-cash-system","link":"#a-simple-e-cash-system","children":[]},{"level":3,"title":"Functionalities","slug":"functionalities","link":"#functionalities","children":[]},{"level":3,"title":"Generic Scheme","slug":"generic-scheme","link":"#generic-scheme","children":[]},{"level":3,"title":"Some Discussions","slug":"some-discussions","link":"#some-discussions","children":[]}]},{"level":2,"title":"Ring Confidential Transactions","slug":"ring-confidential-transactions","link":"#ring-confidential-transactions","children":[{"level":3,"title":"Signature","slug":"signature","link":"#signature","children":[]},{"level":3,"title":"Syntax","slug":"syntax","link":"#syntax","children":[]},{"level":3,"title":"Linkable Ring Signature","slug":"linkable-ring-signature","link":"#linkable-ring-signature","children":[]}]},{"level":2,"title":"Zero-Knowledge (ZK)","slug":"zero-knowledge-zk","link":"#zero-knowledge-zk","children":[{"level":3,"title":"Example","slug":"example","link":"#example","children":[]},{"level":3,"title":"Another ZK Proof Example","slug":"another-zk-proof-example","link":"#another-zk-proof-example","children":[]},{"level":3,"title":"多项式时间","slug":"多项式时间","link":"#多项式时间","children":[]},{"level":3,"title":"NP","slug":"np","link":"#np","children":[]},{"level":3,"title":"P vs NP","slug":"p-vs-np","link":"#p-vs-np","children":[]},{"level":3,"title":"ZKP Theory/Practice","slug":"zkp-theory-practice","link":"#zkp-theory-practice","children":[]}]},{"level":2,"title":"One-Time Public-Private Key","slug":"one-time-public-private-key","link":"#one-time-public-private-key","children":[]},{"level":2,"title":"Commitment Scheme","slug":"commitment-scheme","link":"#commitment-scheme","children":[{"level":3,"title":"Pedersen Commitment","slug":"pedersen-commitment","link":"#pedersen-commitment","children":[]},{"level":3,"title":"Homomorphic Commitment","slug":"homomorphic-commitment","link":"#homomorphic-commitment","children":[]}]},{"level":2,"title":"Monero’s Confidential Transactions","slug":"monero-s-confidential-transactions","link":"#monero-s-confidential-transactions","children":[]},{"level":2,"title":"Anonymity via Mixing","slug":"anonymity-via-mixing","link":"#anonymity-via-mixing","children":[]},{"level":2,"title":"ZK-SNARK","slug":"zk-snark","link":"#zk-snark","children":[]}],"git":{"createdTime":1730305155000,"updatedTime":1732306530000,"contributors":[{"name":"hanjiaming","email":"47519540+guomaimang@users.noreply.github.com","commits":6}]},"readingTime":{"minutes":90.69,"words":9069},"filePathRelative":"note/cs/cn/bc/privacy.md","localizedDate":"2024年10月30日","excerpt":"<h1> Privacy Enhancing Crypto</h1>\\n<p>How signature is used in blockchain</p>\\n<ul>\\n<li>核心思想：公钥 = 身份</li>\\n<li>如果你看到签名sig，使得Verify(pk, msg, sig) = true，可以理解为公钥pk在说，“[消息]”</li>\\n<li>UTXO model in Bitcoin, Account model in Ethereum 都使用了 signature</li>\\n</ul>\\n<p>How to make a new identity</p>\\n<ul>\\n<li>Create a new, random key-pair (sk, pk)</li>\\n<li>pk (or the address Hash(pk)) is the public \\"name\\" you can use</li>\\n<li>You control the identity, because only you know sk</li>\\n<li>无需许可「Permissionless」：任何人可以在任何时间创建一个新的身份。这个过程不需要中央机构的批准或参与。</li>\\n<li>Make as many as you want! No central coordination!</li>\\n<li>pk \\"looks random\\" and not directly connect to real-world identity?!</li>\\n<li>发送者可以为接收者“创建”一个公钥，以实现接收者的匿名性，例如在Monero中（Monero使用UTXO模型). 这种方法可以隐藏接收者的真实身份。</li>\\n</ul>","autoDesc":true}`);export{e as data};
