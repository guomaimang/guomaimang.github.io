const e=JSON.parse('{"key":"v-2eab3c06","path":"/note/it/pm/se/Program-Testing.html","title":"Program Testing","lang":"zh-CN","frontmatter":{"article":false,"date":"2022-12-13T00:00:00.000Z","order":8,"headerDepth":1,"description":"Program Testing 了解从开发期间的测试到系统客户的验收测试的各个阶段。 已经介绍了帮助你选择测试用例的技术，这些用例旨在发现程序缺陷。 理解 \\"测试优先 \\"的开发方式，即在编写代码之前设计测试，并自动运行这些测试。 了解三种不同类型的测试 - 组件测试、系统测试和发布测试。 了解开发测试和用户测试之间的区别。 Program Testing 测试的目的是表明一个程序做了它想做的事情，并在投入使用前发现程序的缺陷。 当你测试软件时，你使用人工数据执行一个程序。 你检查测试运行的结果是否有错误、异常或关于程序的非功能属性的信息。 可以揭示错误的存在，但不能揭示其不存在。 Testing is part of a more general verification and validation proces，其中也包括静态验证技术。","head":[["meta",{"property":"og:url","content":"https://guomaimang.github.io/note/it/pm/se/Program-Testing.html"}],["meta",{"property":"og:site_name","content":"Hirsun HAN (Jiaming) | 韩佳明"}],["meta",{"property":"og:title","content":"Program Testing"}],["meta",{"property":"og:description","content":"Program Testing 了解从开发期间的测试到系统客户的验收测试的各个阶段。 已经介绍了帮助你选择测试用例的技术，这些用例旨在发现程序缺陷。 理解 \\"测试优先 \\"的开发方式，即在编写代码之前设计测试，并自动运行这些测试。 了解三种不同类型的测试 - 组件测试、系统测试和发布测试。 了解开发测试和用户测试之间的区别。 Program Testing 测试的目的是表明一个程序做了它想做的事情，并在投入使用前发现程序的缺陷。 当你测试软件时，你使用人工数据执行一个程序。 你检查测试运行的结果是否有错误、异常或关于程序的非功能属性的信息。 可以揭示错误的存在，但不能揭示其不存在。 Testing is part of a more general verification and validation proces，其中也包括静态验证技术。"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-15T05:33:29.000Z"}],["meta",{"property":"article:author","content":"Hirsun (HAN Jiaming)"}],["meta",{"property":"article:published_time","content":"2022-12-13T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-15T05:33:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"Program Testing\\",\\"description\\":\\"Program Testing 了解从开发期间的测试到系统客户的验收测试的各个阶段。 已经介绍了帮助你选择测试用例的技术，这些用例旨在发现程序缺陷。 理解 \\\\\\"测试优先 \\\\\\"的开发方式，即在编写代码之前设计测试，并自动运行这些测试。 了解三种不同类型的测试 - 组件测试、系统测试和发布测试。 了解开发测试和用户测试之间的区别。 Program Testing 测试的目的是表明一个程序做了它想做的事情，并在投入使用前发现程序的缺陷。 当你测试软件时，你使用人工数据执行一个程序。 你检查测试运行的结果是否有错误、异常或关于程序的非功能属性的信息。 可以揭示错误的存在，但不能揭示其不存在。 Testing is part of a more general verification and validation proces，其中也包括静态验证技术。\\"}"]]},"headers":[{"level":2,"title":"Program Testing","slug":"program-testing-1","link":"#program-testing-1","children":[{"level":3,"title":"Program Testing Goals","slug":"program-testing-goals","link":"#program-testing-goals","children":[]},{"level":3,"title":"Validation and Defect Testing","slug":"validation-and-defect-testing","link":"#validation-and-defect-testing","children":[]},{"level":3,"title":"Verification & Validation (V&V)","slug":"verification-validation-v-v","link":"#verification-validation-v-v","children":[]},{"level":3,"title":"Software Inspections","slug":"software-inspections","link":"#software-inspections","children":[]}]},{"level":2,"title":"Stages of Testing","slug":"stages-of-testing","link":"#stages-of-testing","children":[]},{"level":2,"title":"Testing Strategies","slug":"testing-strategies","link":"#testing-strategies","children":[{"level":3,"title":"Partition Testing","slug":"partition-testing","link":"#partition-testing","children":[]},{"level":3,"title":"Testing Guidelines","slug":"testing-guidelines","link":"#testing-guidelines","children":[]}]},{"level":2,"title":"Component Testing","slug":"component-testing","link":"#component-testing","children":[]},{"level":2,"title":"Interface Testing","slug":"interface-testing","link":"#interface-testing","children":[{"level":3,"title":"Interface types","slug":"interface-types","link":"#interface-types","children":[]},{"level":3,"title":"Interface Errors","slug":"interface-errors","link":"#interface-errors","children":[]},{"level":3,"title":"Interface Testing Guidelines","slug":"interface-testing-guidelines","link":"#interface-testing-guidelines","children":[]}]},{"level":2,"title":"System Testing","slug":"system-testing","link":"#system-testing","children":[]},{"level":2,"title":"Testing Policies","slug":"testing-policies","link":"#testing-policies","children":[]},{"level":2,"title":"Test-Driven Development","slug":"test-driven-development","link":"#test-driven-development","children":[]},{"level":2,"title":"Release Testing","slug":"release-testing","link":"#release-testing","children":[]},{"level":2,"title":"Requirements-Based Testing","slug":"requirements-based-testing","link":"#requirements-based-testing","children":[]},{"level":2,"title":"Features Tested by Scenario","slug":"features-tested-by-scenario","link":"#features-tested-by-scenario","children":[]},{"level":2,"title":"Performance Testing","slug":"performance-testing","link":"#performance-testing","children":[]},{"level":2,"title":"User Testing","slug":"user-testing","link":"#user-testing","children":[{"level":3,"title":"Types of User Testing","slug":"types-of-user-testing","link":"#types-of-user-testing","children":[]},{"level":3,"title":"The Acceptance Testing Process","slug":"the-acceptance-testing-process","link":"#the-acceptance-testing-process","children":[]}]},{"level":2,"title":"Summary","slug":"summary","link":"#summary","children":[]}],"git":{"createdTime":1726378409000,"updatedTime":1726378409000,"contributors":[{"name":"hanjiaming","email":"47519540+guomaimang@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":35.59,"words":3559},"filePathRelative":"note/it/pm/se/Program-Testing.md","localizedDate":"2022年12月13日","excerpt":"<h1> Program Testing</h1>\\n<ol>\\n<li>了解从开发期间的测试到系统客户的验收测试的各个阶段。</li>\\n<li>已经介绍了帮助你选择测试用例的技术，这些用例旨在发现程序缺陷。</li>\\n<li>理解 \\"测试优先 \\"的开发方式，即在编写代码之前设计测试，并自动运行这些测试。</li>\\n<li>了解三种不同类型的测试 - 组件测试、系统测试和发布测试。</li>\\n<li>了解开发测试和用户测试之间的区别。</li>\\n</ol>\\n<h2> Program Testing</h2>\\n<ul>\\n<li>测试的目的是表明一个程序做了它想做的事情，并在投入使用前发现程序的缺陷。</li>\\n<li>当你测试软件时，你使用人工数据执行一个程序。</li>\\n<li>你检查测试运行的结果是否有错误、异常或关于程序的非功能属性的信息。</li>\\n<li>可以揭示错误的存在，但不能揭示其不存在。</li>\\n<li>Testing is part of a more general verification and validation proces，其中也包括静态验证技术。</li>\\n</ul>","autoDesc":true}');export{e as data};
