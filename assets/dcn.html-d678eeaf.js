import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as i,c as a,e as t}from"./app-62cd3f25.js";const n={},r=t('<h1 id="data-center-network" tabindex="-1"><a class="header-anchor" href="#data-center-network" aria-hidden="true">#</a> Data Center Network</h1><figure><img src="https://pic.hanjiaming.com.cn/2024/05/09/42c81935b3b98.png" alt="1715244552610.png" tabindex="0" loading="lazy"><figcaption>1715244552610.png</figcaption></figure><ul><li>Three-Tier DCN</li><li>Fat Tree DCN</li><li>Dcell</li></ul><p>Data Center Networking (DCN)</p><ul><li>是关于如何连接服务器和交换机等设备，以便在数据中心内实现高效的信息交换</li><li>随着数据中心的设备数量增加到数以万计，构建和维护这些网络变得十分困难</li></ul><h2 id="three-tier-dcn" tabindex="-1"><a class="header-anchor" href="#three-tier-dcn" aria-hidden="true">#</a> Three-Tier DCN</h2><figure><img src="https://pic.hanjiaming.com.cn/2024/05/05/de7ed0153421e.png" alt="1714924005701.png" tabindex="0" loading="lazy"><figcaption>1714924005701.png</figcaption></figure><p>The three-tier DCN architecture follows <u>a multi-rooted tree based network topology</u> 「基于多根树的网络拓扑」composed of three layers of network switches, namely access 「接入层」, aggregate 「汇聚层」, and core layers「核心层」.</p><figure><img src="https://pic.hanjiaming.com.cn/2024/05/05/4bf626d8c0549.png" alt="1714924203368.png" tabindex="0" loading="lazy"><figcaption>1714924203368.png</figcaption></figure><p>From a Vertical Traffic Model「垂直交通模式」 to a Horizontal Traffic Model「水平交通模型」.</p><figure><img src="https://pic.hanjiaming.com.cn/2024/05/05/b703ea5f9a0b3.png" alt="1714924414875.png" tabindex="0" loading="lazy"><figcaption>1714924414875.png</figcaption></figure><ul><li>Past: 传统数据中心 80% 的流量是 &quot;北向南&quot;（或垂直流量）（外部用户和内部服务器之间的数据转发）。</li><li>Now: 云计算数据中心 70% 的流量是 &quot;东向西 &quot;的 <ul><li>（Facebook、Google、Amazon）-在内部服务器之间转发的数据。例如，搜索、MapReduce、VM 迁移</li></ul></li></ul><div class="hint-container warning"><p class="hint-container-title">Three-Tier DCN: Key Weakness</p><ul><li>Unable to handle the growing demand of cloud computing (We Move From a Vertical Traffic Model to a Horizontal Traffic Model)</li><li>The higher layers of the three-tier DCN are highly oversubscribed 「高度超额认购」 -&gt; become the bottleneck「瓶颈」. <ul><li>&quot;高度订阅&quot;在这里指的是，网络的这一部分有大量的数据流需要处理，但是处理能力有限，无法满足所有的需求。因此，这就成为了约束整个网络性能的瓶颈。</li><li>接入层负责连接服务器，汇聚层负责汇集接入层的数据，而核心层负责处理汇聚层汇集的数据。<br> 如果核心层和汇聚层的处理能力不足，那么就会出现瓶颈，限制了整个网络的性能。</li></ul></li><li>Other Issues: scalability, fault tolerance, energy efficiency,and cross-sectional bandwidth</li></ul></div><h2 id="fat-tree-architecture" tabindex="-1"><a class="header-anchor" href="#fat-tree-architecture" aria-hidden="true">#</a> Fat-Tree Architecture</h2><figure><img src="https://pic.hanjiaming.com.cn/2024/05/06/d0e88d6c8807e.png" alt="1714924837740.png" tabindex="0" loading="lazy"><figcaption>1714924837740.png</figcaption></figure><h3 id="practical-fat-tree-architecture" tabindex="-1"><a class="header-anchor" href="#practical-fat-tree-architecture" aria-hidden="true">#</a> Practical Fat-Tree Architecture</h3><figure><img src="https://pic.hanjiaming.com.cn/2024/05/06/099609198b6f7.png" alt="1714925349028.png" tabindex="0" loading="lazy"><figcaption>1714925349028.png</figcaption></figure><h3 id="fat-tree-dcn-architecture" tabindex="-1"><a class="header-anchor" href="#fat-tree-dcn-architecture" aria-hidden="true">#</a> Fat-Tree DCN Architecture</h3><p><strong>Fat-Tree：一种特殊类型的 Clos Networks</strong></p><p>K-ary fat tree: <strong>three-layer</strong> topology (edge,aggregation and core)</p><figure><img src="https://pic.hanjiaming.com.cn/2024/05/09/974dce30b6095.png" alt="1715230882178.png" tabindex="0" loading="lazy"><figcaption>1715230882178.png</figcaption></figure><p>假设一个 k-ary(每个节点有不超过 k 个子节点)的三层 Fat-Tree 拓扑:</p><ul><li>Core 个数 = (k/2)^2</li><li>POD 个数 = k <ul><li>每个 POD 的 Aggregation 交换机 = k/2</li><li>每个 POD 的 Edge 交换机 = k/2</li></ul></li><li>每个 Edge 连接 k/2 个 终端</li><li>每个 Edge 剩余 k/2 个口连接 POD 内 k/2 个 Aggregation 交换机</li></ul><p>可以计算出，支持的服务器个数为 k * (k/2) * (k/2) = (k^3)/4</p><p>不同 POD 下服务器间等价路径数 (k/2) * (k/2) = (k^2)/4</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>上图 为最简单的 k=4 时的 Fat-Tree 拓扑，连在同一个接入交换机下的服务器处于同一个子网，他们之间的通信走二层报文交 换。不同接入交换机下的服务器通信，需要走路由。</p></div><p><strong>Fat-Tree</strong> 的缺陷</p><ul><li>Fat-Tree 的扩展规模在理论上受限于核心层交换机的端口数目，不利于数据中心的长期发展要求;</li><li>对于 POD 内部，Fat-Tree 容错性能差，对底层交换设备故障非常敏感，当底层交换设备故障时，难以保证服务质量;</li></ul><div class="hint-container info"><p class="hint-container-title">Clos Network</p><p>旧貌换新颜</p><p>Clos 网络是一种多级电路交换网络，由 Charles Clos 于 1952 年首次正式提出。</p><ul><li><strong>Clos networks have 3 stages</strong></li><li>Each stage is made up of a number of crossbar switches (r-m-r)</li><li>Completely non-blocking if m &gt;= 2n-1</li></ul></div><h2 id="fat-tree-dcn" tabindex="-1"><a class="header-anchor" href="#fat-tree-dcn" aria-hidden="true">#</a> Fat-Tree DCN</h2><p>Why Fat-Tree?</p><ul><li>Full bisection「二分法」 bandwidth (non-blocking east-to-west)</li><li>每一层的聚合带宽相同（上行链路数与下行链路数相同）</li></ul><p>可使用廉价/较小的交换机构建统一容量的交换机</p><ul><li>每个端口支持与终端主机相同的速度</li><li>如果数据包沿可用路径均匀分布「distributed uniform」，所有设备都能以线速传输</li></ul><figure><img src="https://pic.hanjiaming.com.cn/2024/05/09/c6a7600e088d9.png" alt="1715233115253.png" tabindex="0" loading="lazy"><figcaption>1715233115253.png</figcaption></figure><p>Fat-Tree DCN Bisectional Bandwidth</p><p>将 N 个节点分成两组，每组 N/2 个节点，使得这两组之间的带宽最小：即二分「Bisectional」带宽</p><figure><img src="https://pic.hanjiaming.com.cn/2024/05/09/17047c085059a.png" alt="1715233187145.png" tabindex="0" loading="lazy"><figcaption>1715233187145.png</figcaption></figure><h2 id="dcell-dcn" tabindex="-1"><a class="header-anchor" href="#dcell-dcn" aria-hidden="true">#</a> DCell DCN</h2><p>DCell 是一种以服务器为中心的混合 DCN 架构，其中一台服务器直接连接到许多其他服务器（即服务器同时充当路由器）。</p><p>高层DCell由许多低层DCell构成，同一层的DCell之间是全连接的。</p><img src="https://pic.hanjiaming.com.cn/2024/05/09/c38d2bb5e5199.png" alt="1715233540058.png" style="zoom:50%;"><p><strong>DCell offers immense scalability</strong></p><ul><li>Best performance under switch failures</li><li>Near shortest-path routing even in the presence of severe link or node failures. 「即使出现严重的链路或节点故障，也能接近最短路径路由。」</li></ul><p>Weakness:</p><ul><li>在网络负荷较重、流量模式为 &quot;一对多 &quot;的情况下，性能极差。</li><li>DCell assumes a server has four or more NICs → cabling complexity「布线复杂性」</li></ul><h2 id="dc-networking-evaluation" tabindex="-1"><a class="header-anchor" href="#dc-networking-evaluation" aria-hidden="true">#</a> DC Networking Evaluation</h2><p>As the number of nodes within the DC architecture increases, <strong>DCell experiences higher network delays and low throughput</strong>.(Fat Tree is better)</p><figure><img src="https://pic.hanjiaming.com.cn/2024/05/09/e0e3962423cc5.png" alt="1715233818553.png" tabindex="0" loading="lazy"><figcaption>1715233818553.png</figcaption></figure><h2 id="summary" tabindex="-1"><a class="header-anchor" href="#summary" aria-hidden="true">#</a> Summary</h2><p>The tree-based ones are still dominant「dominant」 in the existing operational DCs.</p><ul><li>The traditional topology used so far is Fat Tree topology.</li><li>虽然 DCell 看起来很有前景，但在现实世界的云计算环境中，DCell 的实施却相当困难（而且有限）。 <ul><li>需要添加大量主机来扩展基础设施</li></ul></li></ul>',52),l=[r];function o(c,g){return i(),a("div",null,l)}const h=e(n,[["render",o],["__file","dcn.html.vue"]]);export{h as default};
