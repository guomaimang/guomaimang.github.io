const e=JSON.parse('{"key":"v-2424186e","path":"/note/cs/os/system-programming/Process.html","title":"Unix Processes","lang":"zh-CN","frontmatter":{"article":false,"date":"2022-10-26T00:00:00.000Z","order":3,"headerDepth":2,"description":"Unix Processes A process is an instance of a program in execution (the execution of the program has started but has not yet terminated). Process is dynamic while program is static. 进程是竞争资源的基本单位。特别是，它是 CPU 调度程序的基本活动实体。 如何理解：一个进程是{s(e, i)}的时间序列，其中每两个连续状态s(e, j)和s(e, j+1)之间存在由程序逻辑和操作系统决定的因果关系。「状态机模型」","head":[["meta",{"property":"og:url","content":"https://guomaimang.github.io/note/cs/os/system-programming/Process.html"}],["meta",{"property":"og:site_name","content":"Hirsun HAN (Jiaming)"}],["meta",{"property":"og:title","content":"Unix Processes"}],["meta",{"property":"og:description","content":"Unix Processes A process is an instance of a program in execution (the execution of the program has started but has not yet terminated). Process is dynamic while program is static. 进程是竞争资源的基本单位。特别是，它是 CPU 调度程序的基本活动实体。 如何理解：一个进程是{s(e, i)}的时间序列，其中每两个连续状态s(e, j)和s(e, j+1)之间存在由程序逻辑和操作系统决定的因果关系。「状态机模型」"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-15T05:33:29.000Z"}],["meta",{"property":"article:author","content":"Hirsun (HAN Jiaming)"}],["meta",{"property":"article:published_time","content":"2022-10-26T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-15T05:33:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"Unix Processes\\",\\"description\\":\\"Unix Processes A process is an instance of a program in execution (the execution of the program has started but has not yet terminated). Process is dynamic while program is static. 进程是竞争资源的基本单位。特别是，它是 CPU 调度程序的基本活动实体。 如何理解：一个进程是{s(e, i)}的时间序列，其中每两个连续状态s(e, j)和s(e, j+1)之间存在由程序逻辑和操作系统决定的因果关系。「状态机模型」\\"}"]]},"headers":[{"level":2,"title":"如何将程序变成进程","slug":"如何将程序变成进程","link":"#如何将程序变成进程","children":[]},{"level":2,"title":"线程的概念 (轻量级进程)","slug":"线程的概念-轻量级进程","link":"#线程的概念-轻量级进程","children":[]},{"level":2,"title":"Process Image","slug":"process-image","link":"#process-image","children":[]},{"level":2,"title":"Process management","slug":"process-management","link":"#process-management","children":[]},{"level":2,"title":"通用流程管理元信息","slug":"通用流程管理元信息","link":"#通用流程管理元信息","children":[]},{"level":2,"title":"线程实现和编程接口","slug":"线程实现和编程接口","link":"#线程实现和编程接口","children":[{"level":3,"title":"wait","slug":"wait","link":"#wait","children":[]},{"level":3,"title":"孤儿进程和僵尸进程","slug":"孤儿进程和僵尸进程","link":"#孤儿进程和僵尸进程","children":[]},{"level":3,"title":"exec","slug":"exec","link":"#exec","children":[]}]},{"level":2,"title":"Process termination","slug":"process-termination","link":"#process-termination","children":[]},{"level":2,"title":"Background Processes","slug":"background-processes","link":"#background-processes","children":[]},{"level":2,"title":"Daemons","slug":"daemons","link":"#daemons","children":[]}],"git":{"createdTime":1726378409000,"updatedTime":1726378409000,"contributors":[{"name":"hanjiaming","email":"47519540+guomaimang@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":20.5,"words":2050},"filePathRelative":"note/cs/os/system-programming/Process.md","localizedDate":"2022年10月26日","excerpt":"<h1> Unix Processes</h1>\\n<ul>\\n<li>A process is an instance of a program in execution (<strong>the execution of the program has started but has not yet terminated</strong>).</li>\\n<li>Process is dynamic while program is static.</li>\\n<li>进程是竞争资源的基本单位。特别是，它是 CPU 调度程序的基本活动实体。</li>\\n</ul>\\n<p>如何理解：一个进程是{s(e, i)}的时间序列，其中每两个连续状态s(e, j)和s(e, j+1)之间存在由程序逻辑和操作系统决定的因果关系。「状态机模型」</p>","autoDesc":true}');export{e as data};
