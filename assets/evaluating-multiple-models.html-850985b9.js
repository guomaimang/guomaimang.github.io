import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e as t}from"./app-0983f945.js";const e={},p=t(`<h1 id="evaluating-multiple-models" tabindex="-1"><a class="header-anchor" href="#evaluating-multiple-models" aria-hidden="true">#</a> Evaluating multiple models</h1><h2 id="针对不同问题的不同模型" tabindex="-1"><a class="header-anchor" href="#针对不同问题的不同模型" aria-hidden="true">#</a> 针对不同问题的不同模型</h2><ul><li>Size of the dataset「数据集的大小」 <ul><li>Fewer features = simpler model, faster training time</li><li>Some models require large amounts of data to perform well</li></ul></li><li>Interpretability「解释性」 <ul><li>有些模型更容易解释，这对利益相关者来说可能很重要</li><li>线性回归具有很高的可解释性，因为我们可以理解系数</li></ul></li><li>Flexibility <ul><li>通过减少对数据的假设，可以提高准确性</li><li>KNN是一个更加灵活的模型，不假设任何线性关系</li></ul></li></ul><h2 id="一切尽在指标中" tabindex="-1"><a class="header-anchor" href="#一切尽在指标中" aria-hidden="true">#</a> 一切尽在指标中</h2><ul><li>Regression model performance <ul><li>RMSE</li><li>R-squared</li></ul></li><li>Classification model performance: <ul><li>Accuracy</li><li>Confusion matrix</li><li>Precision, recall, F1-score</li><li>ROC AUC</li></ul></li></ul><p>训练几个模型并评估性能，开箱即用</p><h2 id="a-note-on-scaling" tabindex="-1"><a class="header-anchor" href="#a-note-on-scaling" aria-hidden="true">#</a> A note on scaling</h2><p>Models affected by scaling:</p><ul><li>KNN</li><li>Linear Regression (plus Ridge, Lasso)</li><li>Logistic Regression</li><li>Articial Neural Network</li></ul><p>Best to scale our data before evaluating models</p><h2 id="案例" tabindex="-1"><a class="header-anchor" href="#案例" aria-hidden="true">#</a> 案例</h2><h3 id="evaluating-classification-models" tabindex="-1"><a class="header-anchor" href="#evaluating-classification-models" aria-hidden="true">#</a> Evaluating classification models</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">import</span> StandardScaler
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>model_selection <span class="token keyword">import</span> cross_val_score<span class="token punctuation">,</span> KFold<span class="token punctuation">,</span> train_test_split
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>neighbors <span class="token keyword">import</span> KNeighborsClassifier
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>linear_model <span class="token keyword">import</span> LogisticRegression
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>tree <span class="token keyword">import</span> DecisionTreeClassifier
<span class="token comment"># sklearn.metrics</span>

X <span class="token operator">=</span> music<span class="token punctuation">.</span>drop<span class="token punctuation">(</span><span class="token string">&quot;genre&quot;</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>values
y <span class="token operator">=</span> music<span class="token punctuation">[</span><span class="token string">&quot;genre&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values

X_train<span class="token punctuation">,</span> X_test<span class="token punctuation">,</span> y_train<span class="token punctuation">,</span> y_test <span class="token operator">=</span> train_test_split<span class="token punctuation">(</span>X<span class="token punctuation">,</span> y<span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span>
scaler <span class="token operator">=</span> StandardScaler<span class="token punctuation">(</span><span class="token punctuation">)</span>
X_train_scaled <span class="token operator">=</span> scaler<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>X_train<span class="token punctuation">)</span>
X_test_scaled <span class="token operator">=</span> scaler<span class="token punctuation">.</span>transform<span class="token punctuation">(</span>X_test<span class="token punctuation">)</span>

models <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;Logistic Regression&quot;</span><span class="token punctuation">:</span> LogisticRegression<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;KNN&quot;</span><span class="token punctuation">:</span> KNeighborsClassifier<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;Decision Tree&quot;</span><span class="token punctuation">:</span> DecisionTreeClassifier<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
results <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

<span class="token keyword">for</span> model <span class="token keyword">in</span> models<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  kf <span class="token operator">=</span> KFold<span class="token punctuation">(</span>n_splits<span class="token operator">=</span><span class="token number">6</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">,</span> shuffle<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
  cv_results <span class="token operator">=</span> cross_val_score<span class="token punctuation">(</span>model<span class="token punctuation">,</span> X_train_scaled<span class="token punctuation">,</span> y_train<span class="token punctuation">,</span> cv<span class="token operator">=</span>kf<span class="token punctuation">)</span>
  results<span class="token punctuation">.</span>append<span class="token punctuation">(</span>cv_results<span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>boxplot<span class="token punctuation">(</span>results<span class="token punctuation">,</span> labels<span class="token operator">=</span>models<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://pic.hanjiaming.com.cn/2022/07/24/988e69a0ea921.png" alt="1658643014294.png" tabindex="0" loading="lazy"><figcaption>1658643014294.png</figcaption></figure><h3 id="test-set-performance" tabindex="-1"><a class="header-anchor" href="#test-set-performance" aria-hidden="true">#</a> Test set performance</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">for</span> name<span class="token punctuation">,</span> model <span class="token keyword">in</span> models<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X_train_scaled<span class="token punctuation">,</span> y_train<span class="token punctuation">)</span>
  test_score <span class="token operator">=</span> model<span class="token punctuation">.</span>score<span class="token punctuation">(</span>X_test_scaled<span class="token punctuation">,</span> y_test<span class="token punctuation">)</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;{} Test Set Accuracy: {}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> test_score<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://pic.hanjiaming.com.cn/2022/07/24/2752b70a4d8e6.png" alt="1658643269431.png" tabindex="0" loading="lazy"><figcaption>1658643269431.png</figcaption></figure><h3 id="pipeline-for-predicting-song-popularity" tabindex="-1"><a class="header-anchor" href="#pipeline-for-predicting-song-popularity" aria-hidden="true">#</a> Pipeline for predicting song popularity</h3>`,18),o=[p];function i(l,c){return s(),a("div",null,o)}const d=n(e,[["render",i],["__file","evaluating-multiple-models.html.vue"]]);export{d as default};
