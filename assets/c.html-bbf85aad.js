const e=JSON.parse('{"key":"v-2c0badda","path":"/note/cs/os/system-programming/c.html","title":"C 语言要点","lang":"zh-CN","frontmatter":{"article":false,"date":"2022-10-26T00:00:00.000Z","order":6,"headerDepth":2,"description":"C 语言要点 函数指针 如果在程序中定义了一个函数，那么在编译时系统就会为这个函数代码分配一段存储空间，这段存储空间的首地址称为这个函数的地址。而且函数名表示的就是这个地址。既然是地址我们就可以定义一个指针变量来存放，这个指针变量就叫作函数指针变量，简称函数指针。 函数指针是指向函数的指针变量。函数指针可以像一般函数一样，用于调用函数、传递参数。 如何用函数指针调用函数 int Func(int x); /*声明一个函数*/ int (*p) (int x); /*定义一个函数指针*/ p = Func; /*将Func函数的首地址赋给指针变量p*/","head":[["meta",{"property":"og:url","content":"https://guomaimang.github.io/note/cs/os/system-programming/c.html"}],["meta",{"property":"og:site_name","content":"Hirsun HAN (Jiaming)"}],["meta",{"property":"og:title","content":"C 语言要点"}],["meta",{"property":"og:description","content":"C 语言要点 函数指针 如果在程序中定义了一个函数，那么在编译时系统就会为这个函数代码分配一段存储空间，这段存储空间的首地址称为这个函数的地址。而且函数名表示的就是这个地址。既然是地址我们就可以定义一个指针变量来存放，这个指针变量就叫作函数指针变量，简称函数指针。 函数指针是指向函数的指针变量。函数指针可以像一般函数一样，用于调用函数、传递参数。 如何用函数指针调用函数 int Func(int x); /*声明一个函数*/ int (*p) (int x); /*定义一个函数指针*/ p = Func; /*将Func函数的首地址赋给指针变量p*/"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-15T05:33:29.000Z"}],["meta",{"property":"article:author","content":"Hirsun (HAN Jiaming)"}],["meta",{"property":"article:published_time","content":"2022-10-26T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-15T05:33:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"C 语言要点\\",\\"description\\":\\"C 语言要点 函数指针 如果在程序中定义了一个函数，那么在编译时系统就会为这个函数代码分配一段存储空间，这段存储空间的首地址称为这个函数的地址。而且函数名表示的就是这个地址。既然是地址我们就可以定义一个指针变量来存放，这个指针变量就叫作函数指针变量，简称函数指针。 函数指针是指向函数的指针变量。函数指针可以像一般函数一样，用于调用函数、传递参数。 如何用函数指针调用函数 int Func(int x); /*声明一个函数*/ int (*p) (int x); /*定义一个函数指针*/ p = Func; /*将Func函数的首地址赋给指针变量p*/\\"}"]]},"headers":[{"level":2,"title":"函数指针","slug":"函数指针","link":"#函数指针","children":[{"level":3,"title":"如何用函数指针调用函数","slug":"如何用函数指针调用函数","link":"#如何用函数指针调用函数","children":[]},{"level":3,"title":"示例","slug":"示例","link":"#示例","children":[]}]},{"level":2,"title":"C 结构体","slug":"c-结构体","link":"#c-结构体","children":[{"level":3,"title":"定义结构","slug":"定义结构","link":"#定义结构","children":[]},{"level":3,"title":"指向结构的指针","slug":"指向结构的指针","link":"#指向结构的指针","children":[]},{"level":3,"title":"深入理解","slug":"深入理解","link":"#深入理解","children":[]},{"level":3,"title":"初始化","slug":"初始化","link":"#初始化","children":[]}]},{"level":2,"title":"typedef","slug":"typedef","link":"#typedef","children":[{"level":3,"title":"为基本数据类型定义新的类型名","slug":"为基本数据类型定义新的类型名","link":"#为基本数据类型定义新的类型名","children":[]},{"level":3,"title":"为自定义数据类型定义类型名","slug":"为自定义数据类型定义类型名","link":"#为自定义数据类型定义类型名","children":[]}]},{"level":2,"title":"#define","slug":"define","link":"#define","children":[]},{"level":2,"title":"C 头文件","slug":"c-头文件","link":"#c-头文件","children":[]},{"level":2,"title":"错误输出函数 perror()","slug":"错误输出函数-perror","link":"#错误输出函数-perror","children":[]},{"level":2,"title":"extern 关键字","slug":"extern-关键字","link":"#extern-关键字","children":[{"level":3,"title":"变量的声明和定义","slug":"变量的声明和定义","link":"#变量的声明和定义","children":[]},{"level":3,"title":"案例分析","slug":"案例分析","link":"#案例分析","children":[]}]},{"level":2,"title":"const and pointer","slug":"const-and-pointer","link":"#const-and-pointer","children":[]},{"level":2,"title":"static 修饰函数","slug":"static-修饰函数","link":"#static-修饰函数","children":[]},{"level":2,"title":"Ref.","slug":"ref","link":"#ref","children":[]}],"git":{"createdTime":1726378409000,"updatedTime":1726378409000,"contributors":[{"name":"hanjiaming","email":"47519540+guomaimang@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":34.52,"words":3452},"filePathRelative":"note/cs/os/system-programming/c.md","localizedDate":"2022年10月26日","excerpt":"<h1> C 语言要点</h1>\\n<h2> 函数指针</h2>\\n<p>如果在程序中定义了一个函数，那么在编译时系统就会为这个函数代码分配一段存储空间，这段存储空间的首地址称为这个函数的地址。而且函数名表示的就是这个地址。既然是地址我们就可以定义一个指针变量来存放，这个指针变量就叫作函数指针变量，简称函数指针。</p>\\n<p>函数指针是指向函数的指针变量。函数指针可以像一般函数一样，用于调用函数、传递参数。</p>\\n<h3> 如何用函数指针调用函数</h3>\\n<div class=\\"language-c line-numbers-mode\\" data-ext=\\"c\\"><pre class=\\"language-c\\"><code><span class=\\"token keyword\\">int</span> <span class=\\"token function\\">Func</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> x<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>   <span class=\\"token comment\\">/*声明一个函数*/</span>\\n<span class=\\"token keyword\\">int</span> <span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">*</span>p<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> x<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>  <span class=\\"token comment\\">/*定义一个函数指针*/</span>\\np <span class=\\"token operator\\">=</span> Func<span class=\\"token punctuation\\">;</span>          <span class=\\"token comment\\">/*将Func函数的首地址赋给指针变量p*/</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
