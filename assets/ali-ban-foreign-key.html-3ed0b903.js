import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as e,c as r,e as n}from"./app-06102085.js";const i={},t=n('<h1 id="阿里规范中禁用外键的原因" tabindex="-1"><a class="header-anchor" href="#阿里规范中禁用外键的原因" aria-hidden="true">#</a> 阿里规范中禁用外键的原因</h1><p>在阿里开发规范中，为什么要禁用外键约束。为什么有的公司大力推广外键约束，而有的公司对外键约束嗤之以鼻？</p><h2 id="阿里数据库开发规范" tabindex="-1"><a class="header-anchor" href="#阿里数据库开发规范" aria-hidden="true">#</a> 阿里数据库开发规范</h2><p>阿里巴巴定期更新内部的Java开发规范，其中在数据库篇中明确规定：</p><p><strong>不得使用外键与级联，一切外键概念必须在应用层来解决</strong>。</p><p>这份文档虽然对外键的解释不太全面，但明确指出了在实际项目开发中不推荐使用外键。</p><h2 id="为什么不喜欢使用外键" tabindex="-1"><a class="header-anchor" href="#为什么不喜欢使用外键" aria-hidden="true">#</a> 为什么不喜欢使用外键</h2><h3 id="数据完整性带来的不便" tabindex="-1"><a class="header-anchor" href="#数据完整性带来的不便" aria-hidden="true">#</a> 数据完整性带来的不便</h3><ul><li><strong>测试和开发不便</strong>：增加、删除或更新外键约束时，必须保证数据的完整性。这会给测试和开发带来极大的不便。</li><li><strong>测试环境复杂</strong>：为了保证数据完整性，测试时需要在额外的十几张乃至几十张的主表中添加基础数据，增加了复杂性和工作量。</li></ul><h3 id="性能问题" tabindex="-1"><a class="header-anchor" href="#性能问题" aria-hidden="true">#</a> 性能问题</h3><p>额外的数据一致性校验查询</p><p><strong>额外查询</strong>：每次向订单明细表添加数据时，订单明细表必须额外查询订单表以检查订单ID是否存在，产生额外的处理，降低性能。</p><h3 id="并发性问题" tabindex="-1"><a class="header-anchor" href="#并发性问题" aria-hidden="true">#</a> 并发性问题</h3><img src="https://pic.hanjiaming.com.cn/2024/12/23/e8071edb86ae1.png" alt="1734955472935.png" style="zoom:33%;"><ul><li><strong>行级锁</strong>：外键约束会启用行级锁，主表在写入时会进入阻塞状态。</li><li><strong>共享锁与写锁</strong>：在并发环境下，每次由订单明细表向订单表检查关系时，会在订单表开启共享锁（读锁）。</li><li>如果有外部请求对订单ID进行写入或更新操作，会持有排他锁（写锁），<strong>导致订单明细表的写操作阻塞</strong>，形成大量线程积压，可能造成系统延迟和崩溃。</li></ul><h3 id="级联删除的问题" tabindex="-1"><a class="header-anchor" href="#级联删除的问题" aria-hidden="true">#</a> 级联删除的问题</h3><img src="https://pic.hanjiaming.com.cn/2024/12/23/d42802afd8846.png" alt="1734955615211.png" style="zoom:33%;"><ul><li><strong>多层级联删除</strong>：多层级联删除会让数据变得不可控。例如，删除订单类型表中的一条数据，会级联删除订单表和订单明细表中的相关数据，导致数据流向不可控，无法追溯。</li><li><strong>触发器问题</strong>：<strong>触发器在实际开发中也是严格禁用的</strong>，因为它们会在某个字段上绑定触发条件，导致数据操作不可控。</li></ul><h3 id="数据库层面的耦合" tabindex="-1"><a class="header-anchor" href="#数据库层面的耦合" aria-hidden="true">#</a> 数据库层面的耦合</h3><img src="https://pic.hanjiaming.com.cn/2024/12/23/6ac5870564d52.png" alt="1734955811231.png" style="zoom:33%;"><p><strong>数据迁移维护困难</strong>：数据库层面的数据关系产生耦合，迁移和维护困难。例如，将订单明细表从MySQL迁移到HBase，数据类型和存储位置改变，原有的主外键约束失效，需要在程序中增加校验代码，增加了复杂性。</p><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p>以上就是结合我自己的理解，为大家讲解的阿里巴巴不推荐使用外键约束的因素。如果你觉得内容讲得还不错，麻烦给我点个赞，谢谢大家。</p>',23),h=[t];function s(o,d){return e(),r("div",null,h)}const g=a(i,[["render",s],["__file","ali-ban-foreign-key.html.vue"]]);export{g as default};
