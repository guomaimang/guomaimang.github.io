const e=JSON.parse('{"key":"v-4302a42d","path":"/note/cs/programming/javascript/object/reference.html","title":"Reference","lang":"zh-CN","frontmatter":{"article":false,"date":"2022-04-29T00:00:00.000Z","author":"javascriptInfo, Hirsun","description":"Reference 变量存储的是变量的引用，而不是对象本身。 引用的复制 对象是“通过引用”被存储和复制的 字符串，数字，布尔值等 —— 始终是以“整体值”的形式被复制的。 当一个对象变量被复制 —— 引用被复制，而该对象自身并没有被复制。 例如： let user = { name: \\"John\\" }; let admin = user; // 复制引用","head":[["meta",{"property":"og:url","content":"https://guomaimang.github.io/note/cs/programming/javascript/object/reference.html"}],["meta",{"property":"og:site_name","content":"Hirsun HAN (Jiaming)"}],["meta",{"property":"og:title","content":"Reference"}],["meta",{"property":"og:description","content":"Reference 变量存储的是变量的引用，而不是对象本身。 引用的复制 对象是“通过引用”被存储和复制的 字符串，数字，布尔值等 —— 始终是以“整体值”的形式被复制的。 当一个对象变量被复制 —— 引用被复制，而该对象自身并没有被复制。 例如： let user = { name: \\"John\\" }; let admin = user; // 复制引用"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-15T05:33:29.000Z"}],["meta",{"property":"article:author","content":"javascriptInfo, Hirsun"}],["meta",{"property":"article:published_time","content":"2022-04-29T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-15T05:33:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"Reference\\",\\"description\\":\\"Reference 变量存储的是变量的引用，而不是对象本身。 引用的复制 对象是“通过引用”被存储和复制的 字符串，数字，布尔值等 —— 始终是以“整体值”的形式被复制的。 当一个对象变量被复制 —— 引用被复制，而该对象自身并没有被复制。 例如： let user = { name: \\\\\\"John\\\\\\" }; let admin = user; // 复制引用\\"}"]]},"headers":[{"level":2,"title":"引用的复制","slug":"引用的复制","link":"#引用的复制","children":[]},{"level":2,"title":"引用的比较","slug":"引用的比较","link":"#引用的比较","children":[]},{"level":2,"title":"对象的复制","slug":"对象的复制","link":"#对象的复制","children":[]},{"level":2,"title":"深拷贝","slug":"深拷贝","link":"#深拷贝","children":[]},{"level":2,"title":"const obj","slug":"const-obj","link":"#const-obj","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1726378409000,"updatedTime":1726378409000,"contributors":[{"name":"hanjiaming","email":"47519540+guomaimang@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":10.58,"words":1058},"filePathRelative":"note/cs/programming/javascript/object/reference.md","localizedDate":"2022年4月29日","excerpt":"<h1> Reference</h1>\\n<p>变量存储的是变量的引用，而不是对象本身。</p>\\n<h2> 引用的复制</h2>\\n<ul>\\n<li>对象是“通过引用”被存储和复制的</li>\\n<li>字符串，数字，布尔值等 —— 始终是以“整体值”的形式被复制的。</li>\\n</ul>\\n<p><strong>当一个对象变量被复制 —— 引用被复制，而该对象自身并没有被复制。</strong></p>\\n<p>例如：</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">let</span> user <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token literal-property property\\">name</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"John\\"</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">let</span> admin <span class=\\"token operator\\">=</span> user<span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 复制引用</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
