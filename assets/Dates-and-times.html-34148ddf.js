import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as i,c as o,a,b as n,d as c,e as s}from"./app-d8c979a2.js";const l={},d=s(`<h1 id="dates-and-times" tabindex="-1"><a class="header-anchor" href="#dates-and-times" aria-hidden="true">#</a> Dates and times</h1><h2 id="create-date" tabindex="-1"><a class="header-anchor" href="#create-date" aria-hidden="true">#</a> Create date</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Import date from datetime</span>
<span class="token keyword">from</span> datetime <span class="token keyword">import</span> date

<span class="token comment"># Create a date object</span>
hurricane_andrew <span class="token operator">=</span> date<span class="token punctuation">(</span><span class="token number">1992</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">)</span>

<span class="token comment"># Which day of the week is the date?</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>hurricane_andrew<span class="token punctuation">.</span>weekday<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Remember that Python counts days of the week starting from <strong>Monday as 0, Tuesday as 1, and so on</strong>.</p><h2 id="day-month-day" tabindex="-1"><a class="header-anchor" href="#day-month-day" aria-hidden="true">#</a> day, month &amp; day</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Create dates</span>
two_hurricanes_dates <span class="token operator">=</span> <span class="token punctuation">[</span>date<span class="token punctuation">(</span><span class="token number">2016</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">,</span> date<span class="token punctuation">(</span><span class="token number">2017</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>two_hurricanes_dates<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>year<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>two_hurricanes_dates<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>month<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>two_hurricanes_dates<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>day<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="min" tabindex="-1"><a class="header-anchor" href="#min" aria-hidden="true">#</a> min()</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Example numbers</span>
a <span class="token operator">=</span> <span class="token number">11</span>
b <span class="token operator">=</span> <span class="token number">14</span>
l <span class="token operator">=</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">]</span>
<span class="token comment"># Find the least least in the list</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">min</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token operator">&lt;&lt;</span><span class="token operator">&lt;</span> <span class="token number">11</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="iso8601-format-date" tabindex="-1"><a class="header-anchor" href="#iso8601-format-date" aria-hidden="true">#</a> ISO8601 format date</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> datetime <span class="token keyword">import</span> date
<span class="token comment"># Example date</span>
d <span class="token operator">=</span> date<span class="token punctuation">(</span><span class="token number">2017</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>
<span class="token comment"># ISO format: YYYY-MM-DD</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>2017-11-05
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span> <span class="token punctuation">[</span>d<span class="token punctuation">.</span>isoformat<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[&#39;2017-11-05&#39;]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="sorted" tabindex="-1"><a class="header-anchor" href="#sorted" aria-hidden="true">#</a> sorted()</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># A few dates that computers once had trouble with</span>
some_dates <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;2000-01-01&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1999-12-31&#39;</span><span class="token punctuation">]</span>
<span class="token comment"># Print them in order</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">sorted</span><span class="token punctuation">(</span>some_dates<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token punctuation">[</span><span class="token string">&#39;1999-12-31&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2000-01-01&#39;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="other-format-strftime" tabindex="-1"><a class="header-anchor" href="#other-format-strftime" aria-hidden="true">#</a> other format: strftime</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Example date</span>
d <span class="token operator">=</span> date<span class="token punctuation">(</span><span class="token number">2017</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">&quot;%Y&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># Format string with more text in it</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">&quot;Year is %Y&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># Format: YYYY/MM/DD</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">&quot;%Y/%m/%d&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>2017
Year is 2017
2017/01/05
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Print andrew in the format &#39;MONTH (YYYY)&#39;, using %B for the month&#39;s full name, which in this case will be August.</span>
<span class="token comment"># Import date</span>
<span class="token keyword">from</span> datetime <span class="token keyword">import</span> date
<span class="token comment"># Create a date object</span>
andrew <span class="token operator">=</span> date<span class="token punctuation">(</span><span class="token number">1992</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">)</span>
<span class="token comment"># Print the date in the format &#39;MONTH (YYYY)&#39;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>andrew<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">&#39;%B (%Y)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>August (1992)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Print andrew in the format &#39;YYYY-DDD&#39; (where DDD is the day of the year) using %j.</span>
<span class="token comment"># Import date</span>
<span class="token keyword">from</span> datetime <span class="token keyword">import</span> date
<span class="token comment"># Create a date object</span>
andrew <span class="token operator">=</span> date<span class="token punctuation">(</span><span class="token number">1992</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">)</span>
<span class="token comment"># Print the date in the format &#39;YYYY-DDD&#39;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>andrew<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">&quot;%Y-%j&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>1992-239
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="create-datetime" tabindex="-1"><a class="header-anchor" href="#create-datetime" aria-hidden="true">#</a> Create datetime</h2><img src="https://pic.hanjiaming.com.cn/2022/06/04/854fc5bcee447.png" alt="1654357522817.png" style="zoom:25%;"><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Import datetime</span>
<span class="token keyword">from</span> datetime <span class="token keyword">import</span> datetime
dt <span class="token operator">=</span> datetime<span class="token punctuation">(</span><span class="token number">2017</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>dt <span class="token operator">=</span> datetime<span class="token punctuation">(</span>year<span class="token operator">=</span><span class="token number">2017</span><span class="token punctuation">,</span> month<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> day<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> hour<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">,</span> minute<span class="token operator">=</span><span class="token number">23</span><span class="token punctuation">,</span> second<span class="token operator">=</span><span class="token number">25</span><span class="token punctuation">,</span> microsecond<span class="token operator">=</span><span class="token number">500000</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>dt<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>2017-10-01 15:23:25.500000
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="replace" tabindex="-1"><a class="header-anchor" href="#replace" aria-hidden="true">#</a> .replace()</h2><p>用于修改datetime对象的内容</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>dt_hr <span class="token operator">=</span> dt<span class="token punctuation">.</span>replace<span class="token punctuation">(</span>minute<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> second<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> microsecond<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>dt_hr<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>2017-10-01 15:00:00
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="iso8601-format-time" tabindex="-1"><a class="header-anchor" href="#iso8601-format-time" aria-hidden="true">#</a> ISO8601 Format time</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># ISO 8601 format
print(dt.isoformat())

&lt;&lt;&lt; 2017-12-30T15:19:13
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="datetime-strptime" tabindex="-1"><a class="header-anchor" href="#datetime-strptime" aria-hidden="true">#</a> datetime.strptime()</h2><p>该方法用于将str解析成 datetime 对象</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Import datetime</span>
<span class="token keyword">from</span> datetime <span class="token keyword">import</span> datetime
dt <span class="token operator">=</span> datetime<span class="token punctuation">.</span>strptime<span class="token punctuation">(</span><span class="token string">&quot;12/30/2017 15:19:13&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;%m/%d/%Y %H:%M:%S&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="timestamp" tabindex="-1"><a class="header-anchor" href="#timestamp" aria-hidden="true">#</a> timestamp</h2><p>时间戳，下面展示了将时间戳转换为 datetime 对象</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># A timestamp</span>
ts <span class="token operator">=</span> <span class="token number">1514665153.0</span>
<span class="token comment"># Convert to datetime and print</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>datetime<span class="token punctuation">.</span>fromtimestamp<span class="token punctuation">(</span>ts<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span>dt<span class="token punctuation">.</span>timestamp<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="timedelta" tabindex="-1"><a class="header-anchor" href="#timedelta" aria-hidden="true">#</a> timedelta</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Subtract two dates</span>
<span class="token comment"># 结果是 timedelta</span>
delta <span class="token operator">=</span> d2 <span class="token operator">-</span> d1
<span class="token keyword">print</span><span class="token punctuation">(</span>delta<span class="token punctuation">.</span>days<span class="token punctuation">)</span>
<span class="token number">29</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>两个 date 相减得到 timedate</li><li>一个 date 和 一个 timedelta 操作得到 一个date</li></ul><img src="https://pic.hanjiaming.com.cn/2022/06/05/a5cb8d8345c9c.png" alt="1654358719261.png" style="zoom:50%;"><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Subtract datetimes to create a timedelta</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>duration<span class="token punctuation">.</span>total_seconds<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;&lt;&lt; 1450.0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Create a one day and one second timedelta</span>
delta2 <span class="token operator">=</span> timedelta<span class="token punctuation">(</span>days<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> seconds<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>

<span class="token comment"># Create a negative timedelta of one week</span>
delta3 <span class="token operator">=</span> timedelta<span class="token punctuation">(</span>weeks<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>获取天数 td.days</li><li>获取秒数 td.total_seconds()</li></ul><h2 id="utc-offsets" tabindex="-1"><a class="header-anchor" href="#utc-offsets" aria-hidden="true">#</a> UTC offsets</h2><p><strong>目标是，数据时间点应当是统计地区的本地时间点。</strong></p><img src="https://pic.hanjiaming.com.cn/2022/06/05/34aa161df9bcd.png" alt="1654410668877.png" style="zoom:33%;"><h3 id="在创建datetime时指定-timezone" tabindex="-1"><a class="header-anchor" href="#在创建datetime时指定-timezone" aria-hidden="true">#</a> 在创建datetime时指定 timezone</h3><p>如果不指定 tzinfo， 则默认参数为 <code>tzinfo=timezone.utc</code></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Import relevant classes</span>
<span class="token keyword">from</span> datetime <span class="token keyword">import</span> datetime<span class="token punctuation">,</span> timedelta<span class="token punctuation">,</span> timezone
<span class="token comment"># US Eastern Standard time zone</span>
ET <span class="token operator">=</span> timezone<span class="token punctuation">(</span>timedelta<span class="token punctuation">(</span>hours<span class="token operator">=</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># Timezone-aware datetime</span>
dt <span class="token operator">=</span> datetime<span class="token punctuation">(</span><span class="token number">2017</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> tzinfo <span class="token operator">=</span> ET<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>dt<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>2017-12-30 15:09:03-05:00
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># India Standard time zone</span>
IST <span class="token operator">=</span> timezone<span class="token punctuation">(</span>timedelta<span class="token punctuation">(</span>hours<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> minutes<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="adjusting-timezone" tabindex="-1"><a class="header-anchor" href="#adjusting-timezone" aria-hidden="true">#</a> Adjusting timezone</h3><p>切换地区后顺带修改时间。但是不会修改表达的时间。记得要用 dt = dt.astimezone().</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Change original to match UTC</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>dt<span class="token punctuation">.</span>astimezone<span class="token punctuation">(</span>timezone<span class="token punctuation">.</span>utc<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>2017-12-30 15:09:03+00:00
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="changing-tzinfo" tabindex="-1"><a class="header-anchor" href="#changing-tzinfo" aria-hidden="true">#</a> changing tzinfo</h3><p>当时区错误时，可以直接修改时区而不修改时间了。但是会修改表达的时间。记得要用 dt = dt.replace().</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Change original to match UTC</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>dt<span class="token punctuation">.</span>astimezone<span class="token punctuation">(</span>timezone<span class="token punctuation">.</span>utc<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>2017-12-30 20:09:03+00:00
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="time-zone-database" tabindex="-1"><a class="header-anchor" href="#time-zone-database" aria-hidden="true">#</a> Time zone database</h3><p>实时数据库，联网更新。</p><p>Format: &#39;Continent/City&#39;</p><p>Examples:</p><ul><li>&#39;America/New_York&#39;</li><li>&#39;America/Mexico_City&#39;</li><li>&#39;Europe/London&#39;</li><li>&#39;Africa/Accra&#39;</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Imports</span>
<span class="token keyword">from</span> datetime <span class="token keyword">import</span> datetime
<span class="token keyword">from</span> dateutil <span class="token keyword">import</span> tz
<span class="token comment"># Eastern time</span>
et <span class="token operator">=</span> tz<span class="token punctuation">.</span>gettz<span class="token punctuation">(</span><span class="token string">&#39;America/New_York&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># Last ride</span>
last <span class="token operator">=</span> datetime<span class="token punctuation">(</span><span class="token number">2017</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> tzinfo<span class="token operator">=</span>et<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>last<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>2017-12-30 15:09:03-05:00
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>tz将考虑地区的夏令时。</p><figure><img src="https://pic.hanjiaming.com.cn/2022/06/05/a54b0edc0e31e.png" alt="1654412627354.png" tabindex="0" loading="lazy"><figcaption>1654412627354.png</figcaption></figure><h3 id="timedelta-1" tabindex="-1"><a class="header-anchor" href="#timedelta-1" aria-hidden="true">#</a> timedelta</h3><p>timedelta 计算不会考虑时区，直接对时间进行加减。这就是说，切换datetime的时区前后计算的结果会不同。</p><h2 id="daylight-saving-time" tabindex="-1"><a class="header-anchor" href="#daylight-saving-time" aria-hidden="true">#</a> Daylight Saving Time</h2><p>有些地方每年更换两次时钟，以创造更长的夏日夜晚，这叫夏令时（Daylight Saving Time）。</p><p>处理夏令时可能是处理日期和时间时最棘手的挑战之一。</p><figure><img src="https://pic.hanjiaming.com.cn/2022/06/05/96714c89870f8.png" alt="1654414684122.png" tabindex="0" loading="lazy"><figcaption>1654414684122.png</figcaption></figure><p>tz将考虑地区的夏令时。它将自动识别时间点并设置正确的offset。</p><figure><img src="https://pic.hanjiaming.com.cn/2022/06/05/624ac9543c343.png" alt="1654414990744.png" tabindex="0" loading="lazy"><figcaption>1654414990744.png</figcaption></figure><h3 id="tz-datetime-ambiguous" tabindex="-1"><a class="header-anchor" href="#tz-datetime-ambiguous" aria-hidden="true">#</a> tz.datetime_ambiguous()</h3><p><code>datetime_ambiguous()</code> in <code>tz</code> can tell us if a <code>datetime</code> is ambiguous.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>eastern <span class="token operator">=</span> tz<span class="token punctuation">.</span>gettz<span class="token punctuation">(</span><span class="token string">&#39;US/Eastern&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># 2017-11-05 01:00:00</span>
first_1am <span class="token operator">=</span> datetime<span class="token punctuation">(</span><span class="token number">2017</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>tzinfo <span class="token operator">=</span> eastern<span class="token punctuation">)</span>
tz<span class="token punctuation">.</span>datetime_ambiguous<span class="token punctuation">(</span>first_1am<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>True
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>上述datetime 使用夏令时，11-05恰好是夏令时回归正常时间的那一天，01:00会出现两次！！！</p><figure><img src="https://pic.hanjiaming.com.cn/2022/06/05/13f06f424cef7.png" alt="1654417041785.png" tabindex="0" loading="lazy"><figcaption>1654417041785.png</figcaption></figure><p>对于出现两次 1:00 - 2:00 应该怎么区分呢？</p><h3 id="tz-enfold" tabindex="-1"><a class="header-anchor" href="#tz-enfold" aria-hidden="true">#</a> tz.enfold()</h3><p>可以标记该时间点是时间重叠时的第二个时间段。注意也只是标记，不会影响timedelta结果，</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 2017-11-05 01:00:00 again</span>
second_1am <span class="token operator">=</span> datetime<span class="token punctuation">(</span><span class="token number">2017</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>tzinfo <span class="token operator">=</span> eastern<span class="token punctuation">)</span>
second_1am <span class="token operator">=</span> tz<span class="token punctuation">.</span>enfold<span class="token punctuation">(</span>second_1am<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果要计算时间差，勇当</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>first_1am <span class="token operator">=</span> first_1am<span class="token punctuation">.</span>astimezone<span class="token punctuation">(</span>tz<span class="token punctuation">.</span>UTC<span class="token punctuation">)</span>
second_1am <span class="token operator">=</span> second_1am<span class="token punctuation">.</span>astimezone<span class="token punctuation">(</span>tz<span class="token punctuation">.</span>UTC<span class="token punctuation">)</span>
<span class="token punctuation">(</span>second_1am <span class="token operator">-</span> first_1am<span class="token punctuation">)</span><span class="token punctuation">.</span>total_seconds<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>3600.0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="use-date-time-in-pandas" tabindex="-1"><a class="header-anchor" href="#use-date-time-in-pandas" aria-hidden="true">#</a> Use date&amp;time in Pandas</h2>`,96),u={href:"http://df.dt.xxx",target:"_blank",rel:"noopener noreferrer"},r=s(`<h3 id="read-file" tabindex="-1"><a class="header-anchor" href="#read-file" aria-hidden="true">#</a> read file</h3><p>读取文件作为dateframe时，可以指定列解析为dateframe。当然也可以后期处理。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Import W20529&#39;s rides in Q4 2017</span>
rides <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&#39;capital-onebike.csv&#39;</span><span class="token punctuation">,</span>
parse_dates <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Start date&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;End date&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment"># Or: 格式转换</span>
rides<span class="token punctuation">[</span><span class="token string">&#39;Start date&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> pd<span class="token punctuation">.</span>to_datetime<span class="token punctuation">(</span>rides<span class="token punctuation">[</span><span class="token string">&#39;Start date&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token builtin">format</span> <span class="token operator">=</span> <span class="token string">&quot;%Y-%m-%d %H:%M:%S&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="df-resample" tabindex="-1"><a class="header-anchor" href="#df-resample" aria-hidden="true">#</a> df.resample()</h3><p>时间序列数据在数据科学项目中很常见。 通常，可能会对将时序数据重新采样到要分析数据的频率或从数据中汲取更多见解的频率感兴趣。</p><p>向下采样和执行聚合：下采样是将一个时间序列重新采样到一个更大的时间框架。例如，从几分钟到几小时，从几天到几年。<strong>结果的行数将减少，并且可以使用mean()、min()、max()、sum()、size()、value_counts()等聚合值，和groupby相似。</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># on 指定列</span>
<span class="token comment"># D 表示精确到天, M 表示精确到月</span>
rides<span class="token punctuation">.</span>resample<span class="token punctuation">(</span><span class="token string">&#39;D&#39;</span><span class="token punctuation">,</span> on <span class="token operator">=</span> <span class="token string">&#39;Start date&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Start date
2017-10-31    108
2017-11-30    103
2017-12-31     79
Freq: M, dtype: int64
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要注意的是，采样后不是dataFrame, 而是 DatetimeIndexResampler，不可以打印。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Resample rides to be monthly on the basis of Start date</span>
monthly_rides <span class="token operator">=</span> rides<span class="token punctuation">.</span>resample<span class="token punctuation">(</span><span class="token string">&#39;M&#39;</span><span class="token punctuation">,</span> on <span class="token operator">=</span> <span class="token string">&#39;Start date&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;Member type&#39;</span><span class="token punctuation">]</span>

<span class="token comment"># Take the ratio of the .value_counts() over the total number of rides</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>monthly_rides<span class="token punctuation">.</span>value_counts<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> monthly_rides<span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Start date  Member type
2017-10-31  Member         0.769
            Casual         0.231
2017-11-30  Member         0.825
            Casual         0.175
2017-12-31  Member         0.861
            Casual         0.139
Name: Member type, dtype: float64
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Group rides by member type, and resample to the month</span>
grouped <span class="token operator">=</span> rides<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;Member type&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>resample<span class="token punctuation">(</span><span class="token string">&#39;M&#39;</span><span class="token punctuation">,</span> on <span class="token operator">=</span> <span class="token string">&quot;Start date&quot;</span><span class="token punctuation">)</span>

<span class="token comment"># Print the median duration for each group</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>grouped<span class="token punctuation">[</span><span class="token string">&quot;Duration&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>median<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Member type  Start date
Casual       2017-10-31    1636.0
             2017-11-30    1159.5
             2017-12-31     850.0
Member       2017-10-31     671.0
             2017-11-30     655.0
             2017-12-31     387.5
Name: Duration, dtype: float64
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>采样到2天：</p><figure><img src="https://pic.hanjiaming.com.cn/2022/06/05/7c045599fe54b.png" alt="1654421684726.png" tabindex="0" loading="lazy"><figcaption>1654421684726.png</figcaption></figure><h3 id="summarizing-data" tabindex="-1"><a class="header-anchor" href="#summarizing-data" aria-hidden="true">#</a> Summarizing data</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># 离开船坞的时间百分比
rides[&#39;Duration&#39;].sum() / timedelta(days=91)

&lt;&lt;&lt; 0.04348417785917786
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># First ride per group</span>
rides<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;Member type&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>first<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="timezones-in-pandas" tabindex="-1"><a class="header-anchor" href="#timezones-in-pandas" aria-hidden="true">#</a> Timezones in Pandas</h3><p>带有timezone 和 不带有timezone 的pd.datetime元素类型是两种类型。</p><figure><img src="https://pic.hanjiaming.com.cn/2022/06/05/b604846d2fe95.png" alt="1654425906458.png" tabindex="0" loading="lazy"><figcaption>1654425906458.png</figcaption></figure><p>有些元素无法添加带有夏令时的时区，由于时间重叠。</p><p>这种情况只能用 NaT 来表示。</p><figure><img src="https://pic.hanjiaming.com.cn/2022/06/05/a37b8ef84cd60.png" alt="1654426111261.png" tabindex="0" loading="lazy"><figcaption>1654426111261.png</figcaption></figure><p>转换时区用</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Convert the Start date column to Europe/London</span>
rides<span class="token punctuation">[</span><span class="token string">&#39;Start date&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> rides<span class="token punctuation">[</span><span class="token string">&#39;Start date&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>dt<span class="token punctuation">.</span>tz_convert<span class="token punctuation">(</span><span class="token string">&quot;Europe/London&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>类似 Adjusting timezone</p><h3 id="dt-day-name" tabindex="-1"><a class="header-anchor" href="#dt-day-name" aria-hidden="true">#</a> dt.day_name()</h3><img src="https://pic.hanjiaming.com.cn/2022/06/05/9de5f837862a6.png" alt="1654426156604.png" style="zoom:33%;">`,29);function m(k,v){const e=p("ExternalLinkIcon");return i(),o("div",null,[d,a("p",null,[n("Pandas 包含了datetime的很多功能。只需通过 "),a("a",u,[n("df.dt.xxx"),c(e)]),n("() 访问即可。")]),r])}const g=t(l,[["render",m],["__file","Dates-and-times.html.vue"]]);export{g as default};
