import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e as t}from"./app-675452d1.js";const e={},p=t(`<h1 id="linear-relationship" tabindex="-1"><a class="header-anchor" href="#linear-relationship" aria-hidden="true">#</a> Linear Relationship</h1><h2 id="线性回归-单变量一次方回归" tabindex="-1"><a class="header-anchor" href="#线性回归-单变量一次方回归" aria-hidden="true">#</a> 线性回归/单变量一次方回归</h2><p>我们可以使用 linregress() 的结果来计算两个series的最佳拟合线。</p><p>有时候我们会非常地关心<strong>斜率</strong>，也就是变化率</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> scipy<span class="token punctuation">.</span>stats <span class="token keyword">import</span> linregress

<span class="token comment"># Extract the variables</span>
<span class="token comment"># linregress() 无法处理 Nan 值</span>
subset <span class="token operator">=</span> brfss<span class="token punctuation">.</span>dropna<span class="token punctuation">(</span>subset<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;INCOME2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;_VEGESU1&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment"># series1 &amp; series 2</span>
<span class="token comment"># xs 作为自变量， ys 作为待预测的属性</span>
xs <span class="token operator">=</span> subset<span class="token punctuation">[</span><span class="token string">&quot;INCOME2&quot;</span><span class="token punctuation">]</span> 
ys <span class="token operator">=</span> subset<span class="token punctuation">[</span><span class="token string">&quot;_VEGESU1&quot;</span><span class="token punctuation">]</span>

<span class="token comment"># Compute the linear regression</span>
res <span class="token operator">=</span> linregress<span class="token punctuation">(</span>xs<span class="token punctuation">,</span> ys<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>LinregressResult(slope=0.06988048092105019, 
                 intercept=1.5287786243363106, 
                 rvalue=0.11967005884864099, 
                 pvalue=1.378503916248713e-238, 
                 stderr=0.002110976356332333, 
                 intercept_stderr=0.013196467544093607)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在只需关心前两个值</p><ul><li>slope 斜率</li><li>intercept 纵截距</li></ul><p>即回归函数为<code>y = slope * x + intercept</code></p><img src="https://pic.hanjiaming.com.cn/2022/06/23/f9de300e95b0a.png" alt="1655915462579.png" style="zoom:50%;"><p>通常，在这之后我们需要将 拟合的直线 与 数据分布点/线 放到一张图中。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Plot the scatter plot</span>
<span class="token comment"># 数据分布图</span>
plt<span class="token punctuation">.</span>clf<span class="token punctuation">(</span><span class="token punctuation">)</span>
x_jitter <span class="token operator">=</span> xs <span class="token operator">+</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.15</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>xs<span class="token punctuation">)</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x_jitter<span class="token punctuation">,</span> ys<span class="token punctuation">,</span> <span class="token string">&#39;o&#39;</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.2</span><span class="token punctuation">)</span>

<span class="token comment"># Plot the line of best fit</span>
<span class="token comment"># 拟合的线</span>
fx <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>xs<span class="token punctuation">.</span><span class="token builtin">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> xs<span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
fy <span class="token operator">=</span> res<span class="token punctuation">.</span>intercept <span class="token operator">+</span> res<span class="token punctuation">.</span>slope <span class="token operator">*</span> fx
plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>fx<span class="token punctuation">,</span> fy<span class="token punctuation">,</span> <span class="token string">&#39;-&#39;</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.7</span><span class="token punctuation">)</span>

plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&#39;Income code&#39;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&#39;Vegetable servings per day&#39;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>ylim<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><img src="https://pic.hanjiaming.com.cn/2022/06/08/879417d51d06d.png" alt="1654701512717.png" style="zoom:67%;"><div class="hint-container tip"><p class="hint-container-title">使用 statsmodels.formula.api 进行单变量回归</p><p>普通最小二乘法(OLS，ordinary least squares)</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> statsmodels<span class="token punctuation">.</span>formula<span class="token punctuation">.</span>api <span class="token keyword">as</span> smf
<span class="token comment"># INCOME2 作为待预测属性(y), _VEGESU1 作为自变量(x)</span>
results <span class="token operator">=</span> smf<span class="token punctuation">.</span>ols<span class="token punctuation">(</span><span class="token string">&#39;INCOME2 ~ _VEGESU1&#39;</span><span class="token punctuation">,</span> data<span class="token operator">=</span>brfss<span class="token punctuation">)</span><span class="token punctuation">.</span>fit<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>results<span class="token punctuation">.</span>params<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Intercept 5.399903
 _VEGESU1 0.232515
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></div><div class="hint-container tip"><p class="hint-container-title">使用sns.regplot() 绘图</p><img src="https://pic.hanjiaming.com.cn/2022/06/23/a8f7ff51ceed7.png" alt="1655915615944.png" style="zoom:50%;"></div><div class="hint-container note"><p class="hint-container-title">使用 ols 把 分类数据 当做 x</p><p>相当于求每一类的平均值......</p><figure><img src="https://pic.hanjiaming.com.cn/2022/06/23/76f32a5fa9921.png" alt="1655915941512.png" tabindex="0" loading="lazy"><figcaption>1655915941512.png</figcaption></figure></div><h2 id="转换变量" tabindex="-1"><a class="header-anchor" href="#转换变量" aria-hidden="true">#</a> 转换变量</h2><h3 id="转换x" tabindex="-1"><a class="header-anchor" href="#转换x" aria-hidden="true">#</a> 转换x</h3><p><strong>Transforming variables 使得线性回归模型具有拟合非线性数据的能力。</strong></p><p>不妨 让 x = x<sup>2</sup>, 实现单元非线性回归</p><p>我们只需让</p><ol><li><code>xs = subset[&quot;INCOME2&quot;] ** 2 </code></li><li>绘图时需要注意不是线性，要多次取点画图，而不是最大最小值。</li></ol><h3 id="转换-x-和-y" tabindex="-1"><a class="header-anchor" href="#转换-x-和-y" aria-hidden="true">#</a> 转换 x 和 y</h3><p>如果我们绘制标准图，大部分点都被塞进了图的左下角，因此很难评估是否有合适的拟合。</p><p>通过对两个变量进行平方根的转换，数据在整个图中更加分散，而且点与线的关系相当密切。当你的数据具有右偏分布时，平方根是一种常见的转换。</p><div class="hint-container tip"><p class="hint-container-title">解释左偏和右偏</p><ul><li>样本从左到右变得更加稀疏：右偏分布</li><li>样本从右到左变得更加稀疏：左偏分布</li></ul></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Create qdrt_n_impressions and qdrt_n_clicks</span>
ad_conversion<span class="token punctuation">[</span><span class="token string">&quot;qdrt_n_impressions&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> ad_conversion<span class="token punctuation">[</span><span class="token string">&quot;n_impressions&quot;</span><span class="token punctuation">]</span>  <span class="token operator">**</span> <span class="token number">0.25</span>

ad_conversion<span class="token punctuation">[</span><span class="token string">&quot;qdrt_n_clicks&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> ad_conversion<span class="token punctuation">[</span><span class="token string">&quot;n_clicks&quot;</span><span class="token punctuation">]</span> <span class="token operator">**</span> <span class="token number">0.25</span>

plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># Plot using the transformed variables</span>
sns<span class="token punctuation">.</span>regplot<span class="token punctuation">(</span>x <span class="token operator">=</span> <span class="token string">&quot;qdrt_n_impressions&quot;</span><span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token string">&quot;qdrt_n_clicks&quot;</span><span class="token punctuation">,</span> data <span class="token operator">=</span> ad_conversion<span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>转换后，左图将变化到右图。</p><img src="https://pic.hanjiaming.com.cn/2022/06/24/94fb79821ce6b.png" alt="1656062681430.png" style="zoom:33%;"><h2 id="单变量多次方回归" tabindex="-1"><a class="header-anchor" href="#单变量多次方回归" aria-hidden="true">#</a> 单变量多次方回归</h2><p>不妨 让 x = x<sup>2</sup>, 实现单元非线性回归</p>`,31),i=[p];function o(c,l){return s(),a("div",null,i)}const d=n(e,[["render",o],["__file","linear.html.vue"]]);export{d as default};
