import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o,c,a as n,b as s,d as e,e as a}from"./app-78c70878.js";const l={},u=a(`<h1 id="application-of-pandas" tabindex="-1"><a class="header-anchor" href="#application-of-pandas" aria-hidden="true">#</a> Application of Pandas</h1><p>作者：韩佳明Hirsun。</p><p>笔者的建议是，不要用传统编程的思维去处理数据分析问题。<br> 这份笔记不妨作为你的字典，随用随查。</p><p>可以把 Pandas 当做高性能的 Excel。对于上万的行数据，Pandas 可能是处理数据的最佳工具！<br> Pandas 包含了很多有用的功能，节省了工程师很多时间，而且运行起来比单纯用 For 遍历每一行数据要高效的多。</p><h2 id="read-csv" tabindex="-1"><a class="header-anchor" href="#read-csv" aria-hidden="true">#</a> Read csv</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>movies <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&#39;tmdb_movies.csv&#39;</span><span class="token punctuation">,</span> index_col<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
medals <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&#39;medals_by_country_2016.csv&#39;</span><span class="token punctuation">,</span> index_col<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>
data <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">,</span> nrows <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">,</span> header <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token comment">#读前5行，原文件中没有column name</span>
data <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">,</span> sep<span class="token operator">=</span><span class="token string">&quot;\\t&quot;</span><span class="token punctuation">,</span> comment<span class="token operator">=</span><span class="token string">&quot;#&quot;</span><span class="token punctuation">,</span> na_values<span class="token operator">=</span><span class="token string">&#39;Nothing&#39;</span><span class="token punctuation">)</span> <span class="token comment"># 设定分隔符号，注释，na时的填入值</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="转换成为-dataframe" tabindex="-1"><a class="header-anchor" href="#转换成为-dataframe" aria-hidden="true">#</a> 转换成为 DataFrame</h2><h3 id="dict-to-dataframe" tabindex="-1"><a class="header-anchor" href="#dict-to-dataframe" aria-hidden="true">#</a> Dict to DataFrame</h3><h4 id="方法一" tabindex="-1"><a class="header-anchor" href="#方法一" aria-hidden="true">#</a> 方法一</h4><ul><li>key 是 column name</li><li>value用列表表示，是 每一列的所有值，</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;col_1&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> 
            <span class="token string">&#39;col_2&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">.</span>from_dict<span class="token punctuation">(</span>data<span class="token punctuation">)</span>

   col_1 col_2
<span class="token number">0</span>      <span class="token number">3</span>     a
<span class="token number">1</span>      <span class="token number">2</span>     b
<span class="token number">2</span>      <span class="token number">1</span>     c
<span class="token number">3</span>      <span class="token number">0</span>     d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="方法二" tabindex="-1"><a class="header-anchor" href="#方法二" aria-hidden="true">#</a> 方法二</h4><p>Specify <code>orient=&#39;index&#39;</code> to create the DataFrame using dictionary keys as rows:</p><ul><li>每一个条目代表一行</li><li>key 是 index</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;row_1&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;row_2&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">.</span>from_dict<span class="token punctuation">(</span>data<span class="token punctuation">,</span> orient<span class="token operator">=</span><span class="token string">&#39;index&#39;</span><span class="token punctuation">,</span> columns<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;C&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;D&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

       A  B  C  D
row_1  <span class="token number">3</span>  <span class="token number">2</span>  <span class="token number">1</span>  <span class="token number">0</span>
row_2  a  b  c  d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="list-to-dataframe" tabindex="-1"><a class="header-anchor" href="#list-to-dataframe" aria-hidden="true">#</a> List to DataFrame</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>tweets_data<span class="token punctuation">,</span> columns<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;text&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;lang&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="df-iterrows" tabindex="-1"><a class="header-anchor" href="#df-iterrows" aria-hidden="true">#</a> df.iterrows()</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>tweets_data<span class="token punctuation">,</span> columns<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;text&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;lang&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment"># Initialize list to store tweet counts</span>
clinton<span class="token punctuation">,</span> trump<span class="token punctuation">,</span> sanders<span class="token punctuation">,</span> cruz <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>

<span class="token comment"># Iterate through df, counting the number of tweets in which</span>
<span class="token comment"># each candidate is mentioned</span>
<span class="token keyword">for</span> index<span class="token punctuation">,</span> row <span class="token keyword">in</span> df<span class="token punctuation">.</span>iterrows<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    clinton <span class="token operator">+=</span> word_in_text<span class="token punctuation">(</span><span class="token string">&#39;clinton&#39;</span><span class="token punctuation">,</span> row<span class="token punctuation">[</span><span class="token string">&#39;text&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    trump <span class="token operator">+=</span> word_in_text<span class="token punctuation">(</span><span class="token string">&#39;trump&#39;</span><span class="token punctuation">,</span> row<span class="token punctuation">[</span><span class="token string">&#39;text&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    sanders <span class="token operator">+=</span> word_in_text<span class="token punctuation">(</span><span class="token string">&#39;sanders&#39;</span><span class="token punctuation">,</span> row<span class="token punctuation">[</span><span class="token string">&#39;text&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    cruz <span class="token operator">+=</span> word_in_text<span class="token punctuation">(</span><span class="token string">&#39;cruz&#39;</span><span class="token punctuation">,</span> row<span class="token punctuation">[</span><span class="token string">&#39;text&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="print-info" tabindex="-1"><a class="header-anchor" href="#print-info" aria-hidden="true">#</a> Print info</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span>dog<span class="token punctuation">)</span> <span class="token comment">#全部打印</span>
dogs<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 默认参数5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>dogs<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># some information</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>dogs[&quot;height_cm&quot;] &gt; 50
0 True
1 False
2 False
3 False
4 True
5 False
6 True
Name: height_cm, dtype: bool
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>dogs<span class="token punctuation">.</span>describe<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>      height_cm weight_kg
count 7.000000 7.000000
mean 49.714286 27.428571
std 17.960274 22.292429
min 18.000000 2.000000
25% 44.500000 19.500000
50% 49.000000 23.000000
75% 57.500000 27.000000
max 77.000000 74.000000
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>dogs<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&quot;which_column1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;which_column2&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span> 
<span class="token comment"># 打印指定列</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>区分下列用法</p>`,27),d=n("li",null,"df.shape: 描述行列数量",-1),r={href:"http://df.info",target:"_blank",rel:"noopener noreferrer"},k=n("li",null,"df.head(): 查看头部前几行",-1),m=n("li",null,"df.describe(): 查看数据平均值，最大最小值。",-1),v=n("li",null,"df.value_counts(): 统计每一种值有几个",-1),g=a(`<h2 id="column-index" tabindex="-1"><a class="header-anchor" href="#column-index" aria-hidden="true">#</a> Column &amp; index</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>dogs<span class="token punctuation">.</span>columns
dogs<span class="token punctuation">.</span>index

dogs_ind <span class="token operator">=</span> dogs<span class="token punctuation">.</span>set_index<span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span>
dogs_ind3 <span class="token operator">=</span> dogs<span class="token punctuation">.</span>set_index<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;breed&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;color&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> 

<span class="token comment"># 重置索引成为从0开始计数，drop为True将删除旧的索引，False将旧索引当做一列放入表中。</span>
dogs_ind<span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span>drop<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
dogs_ind<span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># as below</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><img src="https://pic.hanjiaming.com.cn/2022/02/02/a0afacea3e22d.png" alt="1643748598892.png" title="1643748598892.png"><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>dogs<span class="token punctuation">.</span>columns <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;phone&#39;</span><span class="token punctuation">]</span> <span class="token comment"># reset column name</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>column 是唯一的，而 index 不是唯一的。</p><p>可以使用 <code> df.index.is_unique</code> 判断 index是否唯一。</p><h2 id="sort" tabindex="-1"><a class="header-anchor" href="#sort" aria-hidden="true">#</a> Sort</h2><h3 id="sort-values" tabindex="-1"><a class="header-anchor" href="#sort-values" aria-hidden="true">#</a> sort_values()</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>dogs <span class="token operator">=</span> dogs<span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;which_column1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;which_c2&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>ascending <span class="token operator">=</span> <span class="token boolean">True</span><span class="token punctuation">)</span>
dogs <span class="token operator">=</span> dogs<span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;which_column1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;which_c2&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>ascending <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token boolean">True</span><span class="token punctuation">,</span><span class="token boolean">False</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sort-index" tabindex="-1"><a class="header-anchor" href="#sort-index" aria-hidden="true">#</a> sort_index()</h3><p>按索引由小到大排序</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>df <span class="token operator">=</span> df<span class="token punctuation">.</span>sort_index<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="过滤数据" tabindex="-1"><a class="header-anchor" href="#过滤数据" aria-hidden="true">#</a> 过滤数据</h2><h3 id="符号" tabindex="-1"><a class="header-anchor" href="#符号" aria-hidden="true">#</a> <code>[]</code> 符号</h3><h4 id="df-column-name" tabindex="-1"><a class="header-anchor" href="#df-column-name" aria-hidden="true">#</a> df[&#39;column_name&#39;]</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>dogs<span class="token punctuation">[</span><span class="token string">&quot;height_cm&quot;</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">50</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>0 True
1 False
2 False
3 False
4 True
5 False
6 True
Name: height_cm, dtype: bool
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>dogs<span class="token punctuation">[</span>dogs<span class="token punctuation">[</span><span class="token string">&quot;height_cm&quot;</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">50</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&amp; | # and or
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>is_black_or_brown <span class="token operator">=</span> dogs<span class="token punctuation">[</span><span class="token string">&quot;color&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>isin<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;Black&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Brown&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="过滤-row" tabindex="-1"><a class="header-anchor" href="#过滤-row" aria-hidden="true">#</a> 过滤 row</h4><p>需要注意的是，标题不占行。从0开始计数。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>4 df[0:] #第0行及之后的行，相当于df的全部数据，注意冒号是必须的
5 df[:2] #第2行之前的数据（不含第2行）
6 df[1:2] #第1行
7 df[1:3] #第1行到第2行（不含第3行）
8 df[‐1:] #最后一行
9 df[‐3:‐1] #倒数第3行到倒数第1行（不包含最后1行即倒数第1行，这里有点烦躁，因为从前数时从第0行开始，从后数就是‐1行开始，毕竟没有‐0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="filter-with-function" tabindex="-1"><a class="header-anchor" href="#filter-with-function" aria-hidden="true">#</a> Filter with function</h3><p><code>df.filter( True / False)</code></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Selecting the laureates that have received 2 or more prizes.</span>
nobel<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;full_name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> group<span class="token punctuation">:</span> <span class="token builtin">len</span><span class="token punctuation">(</span>group<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">2</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="drop" tabindex="-1"><a class="header-anchor" href="#drop" aria-hidden="true">#</a> drop</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Drop values using filtering</span>
movies <span class="token operator">=</span> movies<span class="token punctuation">[</span>movies<span class="token punctuation">[</span><span class="token string">&#39;avg_rating&#39;</span><span class="token punctuation">]</span> <span class="token operator">&lt;=</span> <span class="token number">5</span><span class="token punctuation">]</span>
<span class="token comment"># Drop values using .drop()</span>
movies<span class="token punctuation">.</span>drop<span class="token punctuation">(</span>movies<span class="token punctuation">[</span>movies<span class="token punctuation">[</span><span class="token string">&#39;avg_rating&#39;</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">.</span>index<span class="token punctuation">,</span> inplace <span class="token operator">=</span> <span class="token boolean">True</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>凡是会对原数组作出修改并返回一个新数组的，往往都有一个 inplace可选参数。如果手动设定为True（默认为False），那么原数组直接就被替换。也就是说，采用inplace=True之后，原数组名（如2和3情况所示）对应的内存值直接改变；</p><p>而采用inplace=False之后，原数组名对应的内存值并不改变，需要将新的结果赋给一个新的数组或者覆盖原数组的内存位置。</p><h3 id="loc" tabindex="-1"><a class="header-anchor" href="#loc" aria-hidden="true">#</a> Loc</h3><h4 id="df-loc-index-column" tabindex="-1"><a class="header-anchor" href="#df-loc-index-column" aria-hidden="true">#</a> df.loc[index,column]</h4><p>选取指定行，列的数据.</p><p><strong>包含边界值</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token number">2</span> df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span> <span class="token comment"># &#39;Snow&#39;</span>
<span class="token number">3</span> df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">]</span> <span class="token punctuation">]</span> <span class="token comment">#选取第0行到第2行，name列和age列的数据, 注意这里的行选取是包含下标的。</span>
<span class="token number">4</span> df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">]</span> <span class="token punctuation">]</span> <span class="token comment">#选取指定的第2行和第3行，name和age列的数据</span>

<span class="token number">5</span> df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">&#39;gender&#39;</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">&#39;M&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span> <span class="token comment">#选取gender列是M，name列的数据</span>
<span class="token number">6</span> df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">&#39;gender&#39;</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">&#39;M&#39;</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token comment">#选取gender列是M，name和age列的数据</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="df-loc-index-name" tabindex="-1"><a class="header-anchor" href="#df-loc-index-name" aria-hidden="true">#</a> df.loc[&quot;index_name&quot;]</h4><p>记住有且只有而且是第一个参数</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>dogs_ind3<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&quot;Labrador&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Chihuahua&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><img src="https://pic.hanjiaming.com.cn/2022/02/02/4be1fe78bddb2.png" alt="1643749517221.png" title="1643749517221.png"><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>dogs_ind3<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">&quot;Labrador&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Brown&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&quot;Chihuahua&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Tan&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><img src="https://pic.hanjiaming.com.cn/2022/02/02/51f7caf42ed47.png" alt="1643749602092.png" title="1643749602092.png"><h3 id="iloc-row-index-column-index" tabindex="-1"><a class="header-anchor" href="#iloc-row-index-column-index" aria-hidden="true">#</a> iloc[row_index, column_index]</h3><p>不包含边界</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token number">1</span> df<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token comment">#第0行第0列的数据，&#39;Snow&#39;</span>
<span class="token number">2</span> df<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token comment">#第1行第2列的数据，32</span>
<span class="token number">3</span> df<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token comment">#第1行和第3行，从第0列到第2列（不包含第2列）的数据</span>
<span class="token number">4</span> df<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token comment">#第1行到第3行（不包含第3行），第1列和第2列的数据</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="前几大后几大" tabindex="-1"><a class="header-anchor" href="#前几大后几大" aria-hidden="true">#</a> 前几大后几大</h3><p>找出某列数据前2大</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Picking out the first woman to win a Nobel Prize</span>
<span class="token comment"># ... YOUR CODE FOR TASK 5 ...</span>
nobel<span class="token punctuation">[</span>nobel<span class="token punctuation">[</span><span class="token string">&#39;sex&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&#39;Female&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>nsmallest<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;year&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th style="text-align:right;"></th><th style="text-align:right;">year</th><th style="text-align:right;">category</th><th style="text-align:right;">prize</th><th style="text-align:right;">motivation</th><th style="text-align:right;">prize_share</th><th style="text-align:right;">laureate_id</th><th style="text-align:right;">laureate_type</th><th style="text-align:right;">full_name</th><th style="text-align:right;">birth_date</th><th style="text-align:right;">birth_city</th><th style="text-align:right;">...</th><th style="text-align:right;">sex</th><th style="text-align:right;">organization_name</th><th style="text-align:right;">organization_city</th><th style="text-align:right;">organization_country</th><th style="text-align:right;">death_date</th><th style="text-align:right;">death_city</th><th style="text-align:right;">death_country</th><th style="text-align:right;">usa_born_winner</th><th style="text-align:right;">decade</th><th style="text-align:right;">female_winner</th></tr></thead><tbody><tr><td style="text-align:right;">19</td><td style="text-align:right;">1903</td><td style="text-align:right;">Physics</td><td style="text-align:right;">The Nobel Prize in Physics 1903</td><td style="text-align:right;">&quot;in recognition of the extraordinary services ...</td><td style="text-align:right;">1/4</td><td style="text-align:right;">6</td><td style="text-align:right;">Individual</td><td style="text-align:right;">Marie Curie, née Sklodowska</td><td style="text-align:right;">1867-11-07</td><td style="text-align:right;">Warsaw</td><td style="text-align:right;">...</td><td style="text-align:right;">Female</td><td style="text-align:right;">NaN</td><td style="text-align:right;">NaN</td><td style="text-align:right;">NaN</td><td style="text-align:right;">1934-07-04</td><td style="text-align:right;">Sallanches</td><td style="text-align:right;">France</td><td style="text-align:right;">False</td><td style="text-align:right;">1900</td><td style="text-align:right;">True</td></tr><tr><td style="text-align:right;">29</td><td style="text-align:right;">1905</td><td style="text-align:right;">Peace</td><td style="text-align:right;">The Nobel Peace Prize 1905</td><td style="text-align:right;">NaN</td><td style="text-align:right;">1/1</td><td style="text-align:right;">468</td><td style="text-align:right;">Individual</td><td style="text-align:right;">Baroness Bertha Sophie Felicita von Suttner, n...</td><td style="text-align:right;">1843-06-09</td><td style="text-align:right;">Prague</td><td style="text-align:right;">...</td><td style="text-align:right;">Female</td><td style="text-align:right;">NaN</td><td style="text-align:right;">NaN</td><td style="text-align:right;">NaN</td><td style="text-align:right;">1914-06-21</td><td style="text-align:right;">Vienna</td><td style="text-align:right;">Austria</td><td style="text-align:right;">False</td><td style="text-align:right;">1900</td><td style="text-align:right;">True</td></tr></tbody></table><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>display<span class="token punctuation">(</span>nobel<span class="token punctuation">.</span>nlargest<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="query" tabindex="-1"><a class="header-anchor" href="#query" aria-hidden="true">#</a> .query()</h2><p>和sql很相似</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># .query(&#39;SOME SELECTION STATEMENT&#39;)</span>
stocks<span class="token punctuation">.</span>query<span class="token punctuation">(</span><span class="token string">&#39;nike &gt;= 90&#39;</span><span class="token punctuation">)</span>
stocks<span class="token punctuation">.</span>query<span class="token punctuation">(</span><span class="token string">&#39;nike &gt; 90 and disney &lt; 140&#39;</span><span class="token punctuation">)</span>
stocks<span class="token punctuation">.</span>query<span class="token punctuation">(</span><span class="token string">&#39;nike &gt; 96 or disney &lt; 98&#39;</span><span class="token punctuation">)</span>
stocks_long<span class="token punctuation">.</span>query<span class="token punctuation">(</span><span class="token string">&#39;stock==&quot;disney&quot; or (stock==&quot;nike&quot; and close &lt; 90)&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="new-column" tabindex="-1"><a class="header-anchor" href="#new-column" aria-hidden="true">#</a> New Column</h2><h3 id="通过" tabindex="-1"><a class="header-anchor" href="#通过" aria-hidden="true">#</a> 通过 []</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>dogs<span class="token punctuation">[</span><span class="token string">&quot;height_m&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> dogs<span class="token punctuation">[</span><span class="token string">&quot;height_cm&quot;</span><span class="token punctuation">]</span> <span class="token operator">/</span> <span class="token number">100</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 新建的列是存在列的值的求函数结果</span>
<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
brics <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&quot;brics.csv&quot;</span><span class="token punctuation">,</span> index_col <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span>
brics<span class="token punctuation">[</span><span class="token string">&quot;name_length&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> brics<span class="token punctuation">[</span><span class="token string">&quot;country&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>brics<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><img src="https://pic.hanjiaming.com.cn/2022/02/03/4289b55c19f56.png" alt="1643841957415.png" style="zoom:33%;"><h3 id="通过-assign" tabindex="-1"><a class="header-anchor" href="#通过-assign" aria-hidden="true">#</a> 通过 assign</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># mass_g 是新的column的名称, data2是单列的df</span>
data <span class="token operator">=</span> data<span class="token punctuation">.</span>assign<span class="token punctuation">(</span> mass_g<span class="token operator">=</span>data2 <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><img src="https://pic.hanjiaming.com.cn/2022/06/23/d74b1612adf15.png" alt="1655916731095.png" style="zoom:45%;"><h2 id="built-in-function" tabindex="-1"><a class="header-anchor" href="#built-in-function" aria-hidden="true">#</a> Built-in function</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">#full name ，仅一部分是</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>.median() , .mode()</li><li>.min() , .max()</li><li>.var() , .std()</li><li>.sum()</li><li>.quantile() 分位数</li><li>.cumsum() 积和</li><li>.cummin()</li><li>.cumprod()</li><li>.corr() 相关系数（特征工程需要的!!!）</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>ride_sharing<span class="token punctuation">[</span><span class="token string">&#39;ride_dt&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
ride_sharing<span class="token punctuation">[</span><span class="token string">&#39;ride_dt&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span>
ride_sharing<span class="token punctuation">[</span><span class="token string">&#39;ride_dt&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>dogs<span class="token punctuation">[</span><span class="token string">&quot;height_cm&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>dogs_height_by_breed_vs_color<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token string">&quot;index&quot;</span><span class="token punctuation">)</span> <span class="token comment">#留下column name，对每行求平均值</span>
dogs_height_by_breed_vs_color<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token string">&quot;columns&quot;</span><span class="token punctuation">)</span><span class="token comment">#留下index name，对每一列求平均值</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="agg" tabindex="-1"><a class="header-anchor" href="#agg" aria-hidden="true">#</a> agg</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">pct30</span><span class="token punctuation">(</span>column<span class="token punctuation">)</span><span class="token punctuation">:</span>
	<span class="token keyword">return</span> column<span class="token punctuation">.</span>quantile<span class="token punctuation">(</span><span class="token number">0.3</span><span class="token punctuation">)</span>

dogs<span class="token punctuation">[</span><span class="token string">&quot;weight_kg&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>agg<span class="token punctuation">(</span>pct30<span class="token punctuation">)</span>
dogs<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&quot;weight_kg&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;height_cm&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>agg<span class="token punctuation">(</span><span class="token string">&quot;pct30&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>weight_kg 22.6
height_cm 45.4
dtype: float64
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>dogs<span class="token punctuation">[</span><span class="token string">&quot;weight_kg&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>cumsum<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>0 24
1 48
2 72
3 89
4 118
5 120
6 194
Name: weight_kg, dtype: int64
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="proportions" tabindex="-1"><a class="header-anchor" href="#proportions" aria-hidden="true">#</a> Proportions</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>unique_dogs<span class="token punctuation">[</span><span class="token string">&quot;breed&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value_counts<span class="token punctuation">(</span>normalize<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Labrador 			0.250
Chow Chow 		0.250
Schnauzer 		0.125
St. Bernard 	0.125
Poodle 				0.125
Chihuahua 		0.125
Name: breed, dtype: float64
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="groupby" tabindex="-1"><a class="header-anchor" href="#groupby" aria-hidden="true">#</a> Groupby</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>dogs<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&quot;color&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&quot;weight_kg&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span>
dogs<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;color&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;breed&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&quot;weight_kg&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span>
dogs<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;color&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;breed&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&quot;weight_kg&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;height_cm&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>color
Black    26.5
Brown    24.0
Gray     17.0
Tan      2.0
White    74.0
Name: weight_kg, dtype: float64

color	    breed
Black     Chow Chow 25
          Labrador  29
					Poodle    24
Brown     Chow Chow 24
					Labrador 24
Gray      Schnauzer 17
Tan 			Chihuahua 2
White     St. Bernard 74
Name: weight_kg, dtype: int64

											weight_kg  height_cm
color       breed
Black 			Labrador 	29 				59
						Poodle 		24 				43
Brown			  Chow Chow 24 				46
						Labrador 	24 				56
Gray 				Schnauzer 17 				49
Tan 				Chihuahua 2 				18
White 			St. Bernard 74 			77
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="size" tabindex="-1"><a class="header-anchor" href="#size" aria-hidden="true">#</a> .size()</h3><p>求group之后的每一个群组的行数</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>In <span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&quot;Degree_Type&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token punctuation">)</span>

Out<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
Degree_Type
Associates     <span class="token number">1477</span>
Bachelors       <span class="token number">727</span>
Certificate    <span class="token number">2152</span>
Graduate       <span class="token number">1993</span>
Non<span class="token operator">-</span>degree      <span class="token number">353</span>
dtype<span class="token punctuation">:</span> int64
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>区分.count()</p><figure><img src="https://pic.hanjiaming.com.cn/2022/02/03/d88bef996da3a.png" alt="1643903651772.png" tabindex="0" loading="lazy"><figcaption>1643903651772.png</figcaption></figure><h3 id="with-agg" tabindex="-1"><a class="header-anchor" href="#with-agg" aria-hidden="true">#</a> With agg</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>dogs<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&quot;color&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&quot;weight_kg&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>agg<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token builtin">min</span><span class="token punctuation">,</span> <span class="token builtin">max</span><span class="token punctuation">,</span> <span class="token builtin">sum</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>				min max sum
color
Black 	24 29 53
Brown 	24 24 48
Gray 		17 17 17
Tan 		2  2  2
White 	74 74 74
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="自定义方法" tabindex="-1"><a class="header-anchor" href="#自定义方法" aria-hidden="true">#</a> 自定义方法</h4><p><strong>记得给函数名称加引号</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>grant_licenses_ward<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;ward&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>agg<span class="token punctuation">(</span><span class="token string">&#39;funcName&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="with-dict" tabindex="-1"><a class="header-anchor" href="#with-dict" aria-hidden="true">#</a> with dict</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Group by column names and produce statistical summaries</span>
column_names <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;first_name&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;last_name&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;address&#39;</span><span class="token punctuation">]</span>
summaries <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;height&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;max&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;weight&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;mean&#39;</span><span class="token punctuation">}</span>

height_weight <span class="token operator">=</span> height_weight<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span>by <span class="token operator">=</span> column_names<span class="token punctuation">)</span><span class="token punctuation">.</span>agg<span class="token punctuation">(</span>summaries<span class="token punctuation">)</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="first-ride-per-group" tabindex="-1"><a class="header-anchor" href="#first-ride-per-group" aria-hidden="true">#</a> First ride per group</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># First ride per group</span>
rides<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;Member type&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>first<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="pivot" tabindex="-1"><a class="header-anchor" href="#pivot" aria-hidden="true">#</a> Pivot</h2><h3 id="不展开" tabindex="-1"><a class="header-anchor" href="#不展开" aria-hidden="true">#</a> 不展开</h3><p>由一个x确定多个指定列的值，然后对这多个值求函数结果。</p><p>此时不指定列的名称</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>dogs<span class="token punctuation">.</span>pivot_table<span class="token punctuation">(</span>values<span class="token operator">=</span><span class="token string">&quot;weight_kg&quot;</span><span class="token punctuation">,</span>index<span class="token operator">=</span><span class="token string">&quot;color&quot;</span> aggfunc <span class="token operator">=</span> np<span class="token punctuation">.</span>mean<span class="token punctuation">)</span> <span class="token comment"># 默认是平均值</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><img src="https://pic.hanjiaming.com.cn/2022/02/02/e23af2420576c.png" alt="1643746618329.png" title="1643746618329.png" style="zoom:50%;"><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>dogs<span class="token punctuation">.</span>pivot_table<span class="token punctuation">(</span>values<span class="token operator">=</span><span class="token string">&quot;weight_kg&quot;</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token string">&quot;color&quot;</span><span class="token punctuation">,</span> aggfunc<span class="token operator">=</span>np<span class="token punctuation">.</span>median<span class="token punctuation">)</span>
dogs<span class="token punctuation">.</span>pivot_table<span class="token punctuation">(</span>values<span class="token operator">=</span><span class="token string">&quot;weight_kg&quot;</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token string">&quot;color&quot;</span><span class="token punctuation">,</span> aggfunc<span class="token operator">=</span><span class="token punctuation">[</span>np<span class="token punctuation">.</span>mean<span class="token punctuation">,</span> np<span class="token punctuation">.</span>median<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># output as below</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><img src="https://pic.hanjiaming.com.cn/2022/02/02/cc1caa785d9e4.png" alt="1643746746596.png" title="1643746746596.png"><h3 id="展开" tabindex="-1"><a class="header-anchor" href="#展开" aria-hidden="true">#</a> 展开</h3><p>将某一列拿出来作为Column Name(x)，再拿出一列当y，由一个y和一个x确定多个指定列的值，然后对这多个值求函数结果。</p><p>适用于 y的种类有限，x的种类有限。</p><p>不推荐</p><p>以下三个等价</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>dogs<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;color&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;breed&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&quot;weight_kg&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span>
dogs<span class="token punctuation">.</span>pivot_table<span class="token punctuation">(</span>values<span class="token operator">=</span><span class="token string">&quot;weight_kg&quot;</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token string">&quot;color&quot;</span><span class="token punctuation">,</span> aggfunc<span class="token operator">=</span>np<span class="token punctuation">.</span>mean<span class="token punctuation">)</span>
dogs<span class="token punctuation">.</span>pivot_table<span class="token punctuation">(</span>values<span class="token operator">=</span><span class="token string">&quot;weight_kg&quot;</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token string">&quot;color&quot;</span><span class="token punctuation">,</span> columns<span class="token operator">=</span><span class="token string">&quot;breed&quot;</span><span class="token punctuation">)</span> <span class="token comment">#output as below</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><img src="https://pic.hanjiaming.com.cn/2022/02/02/7b121f124f9f6.png" alt="1643747745072.png" title="1643747745072.png"><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>dogs<span class="token punctuation">.</span>pivot_table<span class="token punctuation">(</span>values<span class="token operator">=</span><span class="token string">&quot;weight_kg&quot;</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token string">&quot;color&quot;</span><span class="token punctuation">,</span> columns<span class="token operator">=</span><span class="token string">&quot;breed&quot;</span><span class="token punctuation">,</span> fill_value<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>
dogs<span class="token punctuation">.</span>pivot_table<span class="token punctuation">(</span>values<span class="token operator">=</span><span class="token string">&quot;weight_kg&quot;</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token string">&quot;color&quot;</span><span class="token punctuation">,</span> columns<span class="token operator">=</span><span class="token string">&quot;breed&quot;</span><span class="token punctuation">,</span>
fill_value<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> margins<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span> <span class="token comment"># output as below</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><img src="https://pic.hanjiaming.com.cn/2022/02/02/8c0ae53c137c8.png" alt="1643748408567.png" title="1643748408567.png"><h2 id="melt" tabindex="-1"><a class="header-anchor" href="#melt" aria-hidden="true">#</a> .melt()</h2><p>Reshaping data with .melt()</p><p>相当于pivot 的反操作，从宽到长</p><figure><img src="https://pic.hanjiaming.com.cn/2022/02/03/819d2549f32af.png" alt="1643839793105.png" tabindex="0" loading="lazy"><figcaption>1643839793105.png</figcaption></figure><figure><img src="https://pic.hanjiaming.com.cn/2022/02/03/d1e5f3d8ba285.png" alt="1643839854995.png" tabindex="0" loading="lazy"><figcaption>1643839854995.png</figcaption></figure><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>social_fin_tall <span class="token operator">=</span> social_fin<span class="token punctuation">.</span>melt<span class="token punctuation">(</span>id_vars<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;financial&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;company&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
		value_vars<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;2018&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;2017&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
		var_name<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;year&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> value_name<span class="token operator">=</span><span class="token string">&#39;dollars&#39;</span><span class="token punctuation">)</span>

social_fin_tall <span class="token operator">=</span> social_fin<span class="token punctuation">.</span>melt<span class="token punctuation">(</span>id_vars<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;financial&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;company&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">#全显示 as below</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://pic.hanjiaming.com.cn/2022/02/03/2d48607f03459.png" alt="1643839916818.png" tabindex="0" loading="lazy"><figcaption>1643839916818.png</figcaption></figure><h2 id="iterrows" tabindex="-1"><a class="header-anchor" href="#iterrows" aria-hidden="true">#</a> iterrows</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
brics <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&quot;brics.csv&quot;</span><span class="token punctuation">,</span> index_col <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span>

<span class="token comment"># 拆包成 lab（标签），row(行)</span>
<span class="token keyword">for</span> lab<span class="token punctuation">,</span> row <span class="token keyword">in</span> brics<span class="token punctuation">.</span>iterrows<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span>lab<span class="token punctuation">)</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://pic.hanjiaming.com.cn/2022/02/03/16ca48b5c87ff.png" alt="CleanShot 2022-02-03 at 06.42.51@2x.png" tabindex="0" loading="lazy"><figcaption>CleanShot 2022-02-03 at 06.42.51@2x.png</figcaption></figure><img src="https://pic.hanjiaming.com.cn/2022/02/03/ad4337fe9467f.png" alt="1643841837126.png" style="zoom:50%;"><h2 id="value-counts" tabindex="-1"><a class="header-anchor" href="#value-counts" aria-hidden="true">#</a> value_counts()</h2><p>统计某一列中每一种值的个数。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Display the number of (possibly shared) Nobel Prizes handed</span>
<span class="token comment"># out between 1901 and 2016</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>nobel<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># Display the number of prizes won by male and female recipients.</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>nobel<span class="token punctuation">[</span><span class="token string">&quot;sex&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value_counts<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># Display the number of prizes won by the top 10 nationalities.</span>
nobel<span class="token punctuation">[</span><span class="token string">&#39;birth_country&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value_counts<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>911

Male      836
Female     49
Name: sex, dtype: int64

United States of America    259
United Kingdom               85
Germany                      61
France                       51
Sweden                       29
Japan                        24
Canada                       18
Netherlands                  18
Russia                       17
Italy                        17
Name: birth_country, dtype: int64
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 查看比例</span>
ri<span class="token punctuation">.</span>stop_outcome<span class="token punctuation">.</span>value_counts<span class="token punctuation">(</span>normalize<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Citation 0.890855
Warning 0.059351
Arrest Driver 0.031605
No Action 0.007211
N/D 0.007014
Arrest Passenger 0.003964
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="批量操作" tabindex="-1"><a class="header-anchor" href="#批量操作" aria-hidden="true">#</a> 批量操作</h2><p>一般的地，每一列数据都是可以同时操作的。以下有几个例子</p><h3 id="使用loc" tabindex="-1"><a class="header-anchor" href="#使用loc" aria-hidden="true">#</a> 使用loc</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Set all values above 27 to 27</span>
ride_sharing<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>ride_sharing<span class="token punctuation">[</span><span class="token string">&#39;tire_sizes&#39;</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> tire_sizes<span class="token punctuation">,</span> <span class="token string">&#39;tire_sizes&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">27</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用replace" tabindex="-1"><a class="header-anchor" href="#使用replace" aria-hidden="true">#</a> 使用replace</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Replace &quot;Miss&quot; with empty string &quot;&quot;</span>
airlines<span class="token punctuation">[</span><span class="token string">&#39;full_name&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> airlines<span class="token punctuation">[</span><span class="token string">&#39;full_name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">str</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&quot;Miss&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># this will replace &quot;Boston Celtics&quot; and &quot;Texas&quot; with &quot;Omega Warrior&quot;</span>
df<span class="token punctuation">.</span>replace<span class="token punctuation">(</span>to_replace <span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;Boston Celtics&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Texas&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> value <span class="token operator">=</span><span class="token string">&quot;Omega Warrior&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="修改值" tabindex="-1"><a class="header-anchor" href="#修改值" aria-hidden="true">#</a> 修改值</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>temp_fah <span class="token operator">=</span> temperatures<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>temperatures<span class="token punctuation">[</span><span class="token string">&#39;Temperature&#39;</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token string">&#39;Temperature&#39;</span><span class="token punctuation">]</span>
temp_cels <span class="token operator">=</span> <span class="token punctuation">(</span>temp_fah <span class="token operator">-</span> <span class="token number">32</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">5</span><span class="token operator">/</span><span class="token number">9</span><span class="token punctuation">)</span>
temperatures<span class="token punctuation">.</span>loc<span class="token punctuation">[</span>temperatures<span class="token punctuation">[</span><span class="token string">&#39;Temperature&#39;</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token string">&#39;Temperature&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> temp_cels
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要注意的是 <code>loc</code>会将裁切的表格复制到<code>temp_fah</code>而不是引用，因此需要第三步的重新赋值</p><h3 id="apply-整行-整列-全部" tabindex="-1"><a class="header-anchor" href="#apply-整行-整列-全部" aria-hidden="true">#</a> Apply 整行/整列/全部</h3>`,137),h={href:"https://zhuanlan.zhihu.com/p/148743842",target:"_blank",rel:"noopener noreferrer"},b=a(`<p>可以在数据表上进行批量操作的函数：</p><ul><li>有些函数是元素级别的操作，比如求平方 <code>np.square()</code>，针对的是每个元素。有些函数则是对元素集合级别的操作，这里元素集合指的是以列为单位，或者行为单位，比如求和<code>np.sum()</code>；这类函数默认是以列为单位操作，也可以指定参数 <code>axis=1</code> 来操作行。</li><li>至于函数的来源，可以python的内置函数，如 <code>np.square()</code>， 也可以是自定义的函数。自定义函数中，可以是用 <code>def</code> 关键字定义的函数，也可以是用 <code>lambda</code> 关键字自定义的函数。</li></ul><h4 id="内置函数" tabindex="-1"><a class="header-anchor" href="#内置函数" aria-hidden="true">#</a> 内置函数</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>np.square

df = pd.DataFrame([[1,2],
                   [3,5]], columns=list(&#39;AB&#39;))
df1 = df.apply(np.square)
print(df1)

		A   B
0   1   4
1   9  25
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="lambda函数模板" tabindex="-1"><a class="header-anchor" href="#lambda函数模板" aria-hidden="true">#</a> lambda函数模板</h4><ul><li>lambda x: 语句操作或者返回值</li><li>lambda x: 语句1 if 条件1 else 语句2</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>df = pd.DataFrame([[1,2],
                   [3,5]], columns=list(&#39;AB&#39;))
c = df[&#39;A&#39;].apply(lambda x: 111 if x&lt;2 else 0)
print(c)
	     A
0    111
1      0
Name: A, dtype: int64
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="def-自定义函数" tabindex="-1"><a class="header-anchor" href="#def-自定义函数" aria-hidden="true">#</a> def 自定义函数</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>def function(x):
    return np.square(x) # 求平方
    
df = pd.DataFrame([[1,2],
                   [3,5]], columns=list(&#39;AB&#39;))
df1 = df.apply(lambda x: function(x))
print(df1)

		A   B
0   1   4
1   9  25
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="操作单列所有元素" tabindex="-1"><a class="header-anchor" href="#操作单列所有元素" aria-hidden="true">#</a> 操作单列所有元素</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>df = pd.DataFrame([[1,2],
                   [3,5]], columns=list(&#39;AB&#39;))
c = df[&#39;A&#39;].apply(np.square)
print(c)

		 A    
0    1
1    9
Name: A, dtype: int64
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="操作单行所有元素" tabindex="-1"><a class="header-anchor" href="#操作单行所有元素" aria-hidden="true">#</a> 操作单行所有元素</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>df = pd.DataFrame([[1,2],
                   [3,5]], columns=list(&#39;AB&#39;))
c = df[2:3].apply(np.square)
print(c)

		 A    B
0    1    2
1    9		25
Name: A, dtype: int64
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="遍历列" tabindex="-1"><a class="header-anchor" href="#遍历列" aria-hidden="true">#</a> 遍历列</h4><p>适用于 整列求和 等操作。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>df = pd.DataFrame([[1,2],
                                     [3,5]], columns=list(&#39;AB&#39;))
df1 = df.apply(np.sum, axis=0)
print(df1)
A    4
B    7
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="遍历行" tabindex="-1"><a class="header-anchor" href="#遍历行" aria-hidden="true">#</a> 遍历行</h4><p>适用于 整行求和 等操作。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>df = pd.DataFrame([[1,2],
                   [3,5]], columns=list(&#39;AB&#39;))
df1 = df.apply(np.sum, axis=1)
print(df1)

0    3
1    8
dtype: int64
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="更改行名或列名" tabindex="-1"><a class="header-anchor" href="#更改行名或列名" aria-hidden="true">#</a> 更改行名或列名</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 将 column name 为 two 的更改为 twotwo</span>
df<span class="token punctuation">.</span>rename<span class="token punctuation">(</span>columns<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;two&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;twotwo&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span>

<span class="token comment"># 将 row name 为 a 的更改为 aa, b 的改为 bb</span>
df<span class="token punctuation">.</span>rename<span class="token punctuation">(</span>index<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;aa&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;bb&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span>

<span class="token comment"># 直接覆盖修改</span>
df<span class="token punctuation">.</span>columns<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;onon&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;twtw&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;thth&#39;</span><span class="token punctuation">]</span>
df<span class="token punctuation">.</span>index<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="移动数据" tabindex="-1"><a class="header-anchor" href="#移动数据" aria-hidden="true">#</a> 移动数据</h2><p>shift函数是对数据进行移动的操作，注意仅移动数据。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>df<span class="token punctuation">.</span>shift<span class="token punctuation">(</span>periods<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> axis <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://pic.hanjiaming.com.cn/2022/06/05/0cab578a0678b.png" alt="1654426806034.png" tabindex="0" loading="lazy"><figcaption>1654426806034.png</figcaption></figure><h2 id="write-csv" tabindex="-1"><a class="header-anchor" href="#write-csv" aria-hidden="true">#</a> Write CSV</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># saving the dataframe</span>
df<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span><span class="token string">&#39;file1.csv&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># saving the dataframe disable header</span>
df<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span><span class="token string">&#39;file2.csv&#39;</span><span class="token punctuation">,</span> header<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>

<span class="token comment"># saving the dataframe with specified sep</span>
df<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span><span class="token string">&#39;Users.csv&#39;</span><span class="token punctuation">,</span> sep<span class="token operator">=</span><span class="token string">&#39;\\t&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="提取值" tabindex="-1"><a class="header-anchor" href="#提取值" aria-hidden="true">#</a> 提取值</h2><p>上述的操作结果基本上都是 DataFrame， 而不是 一个具体的元素或者值。</p><h3 id="jupyter-直接读取的结果" tabindex="-1"><a class="header-anchor" href="#jupyter-直接读取的结果" aria-hidden="true">#</a> jupyter 直接读取的结果</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># The name of the youngest winner of the Nobel Prize as of 2016</span>
name <span class="token operator">=</span> nobel<span class="token punctuation">.</span>nsmallest<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&quot;full_name&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span><span class="token punctuation">)</span>
name
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><img src="https://pic.hanjiaming.com.cn/2022/06/01/227a344449056.png" alt="1654023030423.png" style="zoom:50%;"><h3 id="print-dataframe" tabindex="-1"><a class="header-anchor" href="#print-dataframe" aria-hidden="true">#</a> Print dataframe</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># The name of the youngest winner of the Nobel Prize as of 2016</span>
name <span class="token operator">=</span> nobel<span class="token punctuation">.</span>nsmallest<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&quot;full_name&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="获取元素" tabindex="-1"><a class="header-anchor" href="#获取元素" aria-hidden="true">#</a> 获取元素</h3><p>其实上面两个是一样的，都得到的都是dataframe</p><p>想到得到元素，可以用 loc 或者 iloc读取单列值</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># The name of the youngest winner of the Nobel Prize as of 2016</span>
nobel<span class="token punctuation">.</span>nsmallest<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&quot;full_name&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&#39;Malala Yousafzai&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="获取成为-numpy-ndarray" tabindex="-1"><a class="header-anchor" href="#获取成为-numpy-ndarray" aria-hidden="true">#</a> 获取成为 numpy.ndarray</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 获得一维数组</span>
y <span class="token operator">=</span> churn_df<span class="token punctuation">[</span><span class="token string">&quot;churn&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values

<span class="token comment"># 获得二维数组</span>
X <span class="token operator">=</span> churn_df<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&quot;total_day_charge&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;total_eve_charge&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="其他注意事项" tabindex="-1"><a class="header-anchor" href="#其他注意事项" aria-hidden="true">#</a> 其他注意事项</h2><h3 id="类型自动转换" tabindex="-1"><a class="header-anchor" href="#类型自动转换" aria-hidden="true">#</a> 类型自动转换？</h3><p>有的时候，当列表是一个元素的时候，可以不写成列表而直接写成一个字符串。尽管有的时候起作用，不过并不是所有情况都不报错。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>investors <span class="token operator">=</span> banking<span class="token punctuation">.</span>dropna<span class="token punctuation">(</span>subset<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;inv_amount&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">//</span>subset 只认列表
investors <span class="token operator">=</span> banking<span class="token punctuation">.</span>dropna<span class="token punctuation">(</span>subset<span class="token operator">=</span><span class="token string">&quot;inv_amount&quot;</span><span class="token punctuation">)</span> <span class="token operator">//</span> 这样写会报错
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="display-还是-print" tabindex="-1"><a class="header-anchor" href="#display-还是-print" aria-hidden="true">#</a> display() 还是 print()</h3><p>打印pandas的数据时，这两种就可以互相替换。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>display<span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>nobel<span class="token punctuation">)</span><span class="token punctuation">)</span>
display<span class="token punctuation">(</span>nobel<span class="token punctuation">[</span><span class="token string">&quot;sex&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value_counts<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>911
Male      836
Female     49
Name: sex, dtype: int64
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="通过-访问数据" tabindex="-1"><a class="header-anchor" href="#通过-访问数据" aria-hidden="true">#</a> 通过. 访问数据</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>nobel<span class="token punctuation">[</span>nobel<span class="token punctuation">.</span>sex <span class="token operator">==</span> <span class="token string">&#39;Female&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>nsmallest<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;year&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>和</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>nobel<span class="token punctuation">[</span>nobel<span class="token punctuation">[</span><span class="token string">&#39;sex&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&#39;Female&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>nsmallest<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;year&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>一样，更推荐后者。</p>`,54);function y(x,f){const t=i("ExternalLinkIcon");return o(),c("div",null,[u,n("ul",null,[d,n("li",null,[n("a",r,[s("df.info"),e(t)]),s(": 大略浏览数据表")]),k,m,v]),g,n("p",null,[s("ref.: "),n("a",h,[s("https://zhuanlan.zhihu.com/p/148743842"),e(t)])]),b])}const w=p(l,[["render",y],["__file","pandas-application.html.vue"]]);export{w as default};
