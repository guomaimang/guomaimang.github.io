import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{o as e,c as n,e as a}from"./app-14fb8ea4.js";const t={},l=a(`<h1 id="visual-perception-of-text" tabindex="-1"><a class="header-anchor" href="#visual-perception-of-text" aria-hidden="true">#</a> Visual Perception of Text</h1><h2 id="text" tabindex="-1"><a class="header-anchor" href="#text" aria-hidden="true">#</a> Text</h2><figure><img src="https://pic.hanjiaming.com.cn/2022/12/10/2d9ae3fe22001.png" alt="1670662525220.png" tabindex="0" loading="lazy"><figcaption>1670662525220.png</figcaption></figure><p>Reading text = visual pattern recognition</p><p>文本是一种具有编码意义的图像</p><ul><li>感知到的视觉模式</li><li>使用语言的内部表述进行解码</li><li>使用句法、语义和语用学知识进行解释</li></ul><p>图标并不总是最合适的，有时文字描述的效果更好。</p><ul><li>Syntactic: 语言结构，语法，例如。句子 名词短语 动词短语 或调试打印文本</li><li>Semantic: 例如，单词和句子的（非）字面意思，不考虑上下文。</li><li>实用性「Pragmatic」：关于所涉及的个人和情况的背景的含义</li></ul><p>Fixations: Perception and comprehension「理解力」 takes place only during fixations (in between is idle state)</p><p>Decoding and interpretation in design</p><ul><li>Lexical ambiguity in interfaces</li><li>Semantic priming「启动」</li><li>The use of context 「上下文的使用」</li></ul><img src="https://pic.hanjiaming.com.cn/2022/12/10/9d532bf863441.png" alt="1670663106189.png" style="zoom:33%;"><ul><li>作为用户（新手），您知道的越少，您就越依赖上下文。</li><li>如果未提供上下文，则词典含义将变为活动状态。就像计算机一样，用户变得容易犯错——含糊不清。<strong>语义启动是解决方案。「Semantic priming is the solution.」</strong></li></ul><img src="https://pic.hanjiaming.com.cn/2022/12/10/e26b26aef6651.png" alt="1670663183141.png" style="zoom:33%;"><img src="https://pic.hanjiaming.com.cn/2022/12/10/818ea0cd5972a.png" alt="1670663302340.png" style="zoom:50%;"><ul><li>Ambiguity: One word pointing at more meanings</li><li>Synonyms: More words, pointing at one meaning</li></ul><h2 id="random-trial-and-error" tabindex="-1"><a class="header-anchor" href="#random-trial-and-error" aria-hidden="true">#</a> Random trial-and-error</h2><p><strong>Random trial-and-error</strong> is a low level problem solving strategy but commonly found with non-expert users「随机试错是一种低层次的问题解决策略，但常见于非专业用户。」</p><p>Remember: Mental models of designers and users clash</p><h2 id="recommendations" tabindex="-1"><a class="header-anchor" href="#recommendations" aria-hidden="true">#</a> Recommendations</h2><ul><li>Know your user groups (novices, experts, other than intended)</li><li>标签很短, 然而，要避免含糊不清</li><li>不要使用同义词</li><li>标签是自我阐释的</li><li>标签应该是高频含义的主要内容: (Start &gt; Shut Down &gt; Standby &gt; OK???)</li><li>使用上下文线索（例如，<em>文本处理器</em> 的 联想与 <em>电子表格</em> 不同）。</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>不该做什么的例子...- 糟糕的对齐方式!
- 不流畅
- 对比度差
- 无法区分彩色标签和可编辑字段
- 重复性差
- 按钮看起来不像按钮!
- 结构不明确
- 块与排列竞争
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="summary" tabindex="-1"><a class="header-anchor" href="#summary" aria-hidden="true">#</a> Summary</h2><ul><li>文字是视觉输入的一种形式，对于引导用户浏览界面来说是最重要的（包括图标的标签），文字具有强烈的模糊性。</li><li>你应该提供能在语义上引导预期含义的元素。这就是上下文。&quot;按&#39;开始&#39;来停止一个进程是在引导错误的语义关联</li></ul><p>要制作一个GUI，要从以下方面着手：对比、重复、统一、靠近。网格是满足这些要求的好方法。</p><ul><li>将图标和文字所代表的功能排列成系列，使用户可以将信息 &quot;分块 &quot;成有意义的单元，而不会被众多不相关的小工具所淹没（使用相似性和接近性）。</li><li>请记住，一幅图像所表达的内容胜过千言万语，但它所表达的内容我们不知道，因为文字比图像要精确得多（这就是为什么人类发明了语言）。</li></ul>`,26),r=[l];function o(s,d){return e(),n("div",null,r)}const u=i(t,[["render",o],["__file","Visual-Perception-of-Text.html.vue"]]);export{u as default};
