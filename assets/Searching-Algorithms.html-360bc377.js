const e=JSON.parse('{"key":"v-b52c3e3e","path":"/note/cs/programming/cpp/related/Searching-Algorithms.html","title":"Searching Algorithms","lang":"zh-CN","frontmatter":{"article":false,"date":"2021-05-01T00:00:00.000Z","description":"Searching Algorithms Goal Given an array A of n numbers (in ascending order) Find the position of a key k from the array A return –1 if not found A: | 1 | 3 | 8 | 12 | 17 | 23 | 35 Algorithm 1: Linear search Assume k appears at most once in the array. Once k is found, the algorithm stops.","head":[["meta",{"property":"og:url","content":"https://guomaimang.github.io/note/cs/programming/cpp/related/Searching-Algorithms.html"}],["meta",{"property":"og:site_name","content":"HAN Jiaming | Hirsun | 韩佳明"}],["meta",{"property":"og:title","content":"Searching Algorithms"}],["meta",{"property":"og:description","content":"Searching Algorithms Goal Given an array A of n numbers (in ascending order) Find the position of a key k from the array A return –1 if not found A: | 1 | 3 | 8 | 12 | 17 | 23 | 35 Algorithm 1: Linear search Assume k appears at most once in the array. Once k is found, the algorithm stops."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-15T05:33:29.000Z"}],["meta",{"property":"article:author","content":"Hirsun (HAN Jiaming)"}],["meta",{"property":"article:published_time","content":"2021-05-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-15T05:33:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"Searching Algorithms\\",\\"description\\":\\"Searching Algorithms Goal Given an array A of n numbers (in ascending order) Find the position of a key k from the array A return –1 if not found A: | 1 | 3 | 8 | 12 | 17 | 23 | 35 Algorithm 1: Linear search Assume k appears at most once in the array. Once k is found, the algorithm stops.\\"}"]]},"headers":[{"level":2,"title":"Goal","slug":"goal","link":"#goal","children":[]},{"level":2,"title":"Algorithm 1: Linear search","slug":"algorithm-1-linear-search","link":"#algorithm-1-linear-search","children":[]},{"level":2,"title":"Algorithm 2: Binary search","slug":"algorithm-2-binary-search","link":"#algorithm-2-binary-search","children":[{"level":3,"title":"Code","slug":"code","link":"#code","children":[]},{"level":3,"title":"Example","slug":"example","link":"#example","children":[]},{"level":3,"title":"Time complexity of binary search","slug":"time-complexity-of-binary-search","link":"#time-complexity-of-binary-search","children":[]}]},{"level":2,"title":"引用","slug":"引用","link":"#引用","children":[]}],"git":{"createdTime":1726378409000,"updatedTime":1726378409000,"contributors":[{"name":"hanjiaming","email":"47519540+guomaimang@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":6.72,"words":672},"filePathRelative":"note/cs/programming/cpp/related/Searching-Algorithms.md","localizedDate":"2021年5月1日","excerpt":"<h1> Searching Algorithms</h1>\\n<h2> Goal</h2>\\n<p>Given an array A of n numbers (in ascending order)</p>\\n<ul>\\n<li>Find the position of a key k from the array A</li>\\n<li>return –1 if not found</li>\\n</ul>\\n<p>A: | 1  | 3 | 8 | 12 | 17 | 23 | 35</p>\\n<h2> Algorithm 1: Linear search</h2>\\n<p>Assume k appears at most once in the array. Once k is found, the algorithm stops.</p>","autoDesc":true}');export{e as data};
