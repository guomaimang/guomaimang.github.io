const t=JSON.parse('{"key":"v-4ad1d32b","path":"/note/cs/programming/java/springboot/microservices.html","title":"微服务概念","lang":"zh-CN","frontmatter":{"article":false,"index":false,"description":"微服务概念 微服务是一种架构风格，它要求我们在开发一个应用的时候，这个应用必须构建成一系列小服务的组合；可以通过http 或 rpc的方式进行互通。 单体应用架构 所谓单体应用架构 (all in one) 是指，我们将一个应用的中的所有应用服务都封装在一个应用中。 无论是 ERP、CRM 或是其他什么系统，你都把数据库访问，web 访问，等等各个功能放到一个 war 包内。 整体应用程序（Monolithic applications）相当成功，但是越来越多的人感觉到有点不妥，特别是在云中部署时。变更发布周期被绑定了——只是变更应用程序的一小部分，却要求整个重新构建和部署。","head":[["meta",{"property":"og:url","content":"https://guomaimang.github.io/note/cs/programming/java/springboot/microservices.html"}],["meta",{"property":"og:site_name","content":"Hirsun HAN (Jiaming)"}],["meta",{"property":"og:title","content":"微服务概念"}],["meta",{"property":"og:description","content":"微服务概念 微服务是一种架构风格，它要求我们在开发一个应用的时候，这个应用必须构建成一系列小服务的组合；可以通过http 或 rpc的方式进行互通。 单体应用架构 所谓单体应用架构 (all in one) 是指，我们将一个应用的中的所有应用服务都封装在一个应用中。 无论是 ERP、CRM 或是其他什么系统，你都把数据库访问，web 访问，等等各个功能放到一个 war 包内。 整体应用程序（Monolithic applications）相当成功，但是越来越多的人感觉到有点不妥，特别是在云中部署时。变更发布周期被绑定了——只是变更应用程序的一小部分，却要求整个重新构建和部署。"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-15T05:33:29.000Z"}],["meta",{"property":"article:author","content":"Hirsun (HAN Jiaming)"}],["meta",{"property":"article:modified_time","content":"2024-09-15T05:33:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"微服务概念\\",\\"description\\":\\"微服务概念 微服务是一种架构风格，它要求我们在开发一个应用的时候，这个应用必须构建成一系列小服务的组合；可以通过http 或 rpc的方式进行互通。 单体应用架构 所谓单体应用架构 (all in one) 是指，我们将一个应用的中的所有应用服务都封装在一个应用中。 无论是 ERP、CRM 或是其他什么系统，你都把数据库访问，web 访问，等等各个功能放到一个 war 包内。 整体应用程序（Monolithic applications）相当成功，但是越来越多的人感觉到有点不妥，特别是在云中部署时。变更发布周期被绑定了——只是变更应用程序的一小部分，却要求整个重新构建和部署。\\"}"]]},"headers":[{"level":2,"title":"单体应用架构","slug":"单体应用架构","link":"#单体应用架构","children":[]},{"level":2,"title":"微服务架构","slug":"微服务架构","link":"#微服务架构","children":[]}],"git":{"createdTime":1726378409000,"updatedTime":1726378409000,"contributors":[{"name":"hanjiaming","email":"47519540+guomaimang@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":3.42,"words":342},"filePathRelative":"note/cs/programming/java/springboot/microservices.md","localizedDate":"2024年9月15日","excerpt":"<h1> 微服务概念</h1>\\n<p>微服务是一种架构风格，它要求我们在开发一个应用的时候，这个应用必须构建成一系列小服务的组合；可以通过http 或 rpc的方式进行互通。</p>\\n<h2> 单体应用架构</h2>\\n<p>所谓单体应用架构 (all in one) 是指，我们将一个应用的中的所有应用服务都封装在一个应用中。</p>\\n<p>无论是 ERP、CRM 或是其他什么系统，你都把数据库访问，web 访问，等等各个功能放到一个 war 包内。</p>\\n<p>整体应用程序（Monolithic applications）相当成功，但是越来越多的人感觉到有点不妥，特别是在云中部署时。变更发布周期被绑定了——只是变更应用程序的一小部分，却要求整个重新构建和部署。</p>","autoDesc":true}');export{t as data};
