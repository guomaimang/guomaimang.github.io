import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as i,e as n}from"./app-ae05e74e.js";const s={},o=n('<h1 id="webapp-using-node-js" tabindex="-1"><a class="header-anchor" href="#webapp-using-node-js" aria-hidden="true">#</a> WebApp using Node.js</h1><p>Fast and Scalable</p><p>Event-driven architecture and non-blocking I/O API from ground-up</p><ul><li>Model best for slow/blocking (network) I/Os, <strong>now asynchronously handled</strong></li><li>Resource efficient. Can easily scale up with Cloud Services</li><li>Support asynchronous programming (but Node operates on single-thread event loop)</li></ul><p>Code reuse due to single language across both client and server side -&gt; (Non-)Developer-friendly</p><ul><li>JIT Compilation (ref in L3): Compiled to binary, and runs like executable (&quot;binds&quot; to libraries in C++)</li><li>Thread pool to handle parallel (non-blocking) I/O tasks ( , )</li></ul><figure><img src="https://pic.hanjiaming.com.cn/2025/04/06/d1d607f42917f.png" alt="预览 2025-04-06 21.59.03.png" tabindex="0" loading="lazy"><figcaption>预览 2025-04-06 21.59.03.png</figcaption></figure><p>HTTP is a first class citizen in node () : Built-in HTTP library, doing away with Apache/IIS/Nginx</p><p>Event-driven paradigm:</p><ul><li>Create a HTTP server binded to port 3000 of localhost</li><li>Execute the callback per request</li></ul><h2 id="npm" tabindex="-1"><a class="header-anchor" href="#npm" aria-hidden="true">#</a> NPM</h2><p>Package Manager: Simplify deployment by auto-resolving dependencies</p><ul><li>A specification standard of (dev)dependencies</li><li>devDependencies 指的是仅在开发期间需要，但不是运行时需要的那些依赖项</li><li>NPM: package.json specifies the required packages</li><li>A repository to host packages published by developers</li></ul><p>A CLI toolset to recursively install/manage required dependencies and versions</p><ul><li><code>npm install looks for ./package.json</code>, and recursively installs all dependency packages</li><li><code>npm install &lt;packageName&gt; --save</code> downloads packageName and marks it dependent in your package.json</li><li><code>npm install &lt;packageName&gt; --save-dev</code> downloads packageName and marks it devDependent in your package.json</li></ul><p>npx vs npm exec; run an arbitrary command from an npm package npm exec eslint src/</p><p>Packages you will use: express, helmet, cors, csrf, express-session/cookie-session, mysql</p><h2 id="output-html-vs-json" tabindex="-1"><a class="header-anchor" href="#output-html-vs-json" aria-hidden="true">#</a> Output - HTML vs. JSON</h2><p>Node/Web Server can simply serve static HTML/CSS/Javascript</p><ul><li><p>For dynamic content, HTML output is returned after processing</p></li><li><p>After users submit the forms via an HTML page, a browser has to re-download the &quot;same&quot; HTML</p><p>page even with a single tiny difference (if you have a large HTML).</p></li></ul><p>Alternative: JavaScript Object Notation (JSON) format</p><ul><li>Compact in response size. Fast JSON parser.</li><li>Facilitate shifting data binding &amp; user-interface (UI) work to client-side</li></ul><p>Advantages of using JSON when compared to HTML</p><ul><li>Minimize bandwidth needed (since no redundant download)</li><li>JSON parsing is stunning fast as the format itself is JS (native)!</li><li>Loose coupling: data-intensive processing (Server) and UI handling (Client)</li></ul>',24),t=[o];function l(r,p){return a(),i("div",null,t)}const u=e(s,[["render",l],["__file","webapp.html.vue"]]);export{u as default};
