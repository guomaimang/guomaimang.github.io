import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{r as s,o as r,c as l,a as e,b as o,d as t,e as n}from"./app-06102085.js";const c={},h=n('<h1 id="authentication-authorization" tabindex="-1"><a class="header-anchor" href="#authentication-authorization" aria-hidden="true">#</a> Authentication &amp; Authorization</h1><h2 id="session-management" tabindex="-1"><a class="header-anchor" href="#session-management" aria-hidden="true">#</a> Session Management</h2><ul><li>Each request is independent of each other</li><li>Sufficient for「足够的」 serving static content (.html, .css, .jpg, etc.)</li><li>But the server cannot tell which requests come from the same user</li><li>Why does state useful? <ul><li>for personalized services and user conveniences</li><li>e.g., any signed-in user experience</li><li>consider you need to enter your password again after each click</li></ul></li></ul><p>Solution: associate requests originated from the same user, i.e., maintaining a user session</p><p>or, tracking your cyber-whereabouts and breaking your privacy?</p><ul><li>i.e., a double-edged sword</li><li>Third Party cookies</li></ul><p>Note the privacy law, e.g., GDPR, EU Cookie Law (always ask for permission)</p>',7),d={href:"http://amiunique.org",target:"_blank",rel:"noopener noreferrer"},u=n('<h2 id="cookies-communications" tabindex="-1"><a class="header-anchor" href="#cookies-communications" aria-hidden="true">#</a> Cookies Communications</h2><p>Making HTTP “Stateful” Using (HTTP/Web/Browser) Cookies</p><p>Cookies := a small ( ) client-side storage with its data replayed to where they were onfigured (cookie origin )</p><figure><img src="https://pic.hanjiaming.com.cn/2025/04/07/f1cc55a2756be.png" alt="1744013520557.png" tabindex="0" loading="lazy"><figcaption>1744013520557.png</figcaption></figure><h3 id="session-creation-and-resumption-using-cookies" tabindex="-1"><a class="header-anchor" href="#session-creation-and-resumption-using-cookies" aria-hidden="true">#</a> Session Creation and Resumption using Cookies</h3>',5),p={href:"http://example.com",target:"_blank",rel:"noopener noreferrer"},m=e("strong",null,"cookies",-1),g=e("li",null,[o("The server gives a Cookie value (w/ Set-Cookie "),e("strong",null,"response"),o(" header)")],-1),f=e("li",null,[o('i.e., the web server told the browser to create a cookie for that "'),e("strong",null,"origin"),o('"'),e("br"),o(" (A cookie can also be created at the client-side)")],-1),k=n('<h3 id="session-maintenance-using-cookies" tabindex="-1"><a class="header-anchor" href="#session-maintenance-using-cookies" aria-hidden="true">#</a> Session Maintenance using Cookies</h3><ul><li>Cookie Values can store user preferences (e.g., theme=yellow)</li><li>Setting a unique, random, and unpredictable &quot;token&quot; (a.k.a. session ID)</li><li>The server can then isolate a user-specific session from other sessions</li><li>Usage: Personalization, Authentication, and Session Storage (express-session)</li></ul><h2 id="cookie-parameters" tabindex="-1"><a class="header-anchor" href="#cookie-parameters" aria-hidden="true">#</a> Cookie Parameters</h2><figure><img src="https://pic.hanjiaming.com.cn/2025/04/07/08e9efaa1fcb4.png" alt="1744016410810.png" tabindex="0" loading="lazy"><figcaption>1744016410810.png</figcaption></figure><p>Expires: specify the time when a cookie will be deleted automatically</p><ul><li>Seconds since the epoch time (00:00:00 UTC 1970-01-01)</li><li>(Default) Setting it to 0 (zero) creates a session cookie， Browser will automatically clear a session cookie when shutdown</li><li>Setting it to a past time tells the browser to remove the cookie (&quot;immediately&quot;)</li><li>or use res.clearCookie (name, [ options ]) with matching option</li></ul>',6),_={class:"hint-container note"},b=e("p",{class:"hint-container-title"},"Cookie SOP Examples",-1),y=e("figure",null,[e("img",{src:"https://pic.hanjiaming.com.cn/2025/04/07/64422c7508481.png",alt:"Google Chrome 2025-04-07 17.36.50.png",tabindex:"0",loading:"lazy"}),e("figcaption",null,"Google Chrome 2025-04-07 17.36.50.png")],-1),w={href:"http://example.com",target:"_blank",rel:"noopener noreferrer"},x={href:"http://www.example.com",target:"_blank",rel:"noopener noreferrer"},v=n("<ul><li><strong>Cookie:</strong> <code>user=niki</code></li><li>Explanation: The domain <code>.example.com</code> matches <code>example.com</code> and <code>www.example.com</code>, and the path <code>/</code> matches any path, so <code>user=niki</code> is sent.</li></ul>",1),C={href:"http://secure.example.com",target:"_blank",rel:"noopener noreferrer"},S={href:"https://secure.example.com",target:"_blank",rel:"noopener noreferrer"},A=n("<ul><li><strong>Cookie:</strong> <code>user=niki</code></li><li>Explanation: The domain <code>.example.com</code> matches <code>secure.example.com</code>, and the path <code>/</code> matches any path, so <code>user=niki</code> is sent. The <code>user=ling</code> cookie is not sent because it is secure and the connection is not HTTPS.</li></ul>",1),T={href:"https://secure.example.com/accounts/index.html",target:"_blank",rel:"noopener noreferrer"},q=n("<ul><li><strong>Cookies:</strong> <code>user=ling; user=niki</code></li><li>Explanation: Both cookies match. The domain <code>secure.example.com</code> matches both cookies, the path <code>/accounts</code> matches the path of <code>user=ling</code>, and <code>/</code> matches the path of <code>user=niki</code>. Both cookies are sent, but the order is non-deterministic.</li></ul>",1),P={href:"https://secure.example.com/accounts/new/index.html",target:"_blank",rel:"noopener noreferrer"},z=e("ul",null,[e("li",null,[e("strong",null,"Cookies:"),o(),e("code",null,"user=ling; user=niki")]),e("li",null,"Explanation: Same reasoning as the previous URL. Both cookies match and are sent, but the order is non-deterministic.")],-1),M=e("p",null,"According to RFC 6265, when multiple cookies with the same name are present, the order in which they are sent is not guaranteed. This can lead to non-deterministic behavior.",-1),I=n('<h2 id="problems-of-using-cookies" tabindex="-1"><a class="header-anchor" href="#problems-of-using-cookies" aria-hidden="true">#</a> Problems of Using Cookies</h2><h3 id="privacy-from-a-user-perspective" tabindex="-1"><a class="header-anchor" href="#privacy-from-a-user-perspective" aria-hidden="true">#</a> Privacy from a user perspective</h3><ul><li>We know how a site can uniquely identify a user</li><li>What are the resulted threats (and opportunities)?</li><li>Should user be tracked across apps/webs? (how? by )</li></ul><p>Integrity「正直」 and Authenticity「真实性」</p><ul><li>Cookies values reside on client-side</li><li>That said, malicious users can tamper with the values</li><li>Signed Cookies: HMAC for authenticity and integrity (&quot;secret&quot; in express/cookie-session)</li></ul><p>Storage Size</p><ul><li>A cookie has at most 4KB per domain</li><li>Recall the best practice: We want to keep the name/value size minimal to reduce bandwidth overhead</li></ul><h3 id="cookie-privacy" tabindex="-1"><a class="header-anchor" href="#cookie-privacy" aria-hidden="true">#</a> Cookie Privacy</h3>',8),B={href:"http://xn--ad-2r8dy38g.com",target:"_blank",rel:"noopener noreferrer"},H=e("code",null,"Referer",-1),E={href:"http://C.com",target:"_blank",rel:"noopener noreferrer"},D=e("li",null,"ad.com通过响应头设置Cookie到用户浏览器，标记用户身份。",-1),L={href:"http://xn--D-zn6a4eo8v31p47d105bfsjf7jbk5amox.com",target:"_blank",rel:"noopener noreferrer"},U={href:"http://C.com",target:"_blank",rel:"noopener noreferrer"},W={href:"http://D.com",target:"_blank",rel:"noopener noreferrer"},j=e("code",null,"Referer",-1),R=e("p",null,"Solution:",-1),N={href:"http://C.xn--comad-7n1ht32vf7wcy9b.com",target:"_blank",rel:"noopener noreferrer"},O={href:"http://xn--ad-6c5cxhq3hx7qwiet7ibk9aijjg96dpbfbpf.com",target:"_blank",rel:"noopener noreferrer"},F=e("li",null,"利用浏览器漏洞或指纹识别技术（如设备指纹）替代Cookie跟踪。",-1),V=e("li",null,[e("strong",null,"启用反追踪策略"),o("： "),e("ul",null,[e("li",null,"完全屏蔽第三方Cookie（如Safari的智能防跟踪ITP）。"),e("li",null,[o("发送"),e("code",null,"Do Not Track"),o("请求头（需网站配合）。")]),e("li",null,"阻止已知跟踪域名的请求（如Firefox的增强型跟踪保护）。")])],-1),G=n('<p>But there are problems other than cookies...(Referer Header, link decorating)</p><h3 id="cookie-integrity-and-authenticity" tabindex="-1"><a class="header-anchor" href="#cookie-integrity-and-authenticity" aria-hidden="true">#</a> Cookie Integrity and Authenticity</h3><p>Cookie values can be tampered</p><ul><li>Cookie is just another kind of &quot;user&quot; (e.g., attacker) inputs</li><li>Apply server-side validations for cookies, e.g., use signedCookies</li><li>For confidential values, (authenticated) is needed</li><li>There are special middleware/APIs to do them</li><li>Or you can implement by yourself (if you understand crypto)</li></ul><p>Parameter Tampering Attack: Many old/naive shopping carts store &quot;totalAmount&quot; in cookies</p><h2 id="other-client-side-session-storage" tabindex="-1"><a class="header-anchor" href="#other-client-side-session-storage" aria-hidden="true">#</a> Other Client-side Session Storage</h2><ul><li>HTML5 LocalStorage (5MB /origin)</li><li>Unlike Cookies, does not replay in requests but accessible via JS API</li><li>Useful to store specific service&#39;s offline content offline, e.g., Gmail</li><li>Security: Follows the HTML5 SOP</li><li>Security: Client-side storage is still subject to tampering attacks</li><li>There is also . (lives like session cookie; origin: domain+protocol)</li></ul><h2 id="why-not-both" tabindex="-1"><a class="header-anchor" href="#why-not-both" aria-hidden="true">#</a> Why not both?</h2><p>How about storing something both on the server and the client sides?</p><p>Worst of both worlds?</p><ul><li>Client storage could be adversarially manipulated</li><li>Server still needs to maintain resource for each client</li></ul><p>We need a cleverer way enjoy the best of both worlds</p><ul><li>Authenticated encryption of client-side storage!</li><li>Server holds a short secret key for ALL clients, e.g., 256-bit for AES</li><li>Without the key, client cannot produce meaningful ciphertexts produced by authenticated encryption</li><li>Trades off computation against storage i/o overhead</li><li>JSON Web Token (JWT): data with optional signature + encryption on JSON</li></ul><div class="hint-container info"><p class="hint-container-title">Cookies vs. localStorage vs. Session Mgt.</p><ul><li><strong>Cookies</strong>: Client/server-readable, auto-sent with requests (4KB max). Used for auth (e.g., session IDs), support expiration. Secure with <code>HttpOnly</code>.</li><li><strong>localStorage</strong>: Client-only, persistent (5-10MB), no auto-transfer. Ideal for client-side data (e.g., preferences).</li><li><strong>Session Management</strong>: Typically server-side (session IDs in cookies) for user state. Alternatively, <code>sessionStorage</code> (client, tab-scoped, cleared on close).<br><em>Key differences</em>: Scope, persistence, size, and server interaction. Cookies handle auth; localStorage stores local data; sessions manage state securely.</li></ul></div><h2 id="authentication-vs-authorization" tabindex="-1"><a class="header-anchor" href="#authentication-vs-authorization" aria-hidden="true">#</a> Authentication vs. Authorization</h2><p>Authentication: Is a user really whom he claims himself to be?</p><ul><li>something you know: password, private key</li><li>something you have: CULink, one-time hardware token</li><li>who you are: biometric features like fingerprints</li><li>what you do: the way you shake/tap smartphone</li><li>where you are: FB checks if country changed, IP, GPS</li><li>or a combination of n of them (the so-called n-factor authentication or nFA)</li></ul><p>Authorization: Is an authenticated user allowed to do a task?</p><ul><li>Most common: Role-based access control</li><li>e.g., is user A allowed to do task T1</li></ul><h2 id="credentials-database" tabindex="-1"><a class="header-anchor" href="#credentials-database" aria-hidden="true">#</a> Credentials Database</h2><p>Hash based Message Authentication Code (HMAC)</p><ul><li>HMAC is a keyed function to calculate a MAC (Prevent length-extension attack on MD hashes). [H(key || H(key || msg))]</li><li>(don&#39;t use SHA1); pick memory-hard hash functions: Argon2, scrypt, bcrypt</li><li>Use prepared statement. NEVER try to concatentate a SQL statement by yourself!</li><li>Implement hmacPassword () function.</li></ul><h2 id="authentication-token-authorization" tabindex="-1"><a class="header-anchor" href="#authentication-token-authorization" aria-hidden="true">#</a> Authentication Token &amp; Authorization</h2><ul><li>Authenticate the token before admin operations</li><li></li></ul>',24);function J(K,Q){const i=s("ExternalLinkIcon");return r(),l("div",null,[h,e("p",null,[o("P.S. We are not talking about website fingerprinting here (fyi: "),e("a",d,[o("amiunique.org"),t(i)]),o(").")]),u,e("ul",null,[e("li",null,[o("In the 1st visit, the browser makes a request to "),e("a",p,[o("example.com"),t(i)]),o(" w/ no "),m]),g,f]),k,e("div",_,[b,y,e("ol",null,[e("li",null,[e("p",null,[e("strong",null,[e("a",w,[o("http://example.com"),t(i)]),o(" or "),e("a",x,[o("http://www.example.com"),t(i)])])]),v]),e("li",null,[e("p",null,[e("strong",null,[e("a",C,[o("http://secure.example.com"),t(i)]),o(" or "),e("a",S,[o("https://secure.example.com"),t(i)])])]),A]),e("li",null,[e("p",null,[e("strong",null,[e("a",T,[o("https://secure.example.com/accounts/index.html"),t(i)])])]),q]),e("li",null,[e("p",null,[e("strong",null,[e("a",P,[o("https://secure.example.com/accounts/new/index.html"),t(i)])])]),z])]),M]),I,e("ul",null,[e("li",null,[o("当访问C.com时，页面内嵌入的广告（"),e("a",B,[o("来自ad.com"),t(i)]),o("）会向ad.com发送请求。")]),e("li",null,[o("请求头中的"),H,o("字段会携带当前页面URL（"),e("a",E,[o("C.com"),t(i)]),o("），告知广告商用户正在访问的网站。")]),D,e("li",null,[e("a",L,[o("当用户访问另一个网站D.com"),t(i)]),o("（同样嵌入ad.com广告）时，浏览器会自动携带之前设置的Cookie，广告商即可关联两个网站的访问行为。")])]),e("p",null,[o("广告商通过不同网站（"),e("a",U,[o("C.com"),t(i)]),o("、"),e("a",W,[o("D.com"),t(i)]),o("）的Cookie和"),j,o("信息，分析用户的浏览习惯、兴趣，最终实现精准广告投放。")]),R,e("ul",null,[e("li",null,[o("浏览器默认禁止跨域（第三方）网站在未经用户同意的情况下写入Cookie。例如，"),e("a",N,[o("C.com页面中的ad.com"),t(i)]),o(" iframe无法直接设置Cookie。")]),e("li",null,[o("广告商的绕过方法 "),e("ul",null,[e("li",null,[o("使用重定向："),e("a",O,[o("诱导用户点击广告跳转到ad.com"),t(i)]),o("，使其成为“第一方”从而设置Cookie。")]),F])]),V]),G])}const Z=a(c,[["render",J],["__file","auth.html.vue"]]);export{Z as default};
