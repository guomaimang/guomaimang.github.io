import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as s,e}from"./app-b494dc6b.js";const t={},i=e(`<h1 id="k-nearest-neighbors" tabindex="-1"><a class="header-anchor" href="#k-nearest-neighbors" aria-hidden="true">#</a> k-Nearest Neighbors</h1><h2 id="classifying-labels-of-unseen-data" tabindex="-1"><a class="header-anchor" href="#classifying-labels-of-unseen-data" aria-hidden="true">#</a> Classifying labels of unseen data</h2><p>之前，我们了解到监督学习使用标签。让我们讨论一下，我们如何建立一个分类模型，或分类器，来预测未见过的数据的标签。</p><ol><li>Build a model</li><li>Model learns from the labeled data we pass to it</li><li>Pass unlabeled data to the model as input</li><li>Model predicts the labels of the unseen data</li></ol><p>Labeled data = training data</p><p>让我们建立我们的第一个模型! 我们将使用一种叫做k-Nearest Neighbors的算法，这种算法在分类问题上很流行。k-Nearest Neighbors或KNN的概念是通过查看k个，例如三个，最接近的标记数据点，并让它们投票决定未标记的观察应该有什么标签来预测任何数据点的标签。KNN使用多数投票，根据大多数最近的邻居的标签进行预测。</p><div class="hint-container tip"><p class="hint-container-title">KNN</p><p>随机森林本质上是许多<strong>以不同方式过拟合</strong>的决策树的集合，我们可以对这些互不相同的树的结果取平均值来降低过拟合，这样既能减少过拟合又能保持树的预测能力。常用参数有 n_estimators 和 max_features。</p></div><ul><li>预测一个数据点的标签的方法是 <ul><li>观察最接近的k个标记的数据点</li><li>采取多数票的方式</li></ul></li></ul><p>以这个散点图为例，我们如何对黑色的观察进行分类？如果k等于3，我们会把它归类为红色。这是因为在三个最接近的观测值中，有两个是红色的。如果k等于5，我们反而会把它归类为蓝色。</p><img src="https://pic.hanjiaming.com.cn/2022/06/15/01047856cec7a.png" alt="1655224367163.png" style="zoom:67%;"><img src="https://pic.hanjiaming.com.cn/2022/06/15/defd6b10228e9.png" alt="1655224383965.png" style="zoom:67%;"><img src="https://pic.hanjiaming.com.cn/2022/06/15/3eee784cc80fa.png" alt="1655224402584.png" style="zoom:67%;"><p>为了建立对KNN的直觉，让我们看一下这个散点图，它显示了一家电信公司的客户的晚间总费用和日间总费用。观察结果中，蓝色表示已经流失的客户，红色表示没有流失的客户。</p><figure><img src="https://pic.hanjiaming.com.cn/2022/06/15/1c80f4516110b.png" alt="1655224496357.png" tabindex="0" loading="lazy"><figcaption>1655224496357.png</figcaption></figure><p>这里我们将KNN算法的结果可视化，其中邻居的数量被设置为15个。KNN创建了一个决策边界来预测客户是否会流失。在灰色背景区域的任何客户都被预测为会流失，而在红色背景区域的客户则被预测为不会流失。这个边界将被用来对未见过的数据进行预测。</p><figure><img src="https://pic.hanjiaming.com.cn/2022/06/15/e1c73b2f0c8ae.png" alt="1655224601002.png" tabindex="0" loading="lazy"><figcaption>1655224601002.png</figcaption></figure><h2 id="use-sklearn-to-fit-a-classifier" tabindex="-1"><a class="header-anchor" href="#use-sklearn-to-fit-a-classifier" aria-hidden="true">#</a> Use sklearn to fit a classifier</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>neighbors <span class="token keyword">import</span> KNeighborsClassifier

X <span class="token operator">=</span> churn_df<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&quot;total_day_charge&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;total_eve_charge&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values
y <span class="token operator">=</span> churn_df<span class="token punctuation">[</span><span class="token string">&quot;churn&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values

<span class="token keyword">print</span><span class="token punctuation">(</span>X<span class="token punctuation">.</span>shape<span class="token punctuation">,</span> y<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>(3333, 2), (3333,)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>knn <span class="token operator">=</span> KNeighborsClassifier<span class="token punctuation">(</span>n_neighbors<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">)</span>
knn<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X<span class="token punctuation">,</span> y<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="predicting-on-unlabeled-data" tabindex="-1"><a class="header-anchor" href="#predicting-on-unlabeled-data" aria-hidden="true">#</a> Predicting on unlabeled data</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>X_new <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">56.8</span><span class="token punctuation">,</span> <span class="token number">17.5</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">24.4</span><span class="token punctuation">,</span> <span class="token number">24.1</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">50.1</span><span class="token punctuation">,</span> <span class="token number">10.9</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
predictions <span class="token operator">=</span> knn<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>X_new<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Predictions: {}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>predictions<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Predictions: [1 0 0]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,23),p=[i];function o(c,l){return a(),s("div",null,p)}const d=n(t,[["render",o],["__file","knn-intro.html.vue"]]);export{d as default};
