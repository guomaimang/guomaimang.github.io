const e=JSON.parse('{"key":"v-1f059d64","path":"/note/cs/co/Memory/Internal-Memory.html","title":"Internal Memory","lang":"zh-CN","frontmatter":{"article":false,"date":"2021-05-01T00:00:00.000Z","description":"Internal Memory Recap Internal memory: Cache why? -- locality of references: CPU tends to access clusters of data at certain time「为什么？ -引用的位置：CPU倾向于在特定时间访问数据集群」 the introduction of fast but small memory (Cache) between CPU and main memory「在CPU和主内存之间引入快速但较小的内存（Cache）」 mechanism: dynamically copy clusters into Cache -- virtually, we are using fast and large memory「机制：将集群动态复制到Cache中-实际上，我们正在使用快速且大容量的内存」","head":[["meta",{"property":"og:url","content":"https://guomaimang.github.io/note/cs/co/Memory/Internal-Memory.html"}],["meta",{"property":"og:site_name","content":"Hirsun HAN (Jiaming) | 韩佳明"}],["meta",{"property":"og:title","content":"Internal Memory"}],["meta",{"property":"og:description","content":"Internal Memory Recap Internal memory: Cache why? -- locality of references: CPU tends to access clusters of data at certain time「为什么？ -引用的位置：CPU倾向于在特定时间访问数据集群」 the introduction of fast but small memory (Cache) between CPU and main memory「在CPU和主内存之间引入快速但较小的内存（Cache）」 mechanism: dynamically copy clusters into Cache -- virtually, we are using fast and large memory「机制：将集群动态复制到Cache中-实际上，我们正在使用快速且大容量的内存」"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-15T05:33:29.000Z"}],["meta",{"property":"article:author","content":"Hirsun (HAN Jiaming)"}],["meta",{"property":"article:published_time","content":"2021-05-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-15T05:33:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"Internal Memory\\",\\"description\\":\\"Internal Memory Recap Internal memory: Cache why? -- locality of references: CPU tends to access clusters of data at certain time「为什么？ -引用的位置：CPU倾向于在特定时间访问数据集群」 the introduction of fast but small memory (Cache) between CPU and main memory「在CPU和主内存之间引入快速但较小的内存（Cache）」 mechanism: dynamically copy clusters into Cache -- virtually, we are using fast and large memory「机制：将集群动态复制到Cache中-实际上，我们正在使用快速且大容量的内存」\\"}"]]},"headers":[{"level":2,"title":"Recap","slug":"recap","link":"#recap","children":[{"level":3,"title":"Internal memory: Cache","slug":"internal-memory-cache","link":"#internal-memory-cache","children":[]},{"level":3,"title":"Design elements of Cache","slug":"design-elements-of-cache","link":"#design-elements-of-cache","children":[]}]},{"level":2,"title":"Internal Memory","slug":"internal-memory-1","link":"#internal-memory-1","children":[{"level":3,"title":"Type","slug":"type","link":"#type","children":[]}]},{"level":2,"title":"Memory Cell","slug":"memory-cell","link":"#memory-cell","children":[{"level":3,"title":"Abstract Model","slug":"abstract-model","link":"#abstract-model","children":[]},{"level":3,"title":"Implementation Technologies","slug":"implementation-technologies","link":"#implementation-technologies","children":[]},{"level":3,"title":"Dynamic RAM Cells","slug":"dynamic-ram-cells","link":"#dynamic-ram-cells","children":[]},{"level":3,"title":"Static RAM Cells","slug":"static-ram-cells","link":"#static-ram-cells","children":[]},{"level":3,"title":"DRAM vs. SRAM","slug":"dram-vs-sram","link":"#dram-vs-sram","children":[]}]},{"level":2,"title":"Read-Only Memory (ROM)","slug":"read-only-memory-rom","link":"#read-only-memory-rom","children":[]},{"level":2,"title":"Special Types of ROM","slug":"special-types-of-rom","link":"#special-types-of-rom","children":[{"level":3,"title":"Programmable ROM (PROM)","slug":"programmable-rom-prom","link":"#programmable-rom-prom","children":[]},{"level":3,"title":"Read-Mostly Memory","slug":"read-mostly-memory","link":"#read-mostly-memory","children":[]},{"level":3,"title":"Erasable Programmable ROM (EPROM)","slug":"erasable-programmable-rom-eprom","link":"#erasable-programmable-rom-eprom","children":[]},{"level":3,"title":"Electronically Erasable Programmable ROM (EEPROM)","slug":"electronically-erasable-programmable-rom-eeprom","link":"#electronically-erasable-programmable-rom-eeprom","children":[]},{"level":3,"title":"Flash Memory","slug":"flash-memory","link":"#flash-memory","children":[]},{"level":3,"title":"Summary of ROM","slug":"summary-of-rom","link":"#summary-of-rom","children":[]}]},{"level":2,"title":"Chip Logic","slug":"chip-logic","link":"#chip-logic","children":[{"level":3,"title":"Simple Example of 64 Cells","slug":"simple-example-of-64-cells","link":"#simple-example-of-64-cells","children":[]},{"level":3,"title":"Example of 16-Mbit DRAM","slug":"example-of-16-mbit-dram","link":"#example-of-16-mbit-dram","children":[]},{"level":3,"title":"Read/Write operation","slug":"read-write-operation","link":"#read-write-operation","children":[]},{"level":3,"title":"Summary of Chip Logic","slug":"summary-of-chip-logic","link":"#summary-of-chip-logic","children":[]}]},{"level":2,"title":"Memory Errors","slug":"memory-errors","link":"#memory-errors","children":[{"level":3,"title":"Coding Theory","slug":"coding-theory","link":"#coding-theory","children":[]},{"level":3,"title":"Framework of Error Correction","slug":"framework-of-error-correction","link":"#framework-of-error-correction","children":[]},{"level":3,"title":"Encode for check","slug":"encode-for-check","link":"#encode-for-check","children":[]},{"level":3,"title":"Correct","slug":"correct","link":"#correct","children":[]}]},{"level":2,"title":"引用","slug":"引用","link":"#引用","children":[]}],"git":{"createdTime":1726378409000,"updatedTime":1726378409000,"contributors":[{"name":"hanjiaming","email":"47519540+guomaimang@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":46.18,"words":4618},"filePathRelative":"note/cs/co/Memory/Internal-Memory.md","localizedDate":"2021年5月1日","excerpt":"<h1> Internal Memory</h1>\\n<h2> Recap</h2>\\n<h3> Internal memory: Cache</h3>\\n<ul>\\n<li>why? -- locality of references: CPU tends to access clusters of data at certain time「为什么？ -引用的位置：CPU倾向于在特定时间访问数据集群」</li>\\n<li>the introduction of fast but small memory (Cache) between CPU and main memory「在CPU和主内存之间引入快速但较小的内存（Cache）」</li>\\n<li>mechanism: dynamically copy clusters into Cache -- virtually, we are using fast and large memory「机制：将集群动态复制到Cache中-实际上，我们正在使用快速且大容量的内存」</li>\\n</ul>","autoDesc":true}');export{e as data};
