const e=JSON.parse('{"key":"v-2ea2c16a","path":"/note/it/arch/jwt-renew.html","title":"JWT 续签方案详解","lang":"zh-CN","frontmatter":{"article":false,"date":"2024-12-23T00:00:00.000Z","index":true,"order":21,"headerDepth":1,"category":["tech"],"description":"JWT 续签方案详解 在前后端分离架构下，JWT（JSON Web Token）认证方案广泛应用。 然而，JWT的无状态性使得其续签功能的实现变得棘手。 本次分享将结合实际经验，介绍如何在不同场景下实现JWT的续签功能。 为什么需要JWT续签 JWT的基本流程 用户登录后，认证中心颁发JWT，并返回给客户端。 JWT包含用户基本信息和过期时间（Exp）。 客户端保存JWT，并在访问后台核心接口时附加在请求头或Cookie中。","head":[["meta",{"property":"og:url","content":"https://guomaimang.github.io/note/it/arch/jwt-renew.html"}],["meta",{"property":"og:site_name","content":"韩佳明 & Hirsun"}],["meta",{"property":"og:title","content":"JWT 续签方案详解"}],["meta",{"property":"og:description","content":"JWT 续签方案详解 在前后端分离架构下，JWT（JSON Web Token）认证方案广泛应用。 然而，JWT的无状态性使得其续签功能的实现变得棘手。 本次分享将结合实际经验，介绍如何在不同场景下实现JWT的续签功能。 为什么需要JWT续签 JWT的基本流程 用户登录后，认证中心颁发JWT，并返回给客户端。 JWT包含用户基本信息和过期时间（Exp）。 客户端保存JWT，并在访问后台核心接口时附加在请求头或Cookie中。"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-09T16:07:41.000Z"}],["meta",{"property":"article:author","content":"Hirsun"}],["meta",{"property":"article:published_time","content":"2024-12-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-09T16:07:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"JWT 续签方案详解\\",\\"description\\":\\"JWT 续签方案详解 在前后端分离架构下，JWT（JSON Web Token）认证方案广泛应用。 然而，JWT的无状态性使得其续签功能的实现变得棘手。 本次分享将结合实际经验，介绍如何在不同场景下实现JWT的续签功能。 为什么需要JWT续签 JWT的基本流程 用户登录后，认证中心颁发JWT，并返回给客户端。 JWT包含用户基本信息和过期时间（Exp）。 客户端保存JWT，并在访问后台核心接口时附加在请求头或Cookie中。\\"}"]]},"headers":[{"level":2,"title":"为什么需要JWT续签","slug":"为什么需要jwt续签","link":"#为什么需要jwt续签","children":[{"level":3,"title":"JWT的基本流程","slug":"jwt的基本流程","link":"#jwt的基本流程","children":[]},{"level":3,"title":"JWT过期问题","slug":"jwt过期问题","link":"#jwt过期问题","children":[]},{"level":3,"title":"不设置过期时间的风险","slug":"不设置过期时间的风险","link":"#不设置过期时间的风险","children":[]},{"level":3,"title":"续签的必要性","slug":"续签的必要性","link":"#续签的必要性","children":[]},{"level":3,"title":"续签的限制","slug":"续签的限制","link":"#续签的限制","children":[]}]},{"level":2,"title":"场景一：前台不允许改变 JWT 令牌","slug":"场景一-前台不允许改变-jwt-令牌","link":"#场景一-前台不允许改变-jwt-令牌","children":[{"level":3,"title":"解决方案：利用后台的Redis","slug":"解决方案-利用后台的redis","link":"#解决方案-利用后台的redis","children":[]},{"level":3,"title":"优缺点","slug":"优缺点","link":"#优缺点","children":[]}]},{"level":2,"title":"3. 场景二：前台允许改变JWT令牌","slug":"_3-场景二-前台允许改变jwt令牌","link":"#_3-场景二-前台允许改变jwt令牌","children":[{"level":3,"title":"解决方案：使用两个JWT（Access Token 和 Refresh Token）","slug":"解决方案-使用两个jwt-access-token-和-refresh-token","link":"#解决方案-使用两个jwt-access-token-和-refresh-token","children":[]},{"level":3,"title":"安全性考虑","slug":"安全性考虑","link":"#安全性考虑","children":[]},{"level":3,"title":"优缺点","slug":"优缺点-1","link":"#优缺点-1","children":[]}]},{"level":2,"title":"4. 解决重发JWT的问题","slug":"_4-解决重发jwt的问题","link":"#_4-解决重发jwt的问题","children":[{"level":3,"title":"问题描述","slug":"问题描述","link":"#问题描述","children":[]},{"level":3,"title":"解决方案：计时Map数据结构","slug":"解决方案-计时map数据结构","link":"#解决方案-计时map数据结构","children":[]}]},{"level":2,"title":"5. 总结","slug":"_5-总结","link":"#_5-总结","children":[]}],"git":{"createdTime":1735324435000,"updatedTime":1736438861000,"contributors":[{"name":"hanjiaming","email":"47519540+guomaimang@users.noreply.github.com","commits":2}]},"readingTime":{"minutes":12.46,"words":1246},"filePathRelative":"note/it/arch/jwt-renew.md","localizedDate":"2024年12月23日","excerpt":"<h1> JWT 续签方案详解</h1>\\n<p>在前后端分离架构下，JWT（JSON Web Token）认证方案广泛应用。</p>\\n<p>然而，JWT的无状态性使得其续签功能的实现变得棘手。</p>\\n<p>本次分享将结合实际经验，介绍如何在不同场景下实现JWT的续签功能。</p>\\n<h2> 为什么需要JWT续签</h2>\\n<h3> JWT的基本流程</h3>\\n<ol>\\n<li>用户登录后，认证中心颁发JWT，并返回给客户端。</li>\\n<li>JWT包含用户基本信息和过期时间（Exp）。</li>\\n<li>客户端保存JWT，并在访问后台核心接口时附加在请求头或Cookie中。</li>\\n</ol>","autoDesc":true}');export{e as data};
