const e=JSON.parse('{"key":"v-0181d7e2","path":"/note/cs/programming/java/io/file-io.html","title":"Java 文件 IO","lang":"zh-CN","frontmatter":{"article":false,"date":"2022-05-29T00:00:00.000Z","order":3,"description":"Java 文件 IO 二进制文件与文本文件 之前说过，一个文件不是二进制文件就是文本文件。 既然电脑上的文件都是以二进制序列存储。那么二进制文件和文本文件有什么区别呢？ 文本文件：是基于字符编码的文件，常见的编码有ASCII编码，UNICODE]编码等等。 二进制文件：是基于值编码的文件，你可以根据具体应用，指定某个值是什么意思（这样一个过程，可以看作是自定义编码。 其实没有一个特定的划分定义。两者本质上无区别。 如果文件内都是 以比如ASCII字符编码的序列，就说是文本文件。 如果二进制文件内有涉及到非编码内容, 比如IEEE 机器码等，就说是二进制文件。","head":[["meta",{"property":"og:url","content":"https://guomaimang.github.io/note/cs/programming/java/io/file-io.html"}],["meta",{"property":"og:site_name","content":"HAN Jiaming"}],["meta",{"property":"og:title","content":"Java 文件 IO"}],["meta",{"property":"og:description","content":"Java 文件 IO 二进制文件与文本文件 之前说过，一个文件不是二进制文件就是文本文件。 既然电脑上的文件都是以二进制序列存储。那么二进制文件和文本文件有什么区别呢？ 文本文件：是基于字符编码的文件，常见的编码有ASCII编码，UNICODE]编码等等。 二进制文件：是基于值编码的文件，你可以根据具体应用，指定某个值是什么意思（这样一个过程，可以看作是自定义编码。 其实没有一个特定的划分定义。两者本质上无区别。 如果文件内都是 以比如ASCII字符编码的序列，就说是文本文件。 如果二进制文件内有涉及到非编码内容, 比如IEEE 机器码等，就说是二进制文件。"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-15T05:33:29.000Z"}],["meta",{"property":"article:author","content":"Hirsun (HAN Jiaming)"}],["meta",{"property":"article:published_time","content":"2022-05-29T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-15T05:33:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"Java 文件 IO\\",\\"description\\":\\"Java 文件 IO 二进制文件与文本文件 之前说过，一个文件不是二进制文件就是文本文件。 既然电脑上的文件都是以二进制序列存储。那么二进制文件和文本文件有什么区别呢？ 文本文件：是基于字符编码的文件，常见的编码有ASCII编码，UNICODE]编码等等。 二进制文件：是基于值编码的文件，你可以根据具体应用，指定某个值是什么意思（这样一个过程，可以看作是自定义编码。 其实没有一个特定的划分定义。两者本质上无区别。 如果文件内都是 以比如ASCII字符编码的序列，就说是文本文件。 如果二进制文件内有涉及到非编码内容, 比如IEEE 机器码等，就说是二进制文件。\\"}"]]},"headers":[{"level":2,"title":"二进制文件与文本文件","slug":"二进制文件与文本文件","link":"#二进制文件与文本文件","children":[]},{"level":2,"title":"用 Java 实现 copy file","slug":"用-java-实现-copy-file","link":"#用-java-实现-copy-file","children":[]},{"level":2,"title":"File类","slug":"file类","link":"#file类","children":[]},{"level":2,"title":"使用 Printwrite 写文件","slug":"使用-printwrite-写文件","link":"#使用-printwrite-写文件","children":[]},{"level":2,"title":"使用 Java 传输文件","slug":"使用-java-传输文件","link":"#使用-java-传输文件","children":[]}],"git":{"createdTime":1726378409000,"updatedTime":1726378409000,"contributors":[{"name":"hanjiaming","email":"47519540+guomaimang@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":7.82,"words":782},"filePathRelative":"note/cs/programming/java/io/file-io.md","localizedDate":"2022年5月29日","excerpt":"<h1> Java 文件 IO</h1>\\n<h2> 二进制文件与文本文件</h2>\\n<p>之前说过，一个文件不是二进制文件就是文本文件。</p>\\n<p>既然电脑上的文件都是以二进制序列存储。那么二进制文件和文本文件有什么区别呢？</p>\\n<ul>\\n<li>文本文件：是基于字符编码的文件，常见的编码有ASCII编码，UNICODE]编码等等。</li>\\n<li>二进制文件：是基于值编码的文件，你可以根据具体应用，指定某个值是什么意思（这样一个过程，可以看作是自定义编码。</li>\\n</ul>\\n<p>其实没有一个特定的划分定义。两者本质上无区别。</p>\\n<ul>\\n<li>如果文件内都是 以比如ASCII字符编码的序列，就说是文本文件。</li>\\n<li>如果二进制文件内有涉及到非编码内容, 比如IEEE 机器码等，就说是二进制文件。</li>\\n</ul>","autoDesc":true}');export{e as data};
