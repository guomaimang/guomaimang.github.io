const e=JSON.parse('{"key":"v-331fcf3c","path":"/note/it/arch/multi-level-cache-arch.html","title":"多级缓存架构","lang":"zh-CN","frontmatter":{"article":false,"date":"2024-12-23T00:00:00.000Z","index":true,"order":3,"headerDepth":1,"category":["tech"],"description":"多级缓存架构 Web 应用的客户端缓存 应用层的静态资源缓存 服务层的多级缓存 引言 缓存是架构设计中提升性能最直接的方法。 举例：假设应用程序将原始数据存放在 MySQL 数据库中。 MySQL 会将数据存储在硬盘上，以防止掉电丢失。 硬盘的 IO 性能比内存差一个数量级。 典型的读多写少场景，如淘宝、京东等电商应用，需要进行数据的读写分离, 读多写少。 90% 的读取操作通过 Redis 进行数据提取，利用内存的高吞吐特性完成数据操作。","head":[["meta",{"property":"og:url","content":"https://guomaimang.github.io/note/it/arch/multi-level-cache-arch.html"}],["meta",{"property":"og:site_name","content":"Hirsun HAN (Jiaming) | 韩佳明"}],["meta",{"property":"og:title","content":"多级缓存架构"}],["meta",{"property":"og:description","content":"多级缓存架构 Web 应用的客户端缓存 应用层的静态资源缓存 服务层的多级缓存 引言 缓存是架构设计中提升性能最直接的方法。 举例：假设应用程序将原始数据存放在 MySQL 数据库中。 MySQL 会将数据存储在硬盘上，以防止掉电丢失。 硬盘的 IO 性能比内存差一个数量级。 典型的读多写少场景，如淘宝、京东等电商应用，需要进行数据的读写分离, 读多写少。 90% 的读取操作通过 Redis 进行数据提取，利用内存的高吞吐特性完成数据操作。"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-22T20:15:45.000Z"}],["meta",{"property":"article:author","content":"Hirsun (HAN Jiaming)"}],["meta",{"property":"article:published_time","content":"2024-12-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-22T20:15:45.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"多级缓存架构\\",\\"description\\":\\"多级缓存架构 Web 应用的客户端缓存 应用层的静态资源缓存 服务层的多级缓存 引言 缓存是架构设计中提升性能最直接的方法。 举例：假设应用程序将原始数据存放在 MySQL 数据库中。 MySQL 会将数据存储在硬盘上，以防止掉电丢失。 硬盘的 IO 性能比内存差一个数量级。 典型的读多写少场景，如淘宝、京东等电商应用，需要进行数据的读写分离, 读多写少。 90% 的读取操作通过 Redis 进行数据提取，利用内存的高吞吐特性完成数据操作。\\"}"]]},"headers":[{"level":2,"title":"引言","slug":"引言","link":"#引言","children":[]},{"level":2,"title":"多级缓存架构","slug":"多级缓存架构-1","link":"#多级缓存架构-1","children":[{"level":3,"title":"客户端缓存","slug":"客户端缓存","link":"#客户端缓存","children":[]},{"level":3,"title":"应用层缓存","slug":"应用层缓存","link":"#应用层缓存","children":[]},{"level":3,"title":"服务层缓存","slug":"服务层缓存","link":"#服务层缓存","children":[]}]},{"level":2,"title":"什么时候引入多级缓存？","slug":"什么时候引入多级缓存","link":"#什么时候引入多级缓存","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1734898545000,"updatedTime":1734898545000,"contributors":[{"name":"hanjiaming","email":"47519540+guomaimang@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":13.54,"words":1354},"filePathRelative":"note/it/arch/multi-level-cache-arch.md","localizedDate":"2024年12月23日","excerpt":"<h1> 多级缓存架构</h1>\\n<ol>\\n<li>Web 应用的客户端缓存</li>\\n<li>应用层的静态资源缓存</li>\\n<li>服务层的多级缓存</li>\\n</ol>\\n<h2> 引言</h2>\\n<p>缓存是架构设计中提升性能最直接的方法。</p>\\n<img src=\\"https://pic.hanjiaming.com.cn/2024/12/18/e079413d12722.png\\" alt=\\"1734525394385.png\\" style=\\"zoom:33%;\\">\\n<p>举例：假设应用程序将原始数据存放在 MySQL 数据库中。</p>\\n<ul>\\n<li>MySQL 会将数据存储在硬盘上，以防止掉电丢失。</li>\\n<li>硬盘的 IO 性能比内存差一个数量级。</li>\\n<li>典型的读多写少场景，如淘宝、京东等电商应用，需要进行数据的读写分离, 读多写少。</li>\\n<li>90% 的读取操作通过 Redis 进行数据提取，利用内存的高吞吐特性完成数据操作。</li>\\n</ul>","autoDesc":true}');export{e as data};
