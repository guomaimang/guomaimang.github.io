import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as e,c as t,e as l,a as s,b as a}from"./app-c4852ce4.js";const m={},i=l('<h1 id="basic-cryptography-iii" tabindex="-1"><a class="header-anchor" href="#basic-cryptography-iii" aria-hidden="true">#</a> Basic Cryptography III</h1><h2 id="symmetric-key-management" tabindex="-1"><a class="header-anchor" href="#symmetric-key-management" aria-hidden="true">#</a> Symmetric Key Management</h2><img src="https://pic.hanjiaming.com.cn/2023/02/27/02dc06586fcc0.png" alt="1677428654782.png" style="zoom:33%;"><ul><li>每一对通信实体都需要一个共享密钥</li><li>对于一个 n 方系统，系统中有 n(n-1)/2 个不同的密钥，每一方需要维护n-1 个不同的密钥。</li><li>如何减少系统中共享钥匙的数量？ <ul><li>集中式密钥管理「Centralized key management」</li><li>Public keys</li></ul></li></ul><h2 id="centralized-key-management" tabindex="-1"><a class="header-anchor" href="#centralized-key-management" aria-hidden="true">#</a> Centralized Key Management</h2><figure><img src="https://pic.hanjiaming.com.cn/2023/02/27/ae7e224ac4dc7.png" alt="1677428830567.png" tabindex="0" loading="lazy"><figcaption>1677428830567.png</figcaption></figure><ul><li>只有n个长期密钥「ong-term secret keys」，而不是系统中的 n(n - 1)/2</li><li>每个用户与服务器共享一个长期秘钥</li><li>Secret keys are used only for the secure delivery of session keys</li><li>Real data are encrypted under session keys</li></ul><h2 id="public-key-encryption" tabindex="-1"><a class="header-anchor" href="#public-key-encryption" aria-hidden="true">#</a> Public Key Encryption</h2><figure><img src="https://pic.hanjiaming.com.cn/2023/02/27/e4d7cdf2507fa.png" alt="1677429722495.png" tabindex="0" loading="lazy"><figcaption>1677429722495.png</figcaption></figure><ul><li>接收者Bob有一个密钥对：公钥和私钥 <ul><li>发布公钥，使密钥为公众所知</li><li>Bob 将私钥保密</li></ul></li><li>其他人使用 Bob 的公钥为 Bob 加密消息</li><li>Bob 使用他的私钥解密</li></ul><p>安全要求：</p><ol><li>难以从密文中找到私钥或明文</li><li>很难从公钥中找到私钥</li></ol><h2 id="motivation-of-public-key-crypt" tabindex="-1"><a class="header-anchor" href="#motivation-of-public-key-crypt" aria-hidden="true">#</a> Motivation of Public Key Crypt</h2><ul><li>对称密钥算法的问题 <ul><li>发送方需要一个安全的方法来告诉接收方加密密钥的信息</li><li>您可能与之通信的每个人都需要一个单独的密钥（可扩展性问题）</li></ul></li><li>公钥算法使用公钥和私钥对来解决这两个问题 <ul><li>每个接收器都有一个密钥对</li><li>公钥是公开的（已发布）</li><li>发送方使用接收方的公钥对信息进行加密</li><li>只有接收方可以用相应的私钥解密</li></ul></li></ul><h2 id="rsa-encryption-algorithm" tabindex="-1"><a class="header-anchor" href="#rsa-encryption-algorithm" aria-hidden="true">#</a> RSA Encryption Algorithm</h2><ul><li>最著名和最广泛使用的公钥计划</li><li>安全性依赖于大数因式分解的难度 <ul><li>(对于RSA）给定一个整数n，找出两个整数p和q，使n=pq</li><li>Factorization is sub-exponential (hard)</li></ul></li></ul><h3 id="rsa-原理" tabindex="-1"><a class="header-anchor" href="#rsa-原理" aria-hidden="true">#</a> RSA 原理</h3><p>要使用 RSA 算法对数据进行加密和解密，<strong>首先要确定分组的大小</strong>。为了实现这一步，<strong>必须确保该分组可以保存的最大数值要小于n的位数</strong>。</p>',18),r=s("ul",null,[s("li",null,[s("strong",null,"随机"),a("选择两个大的、长度大致相等的质数，"),s("strong",null,"p 和 q"),a(", (p<q) "),s("ul",null,[s("li",null,"E.g., |p| = |q| = 512 bits")])]),s("li",null,"设定 n = p * q（n 称为公共模数）"),s("li",null,[a("随机选择 e，使得 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",{mathvariant:"normal"},"gcd"),s("mo",null,"⁡"),s("mo",{stretchy:"false"},"("),s("mi",null,"e"),s("mo",{separator:"true"},","),s("mi",null,"φ"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",{stretchy:"false"},")"),s("mo",{stretchy:"false"},")"),s("mo",null,"="),s("mn",null,"1")]),s("annotation",{encoding:"application/x-tex"},"\\operatorname{gcd}(e, \\varphi(n))=1")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mop"},[s("span",{class:"mord mathrm"},"gcd")]),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal"},"φ"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},"))"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"1")])])]),s("ul",null,[s("li",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"φ"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",{stretchy:"false"},")"),s("mo",null,"="),s("mi",null,"φ"),s("mo",{stretchy:"false"},"("),s("mi",null,"p"),s("mi",null,"q"),s("mo",{stretchy:"false"},")"),s("mo",null,"="),s("mo",{stretchy:"false"},"("),s("mi",null,"p"),s("mo",null,"−"),s("mn",null,"1"),s("mo",{stretchy:"false"},")"),s("mo",{stretchy:"false"},"("),s("mi",null,"q"),s("mo",null,"−"),s("mn",null,"1"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"\\varphi(n)=\\varphi(p q)=(p-1)(q-1)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"φ"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"φ"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"pq"),s("span",{class:"mclose"},")"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"p"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},"1"),s("span",{class:"mclose"},")"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"q"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},"1"),s("span",{class:"mclose"},")")])])])]),s("li",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",{mathvariant:"normal"},"gcd"),s("mo",null,"⁡"),s("mo",{stretchy:"false"},"("),s("mi",null,"e"),s("mo",{separator:"true"},","),s("mi",null,"φ"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",{stretchy:"false"},")"),s("mo",{stretchy:"false"},")"),s("mo",null,"="),s("mn",null,"1")]),s("annotation",{encoding:"application/x-tex"},"\\operatorname{gcd}(e, \\varphi(n))=1")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mop"},[s("span",{class:"mord mathrm"},"gcd")]),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal"},"φ"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},"))"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"1")])])]),a(" 指 "),s("code",null,"e 与 (p - 1) * (q - 1) 互质")]),s("li",null,[a("e 被称为 "),s("em",null,"公共指数 「public exponent」")])])]),s("li",null,[s("strong",null,"计算 d"),a(" 使得 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"d"),s("mi",null,"e"),s("mtext",null," "),s("mo",{lspace:"0.22em",rspace:"0.22em"},[s("mrow",null,[s("mi",{mathvariant:"normal"},"m"),s("mi",{mathvariant:"normal"},"o"),s("mi",{mathvariant:"normal"},"d")])]),s("mtext",null," "),s("mi",null,"φ"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",{stretchy:"false"},")"),s("mo",null,"="),s("mn",null,"1")]),s("annotation",{encoding:"application/x-tex"},"de \\bmod \\varphi(n) = 1")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal"},"d"),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mspace",style:{"margin-right":"0.0556em"}}),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},[s("span",{class:"mord"},[s("span",{class:"mord mathrm"},"mod")])]),s("span",{class:"mspace",style:{"margin-right":"0.0556em"}}),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"φ"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"1")])])]),s("ul",null,[s("li",null,[a("d is called the "),s("em",null,"private exponent")])])])],-1),c=s("div",{class:"hint-container tip"},[s("p",{class:"hint-container-title"},"modular inverse"),s("p",null,[a("If we said "),s("code",null,"x is the modular inverse of 7 modulo 26"),a(", it means")]),s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mn",null,"7"),s("mi",null,"x"),s("mtext",null," "),s("mo",{lspace:"0.22em",rspace:"0.22em"},[s("mrow",null,[s("mi",{mathvariant:"normal"},"m"),s("mi",{mathvariant:"normal"},"o"),s("mi",{mathvariant:"normal"},"d")])]),s("mtext",null," "),s("mn",null,"26"),s("mo",null,"="),s("mn",null,"1")]),s("annotation",{encoding:"application/x-tex"}," 7x \\bmod 26 = 1 ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord"},"7"),s("span",{class:"mord mathnormal"},"x"),s("span",{class:"mspace",style:{"margin-right":"0.0556em"}}),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},[s("span",{class:"mord"},[s("span",{class:"mord mathrm"},"mod")])]),s("span",{class:"mspace",style:{"margin-right":"0.0556em"}}),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"26"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"1")])])])])]),s("p",null,"It could be written as"),s("ul",null,[s("li",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"7"),s("mi",null,"x"),s("mo",null,"≡"),s("mn",null,"1"),s("mtext",null," "),s("mo",{stretchy:"false"},"("),s("mi",null,"m"),s("mi",null,"o"),s("mi",null,"d"),s("mtext",null," "),s("mn",null,"26"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"7x ≡ 1 \\ (mod \\ 26)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"7"),s("span",{class:"mord mathnormal"},"x"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"≡"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},"1"),s("span",{class:"mspace"}," "),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"m"),s("span",{class:"mord mathnormal"},"o"),s("span",{class:"mord mathnormal"},"d"),s("span",{class:"mspace"}," "),s("span",{class:"mord"},"26"),s("span",{class:"mclose"},")")])])])]),s("li",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"7"),s("mo",null,"≡"),s("msup",null,[s("mi",null,"x"),s("mrow",null,[s("mo",null,"−"),s("mn",null,"1")])]),s("mtext",null," "),s("mo",{lspace:"0.22em",rspace:"0.22em"},[s("mrow",null,[s("mi",{mathvariant:"normal"},"m"),s("mi",{mathvariant:"normal"},"o"),s("mi",{mathvariant:"normal"},"d")])]),s("mtext",null," "),s("mn",null,"26")]),s("annotation",{encoding:"application/x-tex"},"7 \\equiv x^{-1} \\bmod 26")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"7"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"≡"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8141em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"x"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"−"),s("span",{class:"mord mtight"},"1")])])])])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.0556em"}}),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},[s("span",{class:"mord"},[s("span",{class:"mord mathrm"},"mod")])]),s("span",{class:"mspace",style:{"margin-right":"0.0556em"}}),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"26")])])])]),s("li",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"a"),s("mo",null,"×"),s("mn",null,"7"),s("mo",null,"+"),s("mi",null,"b"),s("mo",null,"×"),s("mn",null,"26"),s("mo",null,"="),s("mn",null,"1")]),s("annotation",{encoding:"application/x-tex"},"a × 7 + b × 26 = 1")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6667em","vertical-align":"-0.0833em"}}),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"7"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7778em","vertical-align":"-0.0833em"}}),s("span",{class:"mord mathnormal"},"b"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"26"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"1")])])])])]),s("p",null,"可以通过尝试使用 Euclidean algorithm 计算出来，也可以通过遍历算出来，因为 If a modular inverse exists, there will be exactly one solution between 0 and m-1, where m is the modulus (本案例为 26).")],-1),p=s("p",null,"设定好数字后",-1),o=s("ul",null,[s("li",null,[a("Public Key「PK」 is "),s("code",null,"(n, e)")]),s("li",null,[a("Private Key 「SK」 is "),s("code",null,"d")])],-1),h=s("p",null,"之后",-1),u=s("ul",null,[s("li",null,[a("Encryption: "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"c"),s("mo",null,"="),s("msup",null,[s("mi",null,"M"),s("mi",null,"e")]),s("mtext",null," "),s("mo",{lspace:"0.22em",rspace:"0.22em"},[s("mrow",null,[s("mi",{mathvariant:"normal"},"m"),s("mi",{mathvariant:"normal"},"o"),s("mi",{mathvariant:"normal"},"d")])]),s("mtext",null," "),s("mi",null,"n")]),s("annotation",{encoding:"application/x-tex"},"c = M^e \\bmod n")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"c"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"M"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.6644em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"e")])])])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.0556em"}}),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},[s("span",{class:"mord"},[s("span",{class:"mord mathrm"},"mod")])]),s("span",{class:"mspace",style:{"margin-right":"0.0556em"}}),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"n")])])]),s("ul",null,[s("li",null,"M is plaintext"),s("li",null,"c is ciphertext")])]),s("li",null,[a("Decryption: "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"M"),s("mo",null,"="),s("msup",null,[s("mi",null,"C"),s("mi",null,"d")]),s("mtext",null," "),s("mo",{lspace:"0.22em",rspace:"0.22em"},[s("mrow",null,[s("mi",{mathvariant:"normal"},"m"),s("mi",{mathvariant:"normal"},"o"),s("mi",{mathvariant:"normal"},"d")])]),s("mtext",null," "),s("mi",null,"n")]),s("annotation",{encoding:"application/x-tex"},"M=C^{d} \\bmod n")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"M"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8491em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.07153em"}},"C"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8491em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"d")])])])])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.0556em"}}),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},[s("span",{class:"mord"},[s("span",{class:"mord mathrm"},"mod")])]),s("span",{class:"mspace",style:{"margin-right":"0.0556em"}}),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"n")])])]),s("ul",null,[s("li",null,[a("Since "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msup",null,[s("mrow",null,[s("mo",{fence:"true"},"("),s("msup",null,[s("mi",null,"M"),s("mi",null,"e")]),s("mo",{fence:"true"},")")]),s("mi",null,"d")]),s("mtext",null," "),s("mo",{lspace:"0.22em",rspace:"0.22em"},[s("mrow",null,[s("mi",{mathvariant:"normal"},"m"),s("mi",{mathvariant:"normal"},"o"),s("mi",{mathvariant:"normal"},"d")])]),s("mtext",null," "),s("mi",null,"n"),s("mo",null,"="),s("mi",null,"M"),s("mi",{mathvariant:"normal"},"mod"),s("mo",null,"⁡"),s("mi",null,"n"),s("mo",null,"="),s("mi",null,"M")]),s("annotation",{encoding:"application/x-tex"},"\\left(M^{e}\\right)^{d} \\bmod n= M\\operatorname{mod} n = M")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.239em","vertical-align":"-0.25em"}}),s("span",{class:"minner"},[s("span",{class:"minner"},[s("span",{class:"mopen delimcenter",style:{top:"0em"}},"("),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"M"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.6644em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"e")])])])])])])])]),s("span",{class:"mclose delimcenter",style:{top:"0em"}},")")]),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.989em"}},[s("span",{style:{top:"-3.2029em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"d")])])])])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.0556em"}}),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},[s("span",{class:"mord"},[s("span",{class:"mord mathrm"},"mod")])]),s("span",{class:"mspace",style:{"margin-right":"0.0556em"}}),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"M"),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mop"},[s("span",{class:"mord mathrm"},"mod")]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"M")])])])])])])],-1),g=s("p",null,[a("Note: The exponent, say x, is calculated by x mod "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"φ"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"\\varphi(n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"φ"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])]),a(". For simplicity, we just write x.")],-1),d=s("h3",{id:"example",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#example","aria-hidden":"true"},"#"),a(" Example")],-1),y=s("ul",null,[s("li",null,[a("Choose two primes p = 47 and q = 71 "),s("ul",null,[s("li",null,"n = pq = 3337")])]),s("li",null,[a("随机选择 e 使其与 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"φ"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"\\varphi(n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"φ"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])]),a(" 互质 "),s("ul",null,[s("li",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"φ"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",{stretchy:"false"},")"),s("mo",null,"="),s("mo",{stretchy:"false"},"("),s("mi",null,"p"),s("mo",null,"−"),s("mn",null,"1"),s("mo",{stretchy:"false"},")"),s("mo",{stretchy:"false"},"("),s("mi",null,"q"),s("mo",null,"−"),s("mn",null,"1"),s("mo",{stretchy:"false"},")"),s("mo",null,"="),s("mn",null,"46"),s("mo",null,"×"),s("mn",null,"70"),s("mo",null,"="),s("mn",null,"3220")]),s("annotation",{encoding:"application/x-tex"},"\\varphi(n)=(p-1)(q-1)=46 \\times 70=3220")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"φ"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"p"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},"1"),s("span",{class:"mclose"},")"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"q"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},"1"),s("span",{class:"mclose"},")"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"46"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"70"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"3220")])])])]),s("li",null,"E.g., e = 79")])]),s("li",null,[a("Compute "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"d"),s("mo",null,"≡"),s("msup",null,[s("mi",null,"e"),s("mrow",null,[s("mo",null,"−"),s("mn",null,"1")])]),s("mtext",null," "),s("mo",{lspace:"0.22em",rspace:"0.22em"},[s("mrow",null,[s("mi",{mathvariant:"normal"},"m"),s("mi",{mathvariant:"normal"},"o"),s("mi",{mathvariant:"normal"},"d")])]),s("mtext",null," "),s("mi",null,"φ"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"d \\equiv e^{-1} \\bmod \\varphi(n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal"},"d"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"≡"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8141em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"e"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"−"),s("span",{class:"mord mtight"},"1")])])])])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.0556em"}}),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},[s("span",{class:"mord"},[s("span",{class:"mord mathrm"},"mod")])]),s("span",{class:"mspace",style:{"margin-right":"0.0556em"}}),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"φ"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])]),s("ul",null,[s("li",null,[a("d = 79"),s("sup",null,"-1"),a(" (mod 3220) = 1")])])])],-1),x=s("div",{class:"hint-container tip"},[s("p",{class:"hint-container-title"},"Extended Euclidean"),s("ul",null,[s("li",null,[a("Assume "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"d"),s("mi",null,"e"),s("mtext",null," "),s("mo",{lspace:"0.22em",rspace:"0.22em"},[s("mrow",null,[s("mi",{mathvariant:"normal"},"m"),s("mi",{mathvariant:"normal"},"o"),s("mi",{mathvariant:"normal"},"d")])]),s("mtext",null," "),s("mi",null,"φ"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",{stretchy:"false"},")"),s("mo",null,"="),s("mn",null,"1")]),s("annotation",{encoding:"application/x-tex"},"de \\bmod \\varphi(n) = 1")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal"},"d"),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mspace",style:{"margin-right":"0.0556em"}}),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},[s("span",{class:"mord"},[s("span",{class:"mord mathrm"},"mod")])]),s("span",{class:"mspace",style:{"margin-right":"0.0556em"}}),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"φ"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"1")])])])]),s("li",null,[a("let a = e, b = "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"φ"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"\\varphi(n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"φ"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])]),a(" , a < b")])]),s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mi",null,"a"),s("mi",null,"x"),s("mo",null,"+"),s("mi",null,"b"),s("mi",null,"y"),s("mo",null,"="),s("mi",null,"g"),s("mi",null,"c"),s("mi",null,"d"),s("mo",{stretchy:"false"},"("),s("mi",null,"a"),s("mo",{separator:"true"},","),s("mi",null,"b"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"}," ax + by = gcd(a, b) ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6667em","vertical-align":"-0.0833em"}}),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mord mathnormal"},"x"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal"},"b"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"y"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal"},"c"),s("span",{class:"mord mathnormal"},"d"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal"},"b"),s("span",{class:"mclose"},")")])])])])]),s("ul",null,[s("li",null,[a("We want x, since d = x "),s("ul",null,[s("li",null,"x = x mod b, 0 < x < b, if x is exist"),s("li",null,"y < 0")])])]),s("figure",null,[s("img",{src:"https://pic.hanjiaming.com.cn/2023/02/27/0ccc89a34ee30.png",alt:"1677470727997.png",tabindex:"0",loading:"lazy"}),s("figcaption",null,"1677470727997.png")]),s("ul",null,[s("li",null,"x = -193, y = 176"),s("li",null,"let x = x mod b = -193 + 999 = 806"),s("li",null,"Therefore, d = x = 806")])],-1),b=s("h3",{id:"security",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#security","aria-hidden":"true"},"#"),a(" Security")],-1),f=s("p",null,[a("RSA算法的强度取决于对 "),s("em",null,"大数进行质因数分解的难度"),a("，即 很难通过 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"φ"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"\\varphi(n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"φ"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])]),a(" 得到 d。")],-1),w=s("ul",null,[s("li",null,[a("已知公钥 <e, n>，如果密码分析者可以分解 n = "),s("strong",null,"pq"),a("，则得到 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"φ"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"\\varphi(n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"φ"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])]),a(" = (p - 1)(q - 1)")]),s("li",null,[a("Knowing e and "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"φ"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"\\varphi(n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"φ"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])]),a(", d can be obtained easily")])],-1),v=l('<p>蛮力攻击可能吗？</p><p>RSA 公共指数 e 的值可以很小，例如 16 比特长 ，但 d 的值应该很大，例如至少 1000 比特长。</p><figure><img src="https://pic.hanjiaming.com.cn/2023/02/27/818d395866ddb.png" alt="1677471190606.png" tabindex="0" loading="lazy"><figcaption>1677471190606.png</figcaption></figure><p>从以上实际试探来看，512位的RSA密钥，以前被认为足以满足一些商业应用的需求，现在却存疑了。对于高安全性要求，可以考虑使用 2048 位密钥</p><p>密钥大小的安排应考虑到数据的寿命，跨越未来几十年的时间。</p><img src="https://pic.hanjiaming.com.cn/2023/02/27/e685fd7023b5f.png" alt="1677471366170.png" style="zoom:50%;"><h3 id="problem-of-public-key-crypt" tabindex="-1"><a class="header-anchor" href="#problem-of-public-key-crypt" aria-hidden="true">#</a> Problem of Public-Key Crypt</h3><ul><li>公钥密码学（PKC）可用于保密或认证。</li><li>但公钥算法很慢（由于大量的指数化运算）。</li><li>所以通常我们使用<strong>对称密钥</strong>加密来保护信息内容，比如使用 &quot; session key&quot;，并使用 PKC 来加密会话密钥 <ul><li>Merkle’s Secret Key Distribution</li><li>Diffie-Hellman Key Exchange</li></ul></li></ul><h2 id="comparison" tabindex="-1"><a class="header-anchor" href="#comparison" aria-hidden="true">#</a> Comparison</h2><table><thead><tr><th><strong>Symmetric key</strong></th><th><strong>Public key</strong></th></tr></thead><tbody><tr><td>Two parties MUST trust each other</td><td>Two parties DO NOT need to trust each other</td></tr><tr><td>Both share the same key</td><td>Two separate keys: a public and a private key</td></tr><tr><td>Attack approach: brute force</td><td>Attack approach: solving mathematical problems (e.g., factorization, discrete log problem)</td></tr><tr><td>Faster</td><td>Slower (100 - 1000 times slower)</td></tr><tr><td>Smaller key size</td><td>Larger key size</td></tr><tr><td>Examples: AES, DES, 3DES, ChaCha20...</td><td>Examples: RSA, ElGamal, ECC,...</td></tr></tbody></table><h2 id="merkle-s-secret-key-distribution" tabindex="-1"><a class="header-anchor" href="#merkle-s-secret-key-distribution" aria-hidden="true">#</a> Merkle’s Secret Key Distribution</h2><ul><li>梅克尔在1979年提出</li><li>A生成一个新的临时密钥对</li><li>A 向 B 发送<strong>公钥和 A 的身份信息</strong></li><li>B 生成一个会话密钥 K，并使用A的公钥将其加密后发送给A。</li><li>A使用A的私钥恢复加密的内容</li><li>A和B使用K来保证后续通信的安全</li></ul><h2 id="diffie–hellman-exchange" tabindex="-1"><a class="header-anchor" href="#diffie–hellman-exchange" aria-hidden="true">#</a> Diffie–Hellman Exchange</h2><p>DH 可以让双方在完全缺乏对方(私有)信息的前提条件下通过不安全的信道达成一个共享的密钥。此密钥用于对后续信息交换进行对称加密。</p><p>DH 方法针对的是以下困难的局面：Alice 和 Bob 想共有一个密钥，用于对称加密。但是他们之间的通信渠道是不安全的。所有经过此渠道的信息均会被敌对方：Eve看到。哪他们要如何交换信息，才能不让Eve知道这个密钥呢？</p><p>以下是DH协议的方案：</p><ul><li>Alice 和 Bob 先对 g 和 p 达成一致，而且公开出来。Eve也就知道它们的值了。</li><li>Alice 取一个私密的整数 a，发给Bob 计算结果：A = g<sup>a</sup> mod p.</li><li>Bob 取一私密的整数 b, 发给 Alice 计算结果 , B = g<sup>b</sup> mod p.</li><li>Alice 计算出 S = B<sup>a </sup> mod p = g<sup>ab</sup> mod p</li><li>Bob 计算出 S = A<sup>b</sup> mod p = g<sup>ab</sup> mod p</li><li>Alice 和 Bob 现在就拥有了一个共用的密钥 S</li></ul><p>虽然 Eve 看见了 g, p , <em>A</em> and <em>B</em>， 但是鉴于计算离散对数的困难性，她无法知道 <em>a</em>和 <em>b</em> 的具体值。所以 Eve就无从知晓密钥 S 是什么了。</p><details class="hint-container details"><summary>暴力破解</summary><figure><img src="https://pic.hanjiaming.com.cn/2023/03/04/9e710d41bcb9c.png" alt="1677907465779.png" tabindex="0" loading="lazy"><figcaption>1677907465779.png</figcaption></figure></details><h2 id="digital-signatures" tabindex="-1"><a class="header-anchor" href="#digital-signatures" aria-hidden="true">#</a> Digital Signatures</h2><p>有一份电子文件要从 Alice 发给 Bob，是否与手写签名有功能上的等同性？</p><ul><li>Alice 可以轻松地在文档上签名</li><li>但其他人很难伪造</li><li>Bob 或任何人都可以轻松验证</li></ul><p>解决方案：数字签名</p><ul><li>Sign using Alice’s private key</li><li>Verify using Alice’s public key</li></ul><figure><img src="https://pic.hanjiaming.com.cn/2023/02/27/7c4da7265c758.png" alt="1677471778837.png" tabindex="0" loading="lazy"><figcaption>1677471778837.png</figcaption></figure><h3 id="basic-model" tabindex="-1"><a class="header-anchor" href="#basic-model" aria-hidden="true">#</a> Basic Model</h3><figure><img src="https://pic.hanjiaming.com.cn/2023/02/27/77945de32f2e7.png" alt="1677471863052.png" tabindex="0" loading="lazy"><figcaption>1677471863052.png</figcaption></figure><ul><li>只有签名者（拥有私钥）才能在消息 m 上生成有效签名 σ</li><li>任何人（因为发布了相应的公钥）都可以验证关于 m 的 σ 是否有效</li></ul><p>思考：如何将公钥与发布者联系起来，确认该公钥是由发布者发布的？发布者会不会因为躲避某些责任而不承认文档和公钥为发布者发布的呢？这回使得应用场景发生哪些局限？</p><figure><img src="https://pic.hanjiaming.com.cn/2023/02/27/423c69aefe63c.png" alt="1677472085043.png" tabindex="0" loading="lazy"><figcaption>1677472085043.png</figcaption></figure><h3 id="rsa-signature-scheme" tabindex="-1"><a class="header-anchor" href="#rsa-signature-scheme" aria-hidden="true">#</a> RSA Signature Scheme</h3><ul><li>Setup <ul><li>n = pq where p, q are large prime (say 512 bits long each)</li><li>ed mod (p-1)(q-1) = 1</li><li>Signing (Private) Key : d</li><li>Verification (Public) Key : (e, n)</li></ul></li><li>Signature Generation: S = M<sup>d</sup> mod n <ul><li>where M is the message to be signed</li></ul></li><li>Signature Verification <ul><li>If S <sup>e</sup> mod n = M, output valid;</li><li>otherwise, output invalid</li></ul></li></ul><div class="hint-container tip"><p class="hint-container-title">HTTPS 方案设想</p><ol><li>客户端协商一个加密函数（如chacha20）和加密密码。</li><li>客户端把协商好的函数和密码使用公钥加密，发给服务端。</li><li>服务端用私钥解密后，回复给客户端同意该加密方案。</li><li>客户端收到后通知后，就开始这样的来回的使用对称方案加密。</li></ol><p>公钥公证可以找证书证书签发商验证，或者与自己电脑上的根证书做对比等。</p><p>注明：这只是我的早期猜想。</p></div><p>考虑 RSA 签名方案，如果 M &gt; n，如何对 M 进行签名？</p><ul><li>Choose a bigger n? Generally No</li><li>Divide M into smaller pieces such that M = m1||m2...||mn and sign them one-by-one? Generally No</li></ul><h3 id="hash-signature-scheme" tabindex="-1"><a class="header-anchor" href="#hash-signature-scheme" aria-hidden="true">#</a> Hash Signature Scheme</h3><p>Alice 不是直接对 M 签名，而是对 M 的哈希签名，用 H(M) 表示。</p><img src="https://pic.hanjiaming.com.cn/2023/02/28/5af2d850cf86c.png" alt="1677567043372.png" style="zoom:50%;"><ul><li>H is called a hash function</li><li>H 将任意长度的二进制字符串映射为小于 n 的非零整数</li><li>H(M) is called the message digest「信息摘要」</li></ul><h2 id="hash-function" tabindex="-1"><a class="header-anchor" href="#hash-function" aria-hidden="true">#</a> Hash Function</h2><p>用公钥数字签名方案对信息摘要进行签名</p><figure><img src="https://pic.hanjiaming.com.cn/2023/02/28/6d7c590d131b5.png" alt="1677567285621.png" tabindex="0" loading="lazy"><figcaption>1677567285621.png</figcaption></figure><ul><li>Well known hash functions: MD5, SHA-1, SHA-2</li><li>由于抗碰撞，不同的信息应该被散列成不同的信息摘要。</li></ul><h3 id="requirements-for-hash-functions" tabindex="-1"><a class="header-anchor" href="#requirements-for-hash-functions" aria-hidden="true">#</a> Requirements for Hash Functions</h3><ul><li>can be applied to <strong>any sized</strong> message M</li><li>produces <strong>fixed-length</strong> output h</li><li>is easy to compute h = H(M) for any message M</li><li><strong>one-way property</strong>: given h is infeasible to find M</li><li><strong>weak collision resistance</strong>: given x is infeasible to find y, so that H(y) = H(x)</li><li><strong>strong collision resistance</strong>: is infeasible to find any x, y so that H(y) = H(x)</li></ul><h3 id="security-1" tabindex="-1"><a class="header-anchor" href="#security-1" aria-hidden="true">#</a> Security</h3><p>每个抗碰撞的哈希函数H都有一个固定的输出长度「Hash Output Length」。</p><p>为了用暴力攻击破解 H 的（强）抗碰撞性，对手反复选择随机值 x，计算H(x) 并检查散列函数是否等于所有先前选择的随机值的任何一个散列值。</p><p>如果 H 的输出是 N 比特长，在发现碰撞之前，对手需要尝试的预期次数是多少？</p><p>问题：假设H的输出是 80 比特长，对抗者必须尝试多少个值才能使抗碰撞的概率至少为 1/2 ？=&gt; 2 <sup>40</sup></p><p>这表明，安全的 N 位散列需要 2 <sup>N/2</sup> 的尝试来 &quot;破解&quot;（就抗碰撞而言），平均而言。</p><div class="hint-container warning"><p class="hint-container-title">Brute force Attack Against the Collision- resistance of a Hash Function</p><ul><li>10 位消息摘要非常不安全，因为在进行略微超过 25（即 32）次随机散列后，发现一次冲突的概率至少为 0.5</li><li>40位信息摘要也是不安全的，因为在做了略微超过220个（约一百万）的随机哈希后，可以发现碰撞的概率至少为0.5。</li></ul><details class="hint-container details"><summary>Block Ciphers as Hash Functions</summary><ul><li>将输入消息划分为固定大小的块</li><li>输入的剩余位被填充以信息长度的值</li></ul><figure><img src="https://pic.hanjiaming.com.cn/2023/04/26/cb7f8f4f43bfb.png" alt="1682493205830.png" tabindex="0" loading="lazy"><figcaption>1682493205830.png</figcaption></figure><figure><img src="https://pic.hanjiaming.com.cn/2023/04/26/fb4e173e04b4c.png" alt="1682493822228.png" tabindex="0" loading="lazy"><figcaption>1682493822228.png</figcaption></figure><ol><li>初始化：选择一个初始值IV（初始向量），其长度等于分组密码的块长度。</li><li>迭代处理：将填充后的数据分成大小相等的块。对于每一个数据块，将其与上一个块的散列值进行某种操作（如异或），然后使用分组密码加密算法（如AES）对结果进行加密。将加密后的结果作为下一个块的散列值。对于第一个数据块，使用初始向量作为散列值。</li><li>输出：在处理完所有数据块后，最后一个加密结果作为散列函数的输出。</li></ol></details></div><h3 id="popular-crypto-hashes" tabindex="-1"><a class="header-anchor" href="#popular-crypto-hashes" aria-hidden="true">#</a> Popular Crypto Hashes</h3><ul><li>Popular Crypto Hashes <ul><li>128-bit output</li><li>In Aug 2004, Wang「王小云」, et al. showed that it is “easy” to find collisions in MD5. They found many collisions in very short time (in minutes)</li></ul></li><li>SHA-1 - A US government standard (similar to MD5) <ul><li>160-bit output</li><li>2005年2月，Wang等人表明，在SHA-1中可以发现碰撞，估计需要花费269次哈希计算。</li></ul></li><li>SHA-2 (SHA 256/384/512) <ul><li>Based on SHA-1 with a longer hash value</li><li>对于要求底层哈希函数应该是抗碰撞的应用，是时候从SHA-1迁移了。</li><li>Start using the standards SHA-256 and SHA-512</li></ul></li></ul>',54),k=[i,r,c,p,o,h,u,g,d,y,x,b,f,w,v];function M(S,A){return e(),t("div",null,k)}const H=n(m,[["render",M],["__file","basic-cryptography-3.html.vue"]]);export{H as default};
