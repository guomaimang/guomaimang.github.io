const e=JSON.parse('{"key":"v-48956191","path":"/note/cs/programming/python/Writing-Functions.html","title":"Writing Functions","lang":"zh-CN","frontmatter":{"article":false,"date":"2022-06-04T00:00:00.000Z","order":2,"description":"Writing Functions Docstrings def count_letter(content, letter): \\"\\"\\"Count the number of times `letter` appears in `content`. Args: content (str): The string to search. letter (str): The letter to search for. Returns: int # Add a section detailing what errors might be raised Raises: ValueError: If `letter` is not a one-character string. \\"\\"\\" if (not isinstance(letter, str)) or len(letter) != 1: raise ValueError(\'`letter` must be a single character string.\') return len([char for char in content if char == letter])","head":[["meta",{"property":"og:url","content":"https://guomaimang.github.io/note/cs/programming/python/Writing-Functions.html"}],["meta",{"property":"og:site_name","content":"Hirsun HAN (Jiaming)"}],["meta",{"property":"og:title","content":"Writing Functions"}],["meta",{"property":"og:description","content":"Writing Functions Docstrings def count_letter(content, letter): \\"\\"\\"Count the number of times `letter` appears in `content`. Args: content (str): The string to search. letter (str): The letter to search for. Returns: int # Add a section detailing what errors might be raised Raises: ValueError: If `letter` is not a one-character string. \\"\\"\\" if (not isinstance(letter, str)) or len(letter) != 1: raise ValueError(\'`letter` must be a single character string.\') return len([char for char in content if char == letter])"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-15T05:33:29.000Z"}],["meta",{"property":"article:author","content":"Hirsun (HAN Jiaming)"}],["meta",{"property":"article:published_time","content":"2022-06-04T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-15T05:33:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"Writing Functions\\",\\"description\\":\\"Writing Functions Docstrings def count_letter(content, letter): \\\\\\"\\\\\\"\\\\\\"Count the number of times `letter` appears in `content`. Args: content (str): The string to search. letter (str): The letter to search for. Returns: int # Add a section detailing what errors might be raised Raises: ValueError: If `letter` is not a one-character string. \\\\\\"\\\\\\"\\\\\\" if (not isinstance(letter, str)) or len(letter) != 1: raise ValueError(\'`letter` must be a single character string.\') return len([char for char in content if char == letter])\\"}"]]},"headers":[{"level":2,"title":"Docstrings","slug":"docstrings","link":"#docstrings","children":[{"level":3,"title":"如何直接获取","slug":"如何直接获取","link":"#如何直接获取","children":[]},{"level":3,"title":"inspect.getdoc()获取","slug":"inspect-getdoc-获取","link":"#inspect-getdoc-获取","children":[]}]},{"level":2,"title":"Pass by assignment","slug":"pass-by-assignment","link":"#pass-by-assignment","children":[]},{"level":2,"title":"context managers","slug":"context-managers","link":"#context-managers","children":[{"level":3,"title":"作用","slug":"作用","link":"#作用","children":[]},{"level":3,"title":"open()","slug":"open","link":"#open","children":[]},{"level":3,"title":"Using a context manager","slug":"using-a-context-manager","link":"#using-a-context-manager","children":[]},{"level":3,"title":"define a context manager","slug":"define-a-context-manager","link":"#define-a-context-manager","children":[]}]},{"level":2,"title":"Functions as objects","slug":"functions-as-objects","link":"#functions-as-objects","children":[{"level":3,"title":"调用和赋值","slug":"调用和赋值","link":"#调用和赋值","children":[]},{"level":3,"title":"Functions as variables","slug":"functions-as-variables","link":"#functions-as-variables","children":[]},{"level":3,"title":"子函数","slug":"子函数","link":"#子函数","children":[]}]},{"level":2,"title":"Scope","slug":"scope","link":"#scope","children":[{"level":3,"title":"Python 变量作用域","slug":"python-变量作用域","link":"#python-变量作用域","children":[]},{"level":3,"title":"全局变量在函数内可读不可写","slug":"全局变量在函数内可读不可写","link":"#全局变量在函数内可读不可写","children":[]},{"level":3,"title":"global 关键字","slug":"global-关键字","link":"#global-关键字","children":[]},{"level":3,"title":"nonlocal 关键字","slug":"nonlocal-关键字","link":"#nonlocal-关键字","children":[]}]},{"level":2,"title":"Closures","slug":"closures","link":"#closures","children":[]},{"level":2,"title":"Decorators","slug":"decorators","link":"#decorators","children":[{"level":3,"title":"使用修饰器","slug":"使用修饰器","link":"#使用修饰器","children":[]},{"level":3,"title":"创建修饰器","slug":"创建修饰器","link":"#创建修饰器","children":[]},{"level":3,"title":"示例1","slug":"示例1","link":"#示例1","children":[]},{"level":3,"title":"示例2","slug":"示例2","link":"#示例2","children":[]},{"level":3,"title":"functools.wraps","slug":"functools-wraps","link":"#functools-wraps","children":[]}]},{"level":2,"title":"Decorators Application","slug":"decorators-application","link":"#decorators-application","children":[{"level":3,"title":"@timer","slug":"timer","link":"#timer","children":[]},{"level":3,"title":"@memoize","slug":"memoize","link":"#memoize","children":[]}]},{"level":2,"title":"Decorators with args","slug":"decorators-with-args","link":"#decorators-with-args","children":[{"level":3,"title":"run_n_times()","slug":"run-n-times","link":"#run-n-times","children":[]},{"level":3,"title":"实现","slug":"实现","link":"#实现","children":[]},{"level":3,"title":"@timeout()","slug":"timeout","link":"#timeout","children":[]},{"level":3,"title":"@tag(*tags)","slug":"tag-tags","link":"#tag-tags","children":[]},{"level":3,"title":"@returns()","slug":"returns","link":"#returns","children":[]}]}],"git":{"createdTime":1726378409000,"updatedTime":1726378409000,"contributors":[{"name":"hanjiaming","email":"47519540+guomaimang@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":18.82,"words":1882},"filePathRelative":"note/cs/programming/python/Writing-Functions.md","localizedDate":"2022年6月4日","excerpt":"<h1> Writing Functions</h1>\\n<h2> Docstrings</h2>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">def</span> <span class=\\"token function\\">count_letter</span><span class=\\"token punctuation\\">(</span>content<span class=\\"token punctuation\\">,</span> letter<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n  <span class=\\"token triple-quoted-string string\\">\\"\\"\\"Count the number of times `letter` appears in `content`.\\n\\n  Args:\\n    content (str): The string to search.\\n    letter (str): The letter to search for.\\n\\n  Returns:\\n    int\\n\\n  # Add a section detailing what errors might be raised\\n  Raises:\\n    ValueError: If `letter` is not a one-character string.\\n  \\"\\"\\"</span>\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">not</span> <span class=\\"token builtin\\">isinstance</span><span class=\\"token punctuation\\">(</span>letter<span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">str</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">or</span> <span class=\\"token builtin\\">len</span><span class=\\"token punctuation\\">(</span>letter<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">!=</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token keyword\\">raise</span> ValueError<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\'`letter` must be a single character string.\'</span><span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token keyword\\">return</span> <span class=\\"token builtin\\">len</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">[</span>char <span class=\\"token keyword\\">for</span> char <span class=\\"token keyword\\">in</span> content <span class=\\"token keyword\\">if</span> char <span class=\\"token operator\\">==</span> letter<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
