const e=JSON.parse('{"key":"v-318fa02a","path":"/note/it/arch/sharing1.html","title":"齐毅架构设计感悟分享","lang":"zh-CN","frontmatter":{"article":false,"date":"2024-12-23T00:00:00.000Z","index":true,"order":13,"headerDepth":0,"category":["tech"],"description":"齐毅架构设计感悟分享 没有场景的架构设计都是不切实际的 核心观点 架构设计必须解决具体问题。 发现问题的复杂性是根本，这些包含在用户关键需求中 架构师在没有询问具体需求前给出的架构是不可信的。 具体案例 老旧系统的更新 背景: 亚信为联通开发的系统已经使用12年，架构陈旧。 核心复杂度: 技术落后，如何通过有效和可控的方式将老技术更新为现有主流技术的新架构。 资产管理平台的报表问题 背景: 某银行通过外包公司开发的资产管理平台报表结果错误。 核心复杂度: 研发团队对业务不熟悉，无法有效维护系统。 解决方案: 强化业务培训，加强代码的合规、测试力度及覆盖度。 万能表单应用 背景: 允许用户自定义表单项和业务规则逻辑。 核心复杂度: 系统的灵活性。 解决方案: 引入规则引擎或微内核机制进行系统架构设计。","head":[["meta",{"property":"og:url","content":"https://guomaimang.github.io/note/it/arch/sharing1.html"}],["meta",{"property":"og:site_name","content":"韩佳明 & Hirsun"}],["meta",{"property":"og:title","content":"齐毅架构设计感悟分享"}],["meta",{"property":"og:description","content":"齐毅架构设计感悟分享 没有场景的架构设计都是不切实际的 核心观点 架构设计必须解决具体问题。 发现问题的复杂性是根本，这些包含在用户关键需求中 架构师在没有询问具体需求前给出的架构是不可信的。 具体案例 老旧系统的更新 背景: 亚信为联通开发的系统已经使用12年，架构陈旧。 核心复杂度: 技术落后，如何通过有效和可控的方式将老技术更新为现有主流技术的新架构。 资产管理平台的报表问题 背景: 某银行通过外包公司开发的资产管理平台报表结果错误。 核心复杂度: 研发团队对业务不熟悉，无法有效维护系统。 解决方案: 强化业务培训，加强代码的合规、测试力度及覆盖度。 万能表单应用 背景: 允许用户自定义表单项和业务规则逻辑。 核心复杂度: 系统的灵活性。 解决方案: 引入规则引擎或微内核机制进行系统架构设计。"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-23T17:20:01.000Z"}],["meta",{"property":"article:author","content":"Hirsun"}],["meta",{"property":"article:published_time","content":"2024-12-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-23T17:20:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"齐毅架构设计感悟分享\\",\\"description\\":\\"齐毅架构设计感悟分享 没有场景的架构设计都是不切实际的 核心观点 架构设计必须解决具体问题。 发现问题的复杂性是根本，这些包含在用户关键需求中 架构师在没有询问具体需求前给出的架构是不可信的。 具体案例 老旧系统的更新 背景: 亚信为联通开发的系统已经使用12年，架构陈旧。 核心复杂度: 技术落后，如何通过有效和可控的方式将老技术更新为现有主流技术的新架构。 资产管理平台的报表问题 背景: 某银行通过外包公司开发的资产管理平台报表结果错误。 核心复杂度: 研发团队对业务不熟悉，无法有效维护系统。 解决方案: 强化业务培训，加强代码的合规、测试力度及覆盖度。 万能表单应用 背景: 允许用户自定义表单项和业务规则逻辑。 核心复杂度: 系统的灵活性。 解决方案: 引入规则引擎或微内核机制进行系统架构设计。\\"}"]]},"headers":[{"level":2,"title":"没有场景的架构设计都是不切实际的","slug":"没有场景的架构设计都是不切实际的","link":"#没有场景的架构设计都是不切实际的","children":[{"level":3,"title":"核心观点","slug":"核心观点","link":"#核心观点","children":[]},{"level":3,"title":"具体案例","slug":"具体案例","link":"#具体案例","children":[]}]},{"level":2,"title":"架构设计中的解耦","slug":"架构设计中的解耦","link":"#架构设计中的解耦","children":[{"level":3,"title":"核心观点","slug":"核心观点-1","link":"#核心观点-1","children":[]},{"level":3,"title":"具体案例: 异构数据同步","slug":"具体案例-异构数据同步","link":"#具体案例-异构数据同步","children":[]}]},{"level":2,"title":"尊重架构的演化规律","slug":"尊重架构的演化规律","link":"#尊重架构的演化规律","children":[{"level":3,"title":"核心观点","slug":"核心观点-2","link":"#核心观点-2","children":[]},{"level":3,"title":"具体案例: 宜信项目架构演化","slug":"具体案例-宜信项目架构演化","link":"#具体案例-宜信项目架构演化","children":[]}]},{"level":2,"title":"避免炫技","slug":"避免炫技","link":"#避免炫技","children":[{"level":3,"title":"核心观点","slug":"核心观点-3","link":"#核心观点-3","children":[]},{"level":3,"title":"具体案例: 工单系统设计","slug":"具体案例-工单系统设计","link":"#具体案例-工单系统设计","children":[]}]},{"level":2,"title":"善于聆听","slug":"善于聆听","link":"#善于聆听","children":[{"level":3,"title":"核心观点","slug":"核心观点-4","link":"#核心观点-4","children":[]},{"level":3,"title":"具体案例: 顶级管钱部门项目","slug":"具体案例-顶级管钱部门项目","link":"#具体案例-顶级管钱部门项目","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1734974401000,"updatedTime":1734974401000,"contributors":[{"name":"hanjiaming","email":"47519540+guomaimang@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":9.86,"words":986},"filePathRelative":"note/it/arch/sharing1.md","localizedDate":"2024年12月23日","excerpt":"<h1> 齐毅架构设计感悟分享</h1>\\n<h2> 没有场景的架构设计都是不切实际的</h2>\\n<h3> 核心观点</h3>\\n<ol>\\n<li>架构设计必须解决具体问题。</li>\\n<li>发现问题的复杂性是根本，这些包含在用户关键需求中</li>\\n<li>架构师在没有询问具体需求前给出的架构是不可信的。</li>\\n</ol>\\n<h3> 具体案例</h3>\\n<ol>\\n<li>老旧系统的更新\\n<ul>\\n<li><strong>背景</strong>: 亚信为联通开发的系统已经使用12年，架构陈旧。</li>\\n<li><strong>核心复杂度</strong>: 技术落后，如何通过有效和可控的方式将老技术更新为现有主流技术的新架构。</li>\\n</ul>\\n</li>\\n<li>资产管理平台的报表问题\\n<ul>\\n<li><strong>背景</strong>: 某银行通过外包公司开发的资产管理平台报表结果错误。</li>\\n<li><strong>核心复杂度</strong>: 研发团队对业务不熟悉，无法有效维护系统。</li>\\n<li><strong>解决方案</strong>: 强化业务培训，加强代码的合规、测试力度及覆盖度。</li>\\n</ul>\\n</li>\\n<li>万能表单应用\\n<ul>\\n<li><strong>背景</strong>: 允许用户自定义表单项和业务规则逻辑。</li>\\n<li><strong>核心复杂度</strong>: 系统的灵活性。</li>\\n<li><strong>解决方案</strong>: 引入规则引擎或微内核机制进行系统架构设计。</li>\\n</ul>\\n</li>\\n</ol>","autoDesc":true}');export{e as data};
