import{_ as c}from"./plugin-vue_export-helper-c27b6911.js";import{r as e,o as t,c as n,a as s,b as l,d as i,w as r,e as a}from"./app-b0a11d86.js";const o={},h=a('<h1 id="clustering" tabindex="-1"><a class="header-anchor" href="#clustering" aria-hidden="true">#</a> Clustering</h1><p>What is a Cluster? Cluster Analysis? Clustering?</p><ul><li>Cluster: 数据对象的集合，这些对象是 <ul><li>同一集群内的彼此相似</li><li>与其他簇中的对象不同</li></ul></li><li>Cluster analysis: 将一组数据对象分组为簇</li><li>聚类(Clustering) 是一种无监督学习方法，没有预定义的类（或监督信号）</li><li>聚类并不排除分类/回归。它有助于分类/回归！</li></ul><p>典型应用</p><ul><li>作为深入了解数据分布的独立工具</li><li>作为其他算法的预处理步骤</li></ul><h2 id="general-applications" tabindex="-1"><a class="header-anchor" href="#general-applications" aria-hidden="true">#</a> General Applications</h2><ul><li>Spatial「空间」 Data Analysis <ul><li>通过聚类特征空间在 GIS 中创建专题地图</li><li>检测空间聚类并在空间数据挖掘中解释它们</li></ul></li><li>图像处理（参见通过肤色像素聚类进行人脸检测）</li><li>经济科学（尤其是市场研究；客户分组）</li><li>WWW <ul><li>文件分类</li><li>对博客数据进行聚类以发现相似访问模式组</li></ul></li></ul><div class="hint-container tip"><p class="hint-container-title">Specific Examples</p><ul><li>营销：帮助营销人员发现客户群中的不同群体，然后利用这些知识制定有针对性的营销计划</li><li>土地利用：在地球观测数据库中识别类似土地利用的区域</li><li>保险：识别平均索赔成本较高的汽车保险保单持有人群体</li><li>城市规划：根据房屋类型、价值和地理位置识别房屋组</li></ul></div><h2 id="good-clustering" tabindex="-1"><a class="header-anchor" href="#good-clustering" aria-hidden="true">#</a> Good Clustering</h2><ul><li>良好的聚类方法将产生高质量的聚类 <ul><li>high intra-class similarity</li><li>low inter-class similarity</li></ul></li><li>聚类结果的<strong>质量</strong>取决于<u>该方法所使用的相似性度量及其实现</u>。</li><li>聚类方法的<strong>质量</strong>还可以<u>通过其发现部分或全部隐藏模式的能力来衡量</u>。</li></ul><p>Requirements of Clustering in Data Mining</p><ul><li>Scalability 「可扩展性」</li><li>ability to deal with different types of attributes 「处理不同类型属性的能力」</li><li>Discovery of clusters with arbitrary shape 「发现任意形状的簇」</li><li>Minimal requirements for domain knowledge to determine input parameters 「确定输入参数对领域知识的最低要求」</li><li>能够处理噪音「noise」和异常值「outliers」</li><li>对输入记录的顺序不敏感</li><li>High dimensionality「高纬度」</li><li>Incorporation of user-specified constraints 「合并用户指定的约束」</li><li>Interpretability and usability「可解释性和可用性」</li></ul><div class="hint-container tip"><p class="hint-container-title">Measure of Quality</p><p>具体衡量方法</p><ul><li>Normalized Mutual Information (NMI) [see sklearn.metrics.NMI] 「归一化」</li><li>Rand Index [see Wiki] 「兰德指数」</li></ul><p>两者都衡量两个数据聚类之间的相似性（例如，真实情况与聚类结果）</p><ul><li>Dissimilarity/Similarity metric「度量」：相似性以距离函数 d(i, j) 表示</li><li>有一个单独的 “quality” function 来衡量集群的“goodness”。</li><li>对于区间尺度变量、布尔变量（二元变量）、分类变量和序数变量，距离函数的定义通常非常不同。</li><li>权重应根据应用程序和数据语义与不同的变量相关联。</li></ul><p>很难定义“足够相似”或“足够好”，答案通常非常主观。</p></div><h2 id="data-structures" tabindex="-1"><a class="header-anchor" href="#data-structures" aria-hidden="true">#</a> Data Structures</h2><h3 id="data-matrix" tabindex="-1"><a class="header-anchor" href="#data-matrix" aria-hidden="true">#</a> Data matrix</h3><p>object-by-variable structure（n 个对象和 p 个变量/属性）</p><img src="https://pic.hanjiaming.com.cn/2023/11/19/37dc229793fc1.png" alt="1700386642714.png" style="zoom:25%;"><ul><li><strong>对象（Object）</strong>：通常指的是数据集中的个体样本，例如在人口统计学研究中的每个人，或在产品调查中的每个产品。</li><li><strong>变量（Variable）/属性（Attribute）</strong>：指的是每个对象的特征或属性，例如人的年龄、性别，或产品的价格、颜色。</li></ul><h3 id="dissimilarity-matrix" tabindex="-1"><a class="header-anchor" href="#dissimilarity-matrix" aria-hidden="true">#</a> Dissimilarity matrix</h3><p>不相似度矩阵”（Dissimilarity Matrix）是一种用于表示数据对象之间差异或不相似性的表格。在这种矩阵中，每一行和每一列都代表数据集中的一个对象，而矩阵中的每个元素表示对应两个对象之间的不相似度。</p><img src="https://pic.hanjiaming.com.cn/2023/11/19/c4995754d3d06.png" alt="1700389109732.png" style="zoom:30%;"><ul><li>对象（Object）：数据集中的个体，如人、物品、事件等。</li><li>不相似度（Dissimilarity）：衡量两个对象之间差异的数值。这个数值越大，表示两个对象越不相似；数值越小，表示两者越相似。</li></ul><div class="hint-container note"><p class="hint-container-title">Example</p><p>假设我们有一个关于四个城市（A、B、C、D）的数据集，我们想要根据各种因素（如气候、人口、经济）来评估这些城市之间的不相似性。不相似度矩阵可能如下所示：</p><table><thead><tr><th></th><th>A</th><th>B</th><th>C</th><th>D</th></tr></thead><tbody><tr><td><strong>A</strong></td><td>0</td><td>2</td><td>4</td><td>7</td></tr><tr><td><strong>B</strong></td><td>2</td><td>0</td><td>3</td><td>6</td></tr><tr><td><strong>C</strong></td><td>4</td><td>3</td><td>0</td><td>5</td></tr><tr><td><strong>D</strong></td><td>7</td><td>6</td><td>5</td><td>0</td></tr></tbody></table><ul><li>行和列：代表城市。</li><li>数值：例如，A和B的不相似度为2，意味着它们在某种程度上相似；而A和D的不相似度为7，意味着它们差异很大。</li></ul><p>这种矩阵在诸如聚类分析、模式识别等领域非常有用，因为它提供了对象之间差异的量化方法。</p></div><div class="hint-container danger"><p class="hint-container-title">混淆定义</p><p>距离(不相似度) 和 相似度 不要算反了，两个相加=1.</p></div><h2 id="distance-measure" tabindex="-1"><a class="header-anchor" href="#distance-measure" aria-hidden="true">#</a> Distance Measure</h2><h3 id="objects" tabindex="-1"><a class="header-anchor" href="#objects" aria-hidden="true">#</a> Objects</h3><p>距离「Distances」通常用于衡量两个数据对象之间的相似性或不相似性</p><p>Some popular ones include <strong>Minkowski distance</strong> (L<sub>q</sub> norm):</p>',28),g={class:"katex-block"},d={class:"katex-display"},u={class:"katex"},_=s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mi",null,"d"),s("mo",{stretchy:"false"},"("),s("mover",{accent:"true"},[s("mi",null,"i"),s("mo",null,"⃗")]),s("mo",{separator:"true"},","),s("mover",{accent:"true"},[s("mi",null,"j"),s("mo",null,"⃗")]),s("mo",{stretchy:"false"},")"),s("mo",null,"="),s("msup",null,[s("mrow",null,[s("mo",{fence:"true"},"("),s("msup",null,[s("mrow",null,[s("mo",{fence:"true"},"∣"),s("msub",null,[s("mover",{accent:"true"},[s("mi",null,"x"),s("mo",null,"⃗")]),s("mrow",null,[s("mi",null,"i"),s("mn",null,"1")])]),s("mo",null,"−"),s("msub",null,[s("mover",{accent:"true"},[s("mi",null,"x"),s("mo",null,"⃗")]),s("mrow",null,[s("mi",null,"j"),s("mn",null,"1")])]),s("mo",{fence:"true"},"∣")]),s("mi",null,"q")]),s("mo",null,"+"),s("msup",null,[s("mrow",null,[s("mo",{fence:"true"},"∣"),s("msub",null,[s("mover",{accent:"true"},[s("mi",null,"x"),s("mo",null,"⃗")]),s("mrow",null,[s("mi",null,"i"),s("mn",null,"2")])]),s("mo",null,"−"),s("msub",null,[s("mover",{accent:"true"},[s("mi",null,"x"),s("mo",null,"⃗")]),s("mrow",null,[s("mi",null,"j"),s("mn",null,"2")])]),s("mo",{fence:"true"},"∣")]),s("mi",null,"q")]),s("mo",null,"+"),s("mo",null,"…"),s("mo",null,"+"),s("msup",null,[s("mrow",null,[s("mo",{fence:"true"},"∣"),s("msub",null,[s("mover",{accent:"true"},[s("mi",null,"x"),s("mo",null,"⃗")]),s("mrow",null,[s("mi",null,"i"),s("mi",null,"p")])]),s("mo",null,"−"),s("msub",null,[s("mover",{accent:"true"},[s("mi",null,"x"),s("mo",null,"⃗")]),s("mrow",null,[s("mi",null,"j"),s("mi",null,"p")])]),s("mo",{fence:"true"},"∣")]),s("mi",null,"q")]),s("mo",{fence:"true"},")")]),s("mfrac",null,[s("mn",null,"1"),s("mi",null,"q")])])]),s("annotation",{encoding:"application/x-tex"}," d(\\vec{i},\\vec{j})=\\left(\\left|\\vec{x}_{i1}-\\vec{x}_{j1}\\right|^q + \\left|\\vec{x}_{i2}-\\vec{x}_{j2}\\right|^q + \\ldots + \\left|\\vec{x}_{ip}-\\vec{x}_{jp}\\right|^q\\right)^{\\frac{1}{q}} ")])])],-1),v={class:"katex-html","aria-hidden":"true"},y={class:"base"},b=s("span",{class:"strut",style:{height:"1.1925em","vertical-align":"-0.25em"}},null,-1),w=s("span",{class:"mord mathnormal"},"d",-1),x=s("span",{class:"mopen"},"(",-1),f={class:"mord accent"},z={class:"vlist-t"},M={class:"vlist-r"},k={class:"vlist",style:{height:"0.9425em"}},j=s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord mathnormal"},"i")],-1),A={style:{top:"-3.2285em"}},S=s("span",{class:"pstrut",style:{height:"3em"}},null,-1),C={class:"accent-body",style:{left:"-0.2355em"}},B={class:"overlay",style:{height:"0.714em",width:"0.471em"}},D={xmlns:"http://www.w3.org/2000/svg",width:"0.471em",height:"0.714em",style:{width:"0.471em"},viewBox:"0 0 471 714",preserveAspectRatio:"xMinYMin"},q=s("path",{d:`M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z`},null,-1),H=[q],E=s("span",{class:"mpunct"},",",-1),N=s("span",{class:"mspace",style:{"margin-right":"0.1667em"}},null,-1),R={class:"mord accent"},L={class:"vlist-t vlist-t2"},Y={class:"vlist-r"},I={class:"vlist",style:{height:"0.9425em"}},T=s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05724em"}},"j")],-1),G={style:{top:"-3.2285em"}},K=s("span",{class:"pstrut",style:{height:"3em"}},null,-1),V={class:"accent-body",style:{left:"-0.2355em"}},J={class:"overlay",style:{height:"0.714em",width:"0.471em"}},P={xmlns:"http://www.w3.org/2000/svg",width:"0.471em",height:"0.714em",style:{width:"0.471em"},viewBox:"0 0 471 714",preserveAspectRatio:"xMinYMin"},W=s("path",{d:`M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z`},null,-1),O=[W],Q=s("span",{class:"vlist-s"},"​",-1),U=s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1944em"}},[s("span")])],-1),F=s("span",{class:"mclose"},")",-1),X=s("span",{class:"mspace",style:{"margin-right":"0.2778em"}},null,-1),Z=s("span",{class:"mrel"},"=",-1),$=s("span",{class:"mspace",style:{"margin-right":"0.2778em"}},null,-1),ss={class:"base"},as=s("span",{class:"strut",style:{height:"1.4343em","vertical-align":"-0.2861em"}},null,-1),ts={class:"minner"},ns={class:"minner"},ls=s("span",{class:"mopen delimcenter",style:{top:"0em"}},"(",-1),es={class:"minner"},is={class:"minner"},ps=s("span",{class:"mopen delimcenter",style:{top:"0em"}},"∣",-1),ms={class:"mord"},cs={class:"mord accent"},rs={class:"vlist-t"},os={class:"vlist-r"},hs={class:"vlist",style:{height:"0.714em"}},gs=s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord mathnormal"},"x")],-1),ds={style:{top:"-3em"}},us=s("span",{class:"pstrut",style:{height:"3em"}},null,-1),_s={class:"accent-body",style:{left:"-0.2077em"}},vs={class:"overlay",style:{height:"0.714em",width:"0.471em"}},ys={xmlns:"http://www.w3.org/2000/svg",width:"0.471em",height:"0.714em",style:{width:"0.471em"},viewBox:"0 0 471 714",preserveAspectRatio:"xMinYMin"},bs=s("path",{d:`M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z`},null,-1),ws=[bs],xs=a('<span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span>',1),fs=s("span",{class:"mspace",style:{"margin-right":"0.2222em"}},null,-1),zs=s("span",{class:"mbin"},"−",-1),Ms=s("span",{class:"mspace",style:{"margin-right":"0.2222em"}},null,-1),ks={class:"mord"},js={class:"mord accent"},As={class:"vlist-t"},Ss={class:"vlist-r"},Cs={class:"vlist",style:{height:"0.714em"}},Bs=s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord mathnormal"},"x")],-1),Ds={style:{top:"-3em"}},qs=s("span",{class:"pstrut",style:{height:"3em"}},null,-1),Hs={class:"accent-body",style:{left:"-0.2077em"}},Es={class:"overlay",style:{height:"0.714em",width:"0.471em"}},Ns={xmlns:"http://www.w3.org/2000/svg",width:"0.471em",height:"0.714em",style:{width:"0.471em"},viewBox:"0 0 471 714",preserveAspectRatio:"xMinYMin"},Rs=s("path",{d:`M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z`},null,-1),Ls=[Rs],Ys=a('<span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span>',1),Is=s("span",{class:"mclose delimcenter",style:{top:"0em"}},"∣",-1),Ts=a('<span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span>',1),Gs=s("span",{class:"mspace",style:{"margin-right":"0.2222em"}},null,-1),Ks=s("span",{class:"mbin"},"+",-1),Vs=s("span",{class:"mspace",style:{"margin-right":"0.2222em"}},null,-1),Js={class:"minner"},Ps={class:"minner"},Ws=s("span",{class:"mopen delimcenter",style:{top:"0em"}},"∣",-1),Os={class:"mord"},Qs={class:"mord accent"},Us={class:"vlist-t"},Fs={class:"vlist-r"},Xs={class:"vlist",style:{height:"0.714em"}},Zs=s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord mathnormal"},"x")],-1),$s={style:{top:"-3em"}},sa=s("span",{class:"pstrut",style:{height:"3em"}},null,-1),aa={class:"accent-body",style:{left:"-0.2077em"}},ta={class:"overlay",style:{height:"0.714em",width:"0.471em"}},na={xmlns:"http://www.w3.org/2000/svg",width:"0.471em",height:"0.714em",style:{width:"0.471em"},viewBox:"0 0 471 714",preserveAspectRatio:"xMinYMin"},la=s("path",{d:`M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z`},null,-1),ea=[la],ia=a('<span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span>',1),pa=s("span",{class:"mspace",style:{"margin-right":"0.2222em"}},null,-1),ma=s("span",{class:"mbin"},"−",-1),ca=s("span",{class:"mspace",style:{"margin-right":"0.2222em"}},null,-1),ra={class:"mord"},oa={class:"mord accent"},ha={class:"vlist-t"},ga={class:"vlist-r"},da={class:"vlist",style:{height:"0.714em"}},ua=s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord mathnormal"},"x")],-1),_a={style:{top:"-3em"}},va=s("span",{class:"pstrut",style:{height:"3em"}},null,-1),ya={class:"accent-body",style:{left:"-0.2077em"}},ba={class:"overlay",style:{height:"0.714em",width:"0.471em"}},wa={xmlns:"http://www.w3.org/2000/svg",width:"0.471em",height:"0.714em",style:{width:"0.471em"},viewBox:"0 0 471 714",preserveAspectRatio:"xMinYMin"},xa=s("path",{d:`M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z`},null,-1),fa=[xa],za=a('<span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span>',1),Ma=s("span",{class:"mclose delimcenter",style:{top:"0em"}},"∣",-1),ka=a('<span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span>',1),ja=a('<span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span>',7),Aa={class:"minner"},Sa={class:"minner"},Ca=s("span",{class:"mopen delimcenter",style:{top:"0em"}},"∣",-1),Ba={class:"mord"},Da={class:"mord accent"},qa={class:"vlist-t"},Ha={class:"vlist-r"},Ea={class:"vlist",style:{height:"0.714em"}},Na=s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord mathnormal"},"x")],-1),Ra={style:{top:"-3em"}},La=s("span",{class:"pstrut",style:{height:"3em"}},null,-1),Ya={class:"accent-body",style:{left:"-0.2077em"}},Ia={class:"overlay",style:{height:"0.714em",width:"0.471em"}},Ta={xmlns:"http://www.w3.org/2000/svg",width:"0.471em",height:"0.714em",style:{width:"0.471em"},viewBox:"0 0 471 714",preserveAspectRatio:"xMinYMin"},Ga=s("path",{d:`M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z`},null,-1),Ka=[Ga],Va=a('<span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span>',1),Ja=s("span",{class:"mspace",style:{"margin-right":"0.2222em"}},null,-1),Pa=s("span",{class:"mbin"},"−",-1),Wa=s("span",{class:"mspace",style:{"margin-right":"0.2222em"}},null,-1),Oa={class:"mord"},Qa={class:"mord accent"},Ua={class:"vlist-t"},Fa={class:"vlist-r"},Xa={class:"vlist",style:{height:"0.714em"}},Za=s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord mathnormal"},"x")],-1),$a={style:{top:"-3em"}},st=s("span",{class:"pstrut",style:{height:"3em"}},null,-1),at={class:"accent-body",style:{left:"-0.2077em"}},tt={class:"overlay",style:{height:"0.714em",width:"0.471em"}},nt={xmlns:"http://www.w3.org/2000/svg",width:"0.471em",height:"0.714em",style:{width:"0.471em"},viewBox:"0 0 471 714",preserveAspectRatio:"xMinYMin"},lt=s("path",{d:`M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z`},null,-1),et=[lt],it=a('<span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span>',1),pt=s("span",{class:"mclose delimcenter",style:{top:"0em"}},"∣",-1),mt=a('<span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span>',1),ct=s("span",{class:"mclose delimcenter",style:{top:"0em"}},")",-1),rt=a('<span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.1482em;"><span style="top:-3.5572em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8443em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4829em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span>',1),ot={class:"katex"},ht=s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mover",{accent:"true"},[s("mi",null,"i"),s("mo",null,"⃗")]),s("mo",null,"="),s("mo",{stretchy:"false"},"("),s("msub",null,[s("mi",null,"x"),s("mrow",null,[s("mi",null,"i"),s("mn",null,"1")])]),s("mo",{separator:"true"},","),s("msub",null,[s("mi",null,"x"),s("mrow",null,[s("mi",null,"i"),s("mn",null,"2")])]),s("mo",{separator:"true"},","),s("mo",null,"…"),s("mo",{separator:"true"},","),s("msub",null,[s("mi",null,"x"),s("mrow",null,[s("mi",null,"i"),s("mi",null,"p")])]),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"\\vec{i} = (x_{i1}, x_{i2}, \\ldots, x_{ip})")])])],-1),gt={class:"katex-html","aria-hidden":"true"},dt={class:"base"},ut=s("span",{class:"strut",style:{height:"0.9425em"}},null,-1),_t={class:"mord accent"},vt={class:"vlist-t"},yt={class:"vlist-r"},bt={class:"vlist",style:{height:"0.9425em"}},wt=s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord mathnormal"},"i")],-1),xt={style:{top:"-3.2285em"}},ft=s("span",{class:"pstrut",style:{height:"3em"}},null,-1),zt={class:"accent-body",style:{left:"-0.2355em"}},Mt={class:"overlay",style:{height:"0.714em",width:"0.471em"}},kt={xmlns:"http://www.w3.org/2000/svg",width:"0.471em",height:"0.714em",style:{width:"0.471em"},viewBox:"0 0 471 714",preserveAspectRatio:"xMinYMin"},jt=s("path",{d:`M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z`},null,-1),At=[jt],St=s("span",{class:"mspace",style:{"margin-right":"0.2778em"}},null,-1),Ct=s("span",{class:"mrel"},"=",-1),Bt=s("span",{class:"mspace",style:{"margin-right":"0.2778em"}},null,-1),Dt=a('<span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span>',1),qt={class:"katex"},Ht=s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mover",{accent:"true"},[s("mi",null,"j"),s("mo",null,"⃗")]),s("mo",null,"="),s("mo",{stretchy:"false"},"("),s("msub",null,[s("mi",null,"x"),s("mrow",null,[s("mi",null,"j"),s("mn",null,"1")])]),s("mo",{separator:"true"},","),s("msub",null,[s("mi",null,"x"),s("mrow",null,[s("mi",null,"j"),s("mn",null,"2")])]),s("mo",{separator:"true"},","),s("mo",null,"…"),s("mo",{separator:"true"},","),s("msub",null,[s("mi",null,"x"),s("mrow",null,[s("mi",null,"j"),s("mi",null,"p")])]),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"\\vec{j} = (x_{j1}, x_{j2}, \\ldots, x_{jp})")])])],-1),Et={class:"katex-html","aria-hidden":"true"},Nt={class:"base"},Rt=s("span",{class:"strut",style:{height:"1.137em","vertical-align":"-0.1944em"}},null,-1),Lt={class:"mord accent"},Yt={class:"vlist-t vlist-t2"},It={class:"vlist-r"},Tt={class:"vlist",style:{height:"0.9425em"}},Gt=s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05724em"}},"j")],-1),Kt={style:{top:"-3.2285em"}},Vt=s("span",{class:"pstrut",style:{height:"3em"}},null,-1),Jt={class:"accent-body",style:{left:"-0.2355em"}},Pt={class:"overlay",style:{height:"0.714em",width:"0.471em"}},Wt={xmlns:"http://www.w3.org/2000/svg",width:"0.471em",height:"0.714em",style:{width:"0.471em"},viewBox:"0 0 471 714",preserveAspectRatio:"xMinYMin"},Ot=s("path",{d:`M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z`},null,-1),Qt=[Ot],Ut=s("span",{class:"vlist-s"},"​",-1),Ft=s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1944em"}},[s("span")])],-1),Xt=s("span",{class:"mspace",style:{"margin-right":"0.2778em"}},null,-1),Zt=s("span",{class:"mrel"},"=",-1),$t=s("span",{class:"mspace",style:{"margin-right":"0.2778em"}},null,-1),sn=a('<span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span>',1),an=a("<p><strong>Minkowski 距离</strong>是一种常见的距离计算方式，它可以根据参数<em>q</em>的不同变化为不同的距离度量方法。这个公式本质上是在计算两个点在空间中的距离，这两个点由它们的属性或特征（如坐标）来定义。</p><p>If <em>q</em>=<em>1</em>, <em>d</em> is Manhattan (or city block) distance (L<sub>1</sub> norm)</p>",2),tn={class:"katex-block"},nn={class:"katex-display"},ln={class:"katex"},en=s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mi",null,"d"),s("mo",{stretchy:"false"},"("),s("mover",{accent:"true"},[s("mi",null,"i"),s("mo",null,"⃗")]),s("mo",{separator:"true"},","),s("mover",{accent:"true"},[s("mi",null,"j"),s("mo",null,"⃗")]),s("mo",{stretchy:"false"},")"),s("mo",null,"="),s("mrow",null,[s("mo",{fence:"true"},"∣"),s("msub",null,[s("mi",null,"x"),s("msub",null,[s("mi",null,"i"),s("mn",null,"1")])]),s("mo",null,"−"),s("msub",null,[s("mi",null,"x"),s("msub",null,[s("mi",null,"j"),s("mn",null,"1")])]),s("mo",{fence:"true"},"∣")]),s("mo",null,"+"),s("mrow",null,[s("mo",{fence:"true"},"∣"),s("msub",null,[s("mi",null,"x"),s("msub",null,[s("mi",null,"i"),s("mn",null,"2")])]),s("mo",null,"−"),s("msub",null,[s("mi",null,"x"),s("mrow",null,[s("mi",null,"j"),s("mn",null,"2")])]),s("mo",{fence:"true"},"∣")]),s("mo",null,"+"),s("mo",null,"…"),s("mo",null,"+"),s("mrow",null,[s("mo",{fence:"true"},"∣"),s("msub",null,[s("mi",null,"x"),s("msub",null,[s("mi",null,"i"),s("mi",null,"p")])]),s("mo",null,"−"),s("msub",null,[s("mi",null,"x"),s("mrow",null,[s("mi",null,"j"),s("mi",null,"p")])]),s("mo",{fence:"true"},"∣")])]),s("annotation",{encoding:"application/x-tex"}," d(\\vec{i}, \\vec{j})=\\left|x_{i_{1}}-x_{j_{1}}\\right|+\\left|x_{i_{2}}-x_{j 2}\\right|+\\ldots+\\left|x_{i_{p}}-x_{j p}\\right| ")])])],-1),pn={class:"katex-html","aria-hidden":"true"},mn={class:"base"},cn=s("span",{class:"strut",style:{height:"1.1925em","vertical-align":"-0.25em"}},null,-1),rn=s("span",{class:"mord mathnormal"},"d",-1),on=s("span",{class:"mopen"},"(",-1),hn={class:"mord accent"},gn={class:"vlist-t"},dn={class:"vlist-r"},un={class:"vlist",style:{height:"0.9425em"}},_n=s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord mathnormal"},"i")],-1),vn={style:{top:"-3.2285em"}},yn=s("span",{class:"pstrut",style:{height:"3em"}},null,-1),bn={class:"accent-body",style:{left:"-0.2355em"}},wn={class:"overlay",style:{height:"0.714em",width:"0.471em"}},xn={xmlns:"http://www.w3.org/2000/svg",width:"0.471em",height:"0.714em",style:{width:"0.471em"},viewBox:"0 0 471 714",preserveAspectRatio:"xMinYMin"},fn=s("path",{d:`M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z`},null,-1),zn=[fn],Mn=s("span",{class:"mpunct"},",",-1),kn=s("span",{class:"mspace",style:{"margin-right":"0.1667em"}},null,-1),jn={class:"mord accent"},An={class:"vlist-t vlist-t2"},Sn={class:"vlist-r"},Cn={class:"vlist",style:{height:"0.9425em"}},Bn=s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05724em"}},"j")],-1),Dn={style:{top:"-3.2285em"}},qn=s("span",{class:"pstrut",style:{height:"3em"}},null,-1),Hn={class:"accent-body",style:{left:"-0.2355em"}},En={class:"overlay",style:{height:"0.714em",width:"0.471em"}},Nn={xmlns:"http://www.w3.org/2000/svg",width:"0.471em",height:"0.714em",style:{width:"0.471em"},viewBox:"0 0 471 714",preserveAspectRatio:"xMinYMin"},Rn=s("path",{d:`M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z`},null,-1),Ln=[Rn],Yn=s("span",{class:"vlist-s"},"​",-1),In=s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1944em"}},[s("span")])],-1),Tn=s("span",{class:"mclose"},")",-1),Gn=s("span",{class:"mspace",style:{"margin-right":"0.2778em"}},null,-1),Kn=s("span",{class:"mrel"},"=",-1),Vn=s("span",{class:"mspace",style:{"margin-right":"0.2778em"}},null,-1),Jn=a(`<span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0572em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2em;vertical-align:-0.35em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-2.85em;"><span class="pstrut" style="height:3.2em;"></span><span style="width:0.333em;height:1.200em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.333em" height="1.200em" viewBox="0 0 333 1200"><path d="M145 15 v585 v0 v585 c2.667,10,9.667,15,21,15
c10,0,16.667,-5,20,-15 v-585 v0 v-585 c-2.667,-10,-9.667,-15,-21,-15
c-10,0,-16.667,5,-20,15z M188 15 H145 v585 v0 v585 h43z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2819em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3473em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-2.85em;"><span class="pstrut" style="height:3.2em;"></span><span style="width:0.333em;height:1.200em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.333em" height="1.200em" viewBox="0 0 333 1200"><path d="M145 15 v585 v0 v585 c2.667,10,9.667,15,21,15
c10,0,16.667,-5,20,-15 v-585 v0 v-585 c-2.667,-10,-9.667,-15,-21,-15
c-10,0,-16.667,5,-20,15z M188 15 H145 v585 v0 v585 h43z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span></span></span></span>`,4),Pn=a("<p>当<em>q</em>=1时，Minkowski距离就变成了<strong>曼哈顿距离</strong>，它通过计算两个点在各个维度上差值的绝对值之和来衡量距离。想象你在一个城市的街区中行走，只能沿着街道（东西或南北）走，那么从一个地点到另一个地点的最短路径就是它们的曼哈顿距离。</p><p><em>If</em> <em>q</em>=<em>2</em>, <em>d</em> is Euclidean distance: (L<sub>2</sub> norm)</p>",2),Wn={class:"katex-block"},On={class:"katex-display"},Qn={class:"katex"},Un=s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mi",null,"d"),s("mo",{stretchy:"false"},"("),s("mover",{accent:"true"},[s("mi",null,"i"),s("mo",null,"⃗")]),s("mo",{separator:"true"},","),s("mover",{accent:"true"},[s("mi",null,"j"),s("mo",null,"⃗")]),s("mo",{stretchy:"false"},")"),s("mo",null,"="),s("msqrt",null,[s("mrow",null,[s("mo",{fence:"true"},"("),s("msup",null,[s("mrow",null,[s("mo",{fence:"true"},"∣"),s("msub",null,[s("mi",null,"x"),s("msub",null,[s("mi",null,"i"),s("mn",null,"1")])]),s("mo",null,"−"),s("msub",null,[s("mi",null,"x"),s("msub",null,[s("mi",null,"j"),s("mn",null,"1")])]),s("mo",{fence:"true"},"∣")]),s("mn",null,"2")]),s("mo",null,"+"),s("msup",null,[s("mrow",null,[s("mo",{fence:"true"},"∣"),s("msub",null,[s("mi",null,"x"),s("msub",null,[s("mi",null,"i"),s("mn",null,"2")])]),s("mo",null,"−"),s("msub",null,[s("mi",null,"x"),s("msub",null,[s("mi",null,"j"),s("mn",null,"2")])]),s("mo",{fence:"true"},"∣")]),s("mn",null,"2")]),s("mo",null,"+"),s("mo",null,"…"),s("mo",null,"+"),s("msup",null,[s("mrow",null,[s("mo",{fence:"true"},"∣"),s("msub",null,[s("mi",null,"x"),s("msub",null,[s("mi",null,"i"),s("mi",null,"p")])]),s("mo",null,"−"),s("msub",null,[s("mi",null,"x"),s("msub",null,[s("mi",null,"j"),s("mi",null,"p")])]),s("mo",{fence:"true"},"∣")]),s("mn",null,"2")]),s("mo",{fence:"true"},")")])])]),s("annotation",{encoding:"application/x-tex"}," d(\\vec{i}, \\vec{j})=\\sqrt{\\left(\\left|x_{i_{1}}-x_{j_{1}}\\right|^{2}+\\left|x_{i_{2}}-x_{j_{2}}\\right|^{2}+\\ldots+\\left|x_{i_{p}}-x_{j_{p}}\\right|^{2}\\right)} ")])])],-1),Fn={class:"katex-html","aria-hidden":"true"},Xn={class:"base"},Zn=s("span",{class:"strut",style:{height:"1.1925em","vertical-align":"-0.25em"}},null,-1),$n=s("span",{class:"mord mathnormal"},"d",-1),sl=s("span",{class:"mopen"},"(",-1),al={class:"mord accent"},tl={class:"vlist-t"},nl={class:"vlist-r"},ll={class:"vlist",style:{height:"0.9425em"}},el=s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord mathnormal"},"i")],-1),il={style:{top:"-3.2285em"}},pl=s("span",{class:"pstrut",style:{height:"3em"}},null,-1),ml={class:"accent-body",style:{left:"-0.2355em"}},cl={class:"overlay",style:{height:"0.714em",width:"0.471em"}},rl={xmlns:"http://www.w3.org/2000/svg",width:"0.471em",height:"0.714em",style:{width:"0.471em"},viewBox:"0 0 471 714",preserveAspectRatio:"xMinYMin"},ol=s("path",{d:`M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z`},null,-1),hl=[ol],gl=s("span",{class:"mpunct"},",",-1),dl=s("span",{class:"mspace",style:{"margin-right":"0.1667em"}},null,-1),ul={class:"mord accent"},_l={class:"vlist-t vlist-t2"},vl={class:"vlist-r"},yl={class:"vlist",style:{height:"0.9425em"}},bl=s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05724em"}},"j")],-1),wl={style:{top:"-3.2285em"}},xl=s("span",{class:"pstrut",style:{height:"3em"}},null,-1),fl={class:"accent-body",style:{left:"-0.2355em"}},zl={class:"overlay",style:{height:"0.714em",width:"0.471em"}},Ml={xmlns:"http://www.w3.org/2000/svg",width:"0.471em",height:"0.714em",style:{width:"0.471em"},viewBox:"0 0 471 714",preserveAspectRatio:"xMinYMin"},kl=s("path",{d:`M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z`},null,-1),jl=[kl],Al=s("span",{class:"vlist-s"},"​",-1),Sl=s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1944em"}},[s("span")])],-1),Cl=s("span",{class:"mclose"},")",-1),Bl=s("span",{class:"mspace",style:{"margin-right":"0.2778em"}},null,-1),Dl=s("span",{class:"mrel"},"=",-1),ql=s("span",{class:"mspace",style:{"margin-right":"0.2778em"}},null,-1),Hl=a(`<span class="base"><span class="strut" style="height:2.44em;vertical-align:-0.8561em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5839em;"><span class="svg-align" style="top:-4.4em;"><span class="pstrut" style="height:4.4em;"></span><span class="mord" style="padding-left:1em;"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0572em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.954em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0572em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.954em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="minner"><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-2.85em;"><span class="pstrut" style="height:3.2em;"></span><span style="width:0.333em;height:1.200em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.333em" height="1.200em" viewBox="0 0 333 1200"><path d="M145 15 v585 v0 v585 c2.667,10,9.667,15,21,15
c10,0,16.667,-5,20,-15 v-585 v0 v-585 c-2.667,-10,-9.667,-15,-21,-15
c-10,0,-16.667,5,-20,15z M188 15 H145 v585 v0 v585 h43z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2819em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3473em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:-0.0572em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2819em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3473em;"><span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-2.85em;"><span class="pstrut" style="height:3.2em;"></span><span style="width:0.333em;height:1.200em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.333em" height="1.200em" viewBox="0 0 333 1200"><path d="M145 15 v585 v0 v585 c2.667,10,9.667,15,21,15
c10,0,16.667,-5,20,-15 v-585 v0 v-585 c-2.667,-10,-9.667,-15,-21,-15
c-10,0,-16.667,5,-20,15z M188 15 H145 v585 v0 v585 h43z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.054em;"><span style="top:-3.3029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span></span></span><span style="top:-3.5439em;"><span class="pstrut" style="height:4.4em;"></span><span class="hide-tail" style="min-width:1.02em;height:2.48em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="2.48em" viewBox="0 0 400000 2592" preserveAspectRatio="xMinYMin slice"><path d="M424,2478
c-1.3,-0.7,-38.5,-172,-111.5,-514c-73,-342,-109.8,-513.3,-110.5,-514
c0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,25c-5.7,9.3,-9.8,16,-12.5,20
s-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,-13s76,-122,76,-122s77,-121,77,-121
s209,968,209,968c0,-2,84.7,-361.7,254,-1079c169.3,-717.3,254.7,-1077.7,256,-1081
l0 -0c4,-6.7,10,-10,18,-10 H400000
v40H1014.6
s-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185
c-2,6,-10,9,-24,9
c-8,0,-12,-0.7,-12,-2z M1001 80
h400000v40h-400000z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8561em;"><span></span></span></span></span></span></span>`,1),El=a('<div class="hint-container tip"><p class="hint-container-title">Properties</p><ul><li>d(i,j) &gt;= 30</li><li><em>d(i,i)</em>=0</li><li><em>d(i,j)</em> = d(j,i)</li><li><em>d(i,j)</em> &lt;= <em>d(i,k)</em>+<em>d(k,j)</em></li></ul></div><p>此外，还可以使用加权距离、参数皮尔逊积矩相关性或其他相异性度量。</p><h3 id="binary-variables" tabindex="-1"><a class="header-anchor" href="#binary-variables" aria-hidden="true">#</a> Binary Variables</h3><p>A contingency table for binary data</p><img src="https://pic.hanjiaming.com.cn/2023/11/19/3cac8169999f6.png" alt="1700391453874.png" style="zoom:28%;"><p>用来衡量两个对象在二元变量上的相似性或差异性。在这个表中，对象i和对象j要么具有某个属性（用1表示），要么不具有（用0表示）。</p><p>表中的字母a、b、c和d代表以下内容：</p><ul><li><strong>a</strong>：对象i和对象j都是1的次数。</li><li><strong>b</strong>：对象i是1而对象j是0的次数。</li><li><strong>c</strong>：对象i是0而对象j是1的次数。</li><li><strong>d</strong>：对象i和对象j都是0的次数。</li><li><strong>p</strong>：总次数，即所有情况的和，也就是a+b+c+d。</li></ul><p>在二元数据分析中，有两种常用的相似性/距离衡量方法：</p><p><strong>简单匹配系数（Simple Matching Coefficient, SMC）</strong>：它考虑了所有的相似和不相似（即所有的a、b、c和d）。</p><ul><li>相似度： SMC = (a+d)/(a+b+c+d)</li><li>距离/不相似度： d(i,j) = (b+c)/(a+b+c+d)</li></ul><p>这个系数是“不变的”，意味着它不区分哪些是正匹配（都有属性）和哪些是负匹配（都没有属性）。</p><p><strong>杰卡德系数（Jaccard Coefficient）</strong>：这个系数仅考虑了两个对象在同时为1的情况下的相似比例，忽略了同时为0的情况。</p><ul><li>相似度： Jaccard = (a)/(a+b+c) = 交集/并集</li><li>距离/不相似度： d(i,j) = (b+c)/(a+b+c)</li></ul><div class="hint-container tip"><p class="hint-container-title">提示</p><p>在二元数据分析中，二元属性可以是对称的（symmetric）或非对称的（non-symmetric）。</p><ul><li><strong>对称属性</strong>意味着属性的两种状态（通常是0和1）在数据分析的语境中具有同等的重要性。也就是说，一个属性是1或是0，两者都同样重要，并且没有一个比另一个在分析中更重要。 <ul><li>考虑一个关于电影评价的属性，其中1表示“喜欢”（like），0表示“不喜欢”（dislike）。在这种情况下，无论观众喜欢还是不喜欢一部电影，这两种情况都同样重要，因为我们同样关心有多少人喜欢电影和有多少人不喜欢电影。</li></ul></li><li><strong>非对称属性</strong>是指在数据分析中，属性的两种状态中有一种明显比另一种更重要或更值得注意。通常，非对称属性的一个状态（通常是1）代表了某种特殊情况，而另一个状态（通常是0）则是正常或默认情况。 <ul><li>考虑一个医疗数据集中的“疾病”属性，其中1表示“有疾病”，0表示“无疾病”。在大多数情况下，我们对发现疾病的情况（1）更感兴趣，因为它需要进一步的诊断和治疗，而无疾病的情况（0）是正常状态。因此，这是一个非对称属性，因为两个状态的分析重要性是不平等的。</li></ul></li></ul><p>在使用不同的相似性或不相似性度量时，识别属性是对称还是非对称的很重要，因为它会影响选择哪种系数来计算相似性或距离。例如，简单匹配系数（SMC）适用于对称属性，而杰卡德系数忽略了共同的非存在（都是0的情况），因此适用于非对称属性。</p></div><details class="hint-container details"><summary>Example</summary><p>假设我们有两个群体（我们称它们为群体i和群体j）正在对同一部电影的多个情节做出反应，他们可以表达是否喜欢这部电影的一些情节，每个情节反应一次。在这个例子中，我们用1来表示喜欢，0表示不喜欢。</p><ul><li><strong>a（同时喜欢）</strong>：20次</li><li><strong>b（i喜欢，j不喜欢）</strong>：5次</li><li><strong>c（i不喜欢，j喜欢）</strong>：10次</li><li><strong>d（同时不喜欢）</strong>：15次</li></ul><p>用简单匹配系数计算相似度：SMC = (20 + 15) / (20 + 5 + 10 + 15) = 35 / 50 = 0.7</p><p>用杰卡德系数计算相似度：Jaccard = 20 / (20 + 5 + 10) = 20 / 35 ≈ 0.57</p><p>这意味着根据简单匹配系数，两个群体有70%的相似度；而根据杰卡德系数，考虑到只有喜欢的情况，两个群体的相似度是57%。</p><p>另外一个案例是</p><figure><img src="https://pic.hanjiaming.com.cn/2023/11/19/e7660aaaa7ee1.png" alt="CleanShot 2023-11-19 at 19.44.39@2x.png" tabindex="0" loading="lazy"><figcaption>CleanShot 2023-11-19 at 19.44.39@2x.png</figcaption></figure></details><h3 id="nominal-categorical-variables" tabindex="-1"><a class="header-anchor" href="#nominal-categorical-variables" aria-hidden="true">#</a> Nominal/Categorical Variables</h3><p>二元变量的概括，它可以采用 2 种以上的状态，例如红、黄、蓝、绿</p><h4 id="方法一-简单搭配" tabindex="-1"><a class="header-anchor" href="#方法一-简单搭配" aria-hidden="true">#</a> 方法一：简单搭配</h4><ul><li>m：匹配数</li><li>p：变量总数</li></ul><p><em>d</em>(<em>i</em>, <em>j</em>) = (p-m)/p</p><h4 id="方法2-使用大量二进制变量" tabindex="-1"><a class="header-anchor" href="#方法2-使用大量二进制变量" aria-hidden="true">#</a> 方法2：使用大量二进制变量</h4><p>1-hot encoding: 为 M 个标称状态中的每一个创建一个新的二进制变量</p><figure><img src="https://pic.hanjiaming.com.cn/2023/11/19/24659accb4862.png" alt="CleanShot 2023-11-19 at 19.58.21@2x.png" tabindex="0" loading="lazy"><figcaption>CleanShot 2023-11-19 at 19.58.21@2x.png</figcaption></figure><h3 id="transactional-data" tabindex="-1"><a class="header-anchor" href="#transactional-data" aria-hidden="true">#</a> Transactional Data</h3><p>这里的交易数据是指由一系列项（如商品、服务或事件）组成的数据记录，它们通常出现在购物篮分析、顾客购买历史或其他类型的数据库中，如事件日志。</p><p>通常用 Jaccard Similarity</p>',27),Nl=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mi",null,"J"),s("mi",null,"a"),s("mi",null,"c"),s("mi",null,"c"),s("mi",null,"a"),s("mi",null,"r"),s("mi",null,"d"),s("mtext",null," "),s("mi",null,"S"),s("mi",null,"i"),s("mi",null,"m"),s("mi",null,"i"),s("mi",null,"l"),s("mi",null,"a"),s("mi",null,"r"),s("mi",null,"i"),s("mi",null,"t"),s("mi",null,"y"),s("mo",null,"="),s("mfrac",null,[s("mrow",null,[s("mi",{mathvariant:"normal"},"∣"),s("mi",null,"A"),s("mo",null,"∩"),s("mi",null,"B"),s("mi",{mathvariant:"normal"},"∣")]),s("mrow",null,[s("mi",{mathvariant:"normal"},"∣"),s("mi",null,"A"),s("mo",null,"∪"),s("mi",null,"B"),s("mi",{mathvariant:"normal"},"∣")])])]),s("annotation",{encoding:"application/x-tex"}," Jaccard\\ Similarity = \\frac{|A \\cap B|}{|A \\cup B|} ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.09618em"}},"J"),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mord mathnormal"},"cc"),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"mord mathnormal"},"d"),s("span",{class:"mspace"}," "),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S"),s("span",{class:"mord mathnormal"},"imi"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"y"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"2.363em","vertical-align":"-0.936em"}}),s("span",{class:"mord"},[s("span",{class:"mopen nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.427em"}},[s("span",{style:{top:"-2.314em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"∣"),s("span",{class:"mord mathnormal"},"A"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∪"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05017em"}},"B"),s("span",{class:"mord"},"∣")])]),s("span",{style:{top:"-3.23em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3.677em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"∣"),s("span",{class:"mord mathnormal"},"A"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∩"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05017em"}},"B"),s("span",{class:"mord"},"∣")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.936em"}},[s("span")])])])]),s("span",{class:"mclose nulldelimiter"})])])])])])],-1),Rl=s("p",null,"where ∩ & ∪ denote the intersection and union of two transaction records respectively.",-1),Ll=s("p",null,[l("Let T1= {A,B,C}, T2={"),s("em",null,"C,D,E"),l("} where A-E denote items")],-1),Yl=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mi",{mathvariant:"normal"},"Sim"),s("mo",null,"⁡"),s("mrow",null,[s("mo",{fence:"true"},"("),s("msub",null,[s("mi",null,"T"),s("mn",null,"1")]),s("mo",{separator:"true"},","),s("msub",null,[s("mi",null,"T"),s("mn",null,"2")]),s("mo",{fence:"true"},")")]),s("mo",null,"="),s("mfrac",null,[s("mrow",null,[s("mi",{mathvariant:"normal"},"∣"),s("mo",{stretchy:"false"},"{"),s("mi",null,"C"),s("mo",{stretchy:"false"},"}"),s("mi",{mathvariant:"normal"},"∣")]),s("mrow",null,[s("mi",{mathvariant:"normal"},"∣"),s("mo",{stretchy:"false"},"{"),s("mi",null,"A"),s("mo",{separator:"true"},","),s("mi",null,"B"),s("mo",{separator:"true"},","),s("mi",null,"C"),s("mo",{separator:"true"},","),s("mi",null,"D"),s("mo",{separator:"true"},","),s("mi",null,"E"),s("mo",{stretchy:"false"},"}"),s("mi",{mathvariant:"normal"},"∣")])]),s("mo",null,"="),s("mfrac",null,[s("mn",null,"1"),s("mn",null,"5")])]),s("annotation",{encoding:"application/x-tex"}," \\operatorname{Sim}\\left(T_{1}, T_{2}\\right)=\\frac{|\\{C\\}|}{|\\{A, B, C, D, E\\}|}=\\frac{1}{5} ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mop"},[s("span",{class:"mord mathrm"},"Sim")]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"minner"},[s("span",{class:"mopen delimcenter",style:{top:"0em"}},"("),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.1389em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"1")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.1389em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"2")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mclose delimcenter",style:{top:"0em"}},")")]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"2.363em","vertical-align":"-0.936em"}}),s("span",{class:"mord"},[s("span",{class:"mopen nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.427em"}},[s("span",{style:{top:"-2.314em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"∣"),s("span",{class:"mopen"},"{"),s("span",{class:"mord mathnormal"},"A"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05017em"}},"B"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.07153em"}},"C"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"D"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"E"),s("span",{class:"mclose"},"}"),s("span",{class:"mord"},"∣")])]),s("span",{style:{top:"-3.23em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3.677em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"∣"),s("span",{class:"mopen"},"{"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.07153em"}},"C"),s("span",{class:"mclose"},"}"),s("span",{class:"mord"},"∣")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.936em"}},[s("span")])])])]),s("span",{class:"mclose nulldelimiter"})]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"2.0074em","vertical-align":"-0.686em"}}),s("span",{class:"mord"},[s("span",{class:"mopen nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.3214em"}},[s("span",{style:{top:"-2.314em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"5")])]),s("span",{style:{top:"-3.23em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3.677em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.686em"}},[s("span")])])])]),s("span",{class:"mclose nulldelimiter"})])])])])])],-1),Il=a('<h2 id="major-clustering-approach" tabindex="-1"><a class="header-anchor" href="#major-clustering-approach" aria-hidden="true">#</a> Major Clustering Approach</h2><ul><li>分区算法「Partitioning algorithms」：构造各种分区，然后根据某些标准对其进行评估</li><li>分层算法「Hierarchical algorithms」：使用某些标准创建数据集（或对象）的分层分解</li></ul><p>这两个在一般应用中最为人熟知</p><ul><li>基于密度「Density-based」：基于连通性和密度函数</li><li>基于网格「Grid-based」：基于多级粒度结构</li><li>基于模型「Model based」：为每个群组假设一个模型，目的是找到该模型与其他群组的最佳匹配度</li></ul><h2 id="partitioning-algorithms" tabindex="-1"><a class="header-anchor" href="#partitioning-algorithms" aria-hidden="true">#</a> Partitioning Algorithms</h2><p>分区方式：将包含 n 个对象的数据库 D 的分区构造为一组 k 个簇。</p><p>给定一个特定的 k，找到 k 个簇的分区，以优化所选的分区标准（例如，高类内相似度）</p><p>Two methods</p><ul><li>全局最优方法：穷举所有分区（对于大n几乎不可能）</li><li>启发式方法：k-means 和 k-medoids 算法 <ul><li>k-means (MacQueen’67)：每个簇由簇的中心表示</li><li>k-medoids 或 PAM（围绕中心点划分）（Kaufman &amp; Rousseeuw’87）：每个簇由簇中的一个对象表示</li></ul></li></ul><h3 id="k-means-clustering-method" tabindex="-1"><a class="header-anchor" href="#k-means-clustering-method" aria-hidden="true">#</a> K-Means Clustering Method</h3><p>给定 k，k-means 算法可以通过以下四个步骤实现：</p><ol><li><strong>初始化（Initialization）</strong>：首先，随机选择k个数据点作为初始的簇中心（也称为种子点）。这些点代表了每个簇的起始位置。<br> 初始化的簇的生成是基于选择数据点最近的种子点的最短距离相应的簇。</li><li><strong>计算质心（Mean-op）</strong>：对于每个簇，计算所有属于该簇的数据点的平均位置，这个平均位置就是簇的新质心。质心是该簇内所有点的平均位置，可以看作是簇的“中心”。</li><li><strong>分配到最近的质心（Nearest_Centroid-op）</strong>：接下来，重新检查每个数据点，将其分配给最近的质心所代表的簇。这个步骤确保了每个数据点都属于与其最近的簇。</li><li><strong>重复迭代</strong>：重复步骤2和步骤3，直到达到一个停止条件——通常是质心不再显著变化，或者数据点的簇归属不再改变。</li></ol>',12),Tl={href:"https://www.naftaliharris.com/blog/visualizing-k-means-clustering/",target:"_blank",rel:"noopener noreferrer"},Gl=s("img",{src:"https://pic.hanjiaming.com.cn/2023/11/19/d3ff8044ef261.png",alt:"1700400352729.png",style:{zoom:"50%"}},null,-1),Kl=s("strong",null,"Centroid",-1),Vl=s("strong",null,"Clustroid",-1),Jl=a('<div class="hint-container tip"><p class="hint-container-title">Example</p><ul><li>初始化：从客户数据中随机选取3个客户作为初始簇中心。</li><li>计算质心：计算每个簇中客户购物数据的平均值，这个平均值表示每个簇的新质心。</li><li>分配到最近的质心：根据每个客户的购物数据，将他们分配给最近的质心所代表的簇。</li><li>重复迭代：不断重复计算质心和重新分配客户，直到质心的位置稳定下来，这意味着每个客户都被归入了最适合他们购物习惯的簇中。</li></ul></div><div class="hint-container info"><p class="hint-container-title">Comments</p><p>Strength</p><ul><li>相对高效：O(tkn)，其中 n 是 # 个对象，k 是 # 个簇，t 是 #iterations。通常，K，t &lt;&lt; n。</li><li>通常终止于局部最优。可以使用确定性退火和遗传算法等技术找到全局最优值</li></ul><p>Weakness</p><ul><li>仅在定义均值时适用，那么分类数据呢？<br> 红色、橙色、蓝色分别代表什么意思？</li><li>需要提前指定k，簇的数量</li><li>无法处理嘈杂的数据和异常值</li><li>不适合发现非凸形状的簇；簇的基本形状是球形（凸形）</li></ul><p>Variations of K-Means Method</p><p>k 均值存在几种变体，它们的不同之处在于：</p><ul><li>初始 k 均值的选择</li><li>相异性计算</li><li>计算聚类平均值的策略</li></ul></div><h3 id="k-medoids-clustering-method" tabindex="-1"><a class="header-anchor" href="#k-medoids-clustering-method" aria-hidden="true">#</a> K-Medoids Clustering Method</h3><p>K-Medoids聚类方法与K-Means类似，但 K-Medoids 使用的是 Clustroid: 一个现有的（数据）点，与集群中所有其他点 &quot;最接近&quot;。</p><ul><li>在簇中查找代表性对象，称为中心点</li><li>K-Medoids对异常值更加鲁棒，因为它选择实际存在的数据点作为中心，而不是所有点的平均。</li><li>PAM (Partitioning Around Medoids, 1987) 对于小数据集有效，但对于大数据集扩展性不佳</li></ul><div class="hint-container tip"><p class="hint-container-title">Choosing k</p><ul><li>由应用程序定义，例如图像量化</li><li>绘制数据图（降维后）并检查聚类</li><li>增量（领导者簇）算法：一次添加一个，直到“肘部”（重建误差/对数似然/组间距离）</li><li>手动检查含义</li></ul></div><h2 id="hierarchical-clustering" tabindex="-1"><a class="header-anchor" href="#hierarchical-clustering" aria-hidden="true">#</a> Hierarchical Clustering</h2><p>聚类过程涉及一系列数据分区: 它可以运行包含所有记录的单个群集，也可以运行包含单个记录的 n 个群集。</p><p>两种流行的方法: 凝聚 (ANGES) 和分裂 (DIANA) 方法</p><ul><li>AGNES（Agglomerative Nesting）是一种自下而上的聚类方法。它从将每个数据点视为一个单独的簇开始，然后逐步合并最相似的簇，直到达到某个终止条件。 <ol><li><strong>开始时</strong>：每个数据点是一个单独的簇。</li><li><strong>查找最近的簇</strong>：计算所有可能的簇对之间的距离，并合并最近的两个簇。</li><li><strong>重复</strong>：继续合并簇，直到只剩下一个簇或满足某个终止条件（如达到指定的簇数量）。</li></ol></li><li>DIANA（Divisive Analysis）是一种自上而下的聚类方法。它从将所有数据点视为一个单一的大簇开始，然后逐步将簇分裂成更小的簇，直到每个数据点成为一个单独的簇或达到某个终止条件。 <ol><li><strong>开始时</strong>：所有数据点都在一个大簇中。</li><li><strong>分裂簇</strong>：找到最合适的方法将一个簇分裂成两个更小的簇。</li><li><strong>重复</strong>：继续分裂簇，直到每个数据点都是一个单独的簇或满足某个终止条件。</li></ol></li></ul><p>树状图（Dendrogram）: 无论是凝聚还是分裂，聚类过程可以用树状图来表示。这种图表展示了每个阶段的簇是如何合并或分裂的。在树状图中，每个分支代表一个簇，分支的合并或分裂代表簇的合并或分裂过程。</p><p>距离矩阵: 这两种方法都使用距离矩阵来决定如何合并或分裂簇。距离矩阵记录了每对数据点之间的距离，这些距离用于评估簇之间的相似性或差异性。</p><div class="hint-container info"><p class="hint-container-title">Example</p><p>假设一个图书馆想要根据书籍的相似性对其进行分类。使用AGNES方法，每本书最初被视为一个独立的簇。然后，根据书籍的相似性（如主题、作者、出版年份等），最相似的书籍被合并成一个簇。这个过程一直进行，直到形成一个包含所有书籍的大簇，或者达到图书馆设定的分类数量。整个过程可以用树状图来表示，显示了哪些书籍首先被合并，以及随后的合并过程。</p></div><p>使用距离矩阵作为聚类标准。该方法不需要簇数k作为输入，但需要终止条件</p><img src="https://pic.hanjiaming.com.cn/2023/11/19/fcb110a074192.png" alt="1700401777424.png" style="zoom:33%;"><div class="hint-container info"><p class="hint-container-title">凝聚聚类方法的主要弱点</p><ul><li>扩展性不好：时间复杂度至少为 O(n^2)，其中 n 是对象总数（需要计算每对对象的相似度或相异度）</li><li>永远无法撤销之前所做的事情</li><li>即使数据包含其他形状的簇，分层方法也偏向于寻找“球形”簇。</li><li>分区是通过 &quot;切割 &quot;树枝图或在构成层次结构的嵌套聚类序列中选择一个解决方案来实现的。</li><li>为数据确定适当的簇数很困难。一种非正式的方法是检查树枝图中融合水平之间的差异。如果变化较大，则表示有特定数量的聚类</li></ul></div><h3 id="agglomerative-nesting" tabindex="-1"><a class="header-anchor" href="#agglomerative-nesting" aria-hidden="true">#</a> Agglomerative Nesting</h3><p>Also known as nearest neighbor (1NN) technique.</p><ul><li>Use the Single-Linkage method and the dissimilarity matrix.</li><li>Merge nodes that have the least dissimilarity.</li><li>Go on in a non-descending fashion.</li><li>Eventually all nodes belong to the same cluster</li></ul><p>工作方式：</p><ol><li><strong>开始</strong>：最初，每个数据点都是一个单独的簇或“节点”。</li><li><strong>使用不相似度矩阵</strong>：不相似度矩阵包含了每对数据点之间的不相似度（或距离）。越不相似或距离越远的点，在矩阵中的值越大。</li><li><strong>单链路方法</strong>：这个方法在合并簇时考虑的是簇之间最近的成员。即，<u>两个簇之间的距离定义为这两个簇中最接近的两个点之间的距离</u>。</li><li><strong>合并最相似的节点</strong>：在每一步，选择不相似度矩阵中具有最小不相似度（即最近距离）的两个节点合并成一个新的簇。</li><li><strong>非降序方式</strong>：这个过程以非降序方式进行，意味着每次合并后，新形成的簇的不相似度不会低于之前任何一次合并的簇。（换句话说，随着聚类过程的进行，你会发现合并的两个簇之间的距离或不相似度会逐渐增加。）</li><li><strong>最终合并</strong>：这个过程一直持续，直到所有的节点都合并到一个单一的大簇中。</li></ol><figure><img src="https://pic.hanjiaming.com.cn/2023/11/19/3ef3f7b4136e6.png" alt="1700407138563.png" tabindex="0" loading="lazy"><figcaption>1700407138563.png</figcaption></figure><p>假设有四个点A、B、C和D，不相似度矩阵可能看起来像这样：</p><table><thead><tr><th></th><th>A</th><th>B</th><th>C</th><th>D</th></tr></thead><tbody><tr><td><strong>A</strong></td><td>0</td><td>1.2</td><td>2.5</td><td>3.1</td></tr><tr><td><strong>B</strong></td><td>1.2</td><td>0</td><td>1.7</td><td>2.8</td></tr><tr><td><strong>C</strong></td><td>2.5</td><td>1.7</td><td>0</td><td>1.4</td></tr><tr><td><strong>D</strong></td><td>3.1</td><td>2.8</td><td>1.4</td><td>0</td></tr></tbody></table><p>这个矩阵显示了每对点之间的不相似度。在AGNES的聚类过程中，会根据这个矩阵来决定哪些点应该首先被合并。例如，根据上表，点A和B之间的不相似度是最小的（1.2），因此在聚类的初始阶段，A和B可能首先被合并成一个簇。随后，聚类过程会根据更新后的不相似度矩阵继续进行，直到所有点最终合并成一个大簇。</p><div class="hint-container info"><p class="hint-container-title">Example</p><p>假设我们有一个关于植物的数据集，每个数据点代表一种植物，根据它们的某些特征（如高度、叶子形状等）计算出不相似度。</p><ul><li>开始时，每种植物都是一个独立的簇。</li><li>查看不相似度矩阵，找出距离最近的两种植物，比如植物A和植物B。</li><li>将植物A和植物B合并成一个新的簇。</li><li>继续这个过程，比如下一步可能将新形成的簇（包含植物A和B）与植物C合并，因为它们之间的不相似度最小。</li><li>这个过程一直持续，直到所有植物都归为一个大簇。</li></ul><p>通过这种方式，AGNES方法能够根据植物之间的相似性，逐步构建出一个显示植物之间关系的层次结构。</p></div><p>在层次聚类（如Agglomerative Nesting/Clustering）中，有几种不同的方法来定义不同群组（簇）之间的“距离”。这些方法决定了簇是如何形成和合并的。让我通俗地解释一下这些不同方法：</p><h4 id="single-linkage-method" tabindex="-1"><a class="header-anchor" href="#single-linkage-method" aria-hidden="true">#</a> Single Linkage Method</h4><p>Agglomerative Nesting/Clustering: Single Linkage Method</p><p>The distance between groups is defined as the <u>closest pair</u> of records from each group.</p><div class="hint-container note"><p class="hint-container-title">Example</p><ul><li>假设距离矩阵D1。</li><li>矩阵中最小的条目是个体 1 和 2，因此它们被连接起来形成一个二成员簇。该集群与其他三个个体之间的距离重新计算为 <ul><li><em>d</em>(12)3 = min[<em>d</em>13,d23] = <em>d</em>23 = 5.0</li><li><em>d</em>(12)4 = min[<em>d</em>14,d24] = <em>d</em>24 = 9.0</li><li><em>d</em>(12)5 = min[<em>d</em>15,d25] = <em>d</em>25 = 8.0</li></ul></li></ul><img src="https://pic.hanjiaming.com.cn/2023/11/19/feb6faa06e870.png" alt="1700408274526.png" style="zoom:50%;"><ul><li>现在可以构建新的矩阵D2，其条目是个体间距离和簇个体值。</li></ul><img src="https://pic.hanjiaming.com.cn/2023/11/19/a15ea3396e46e.png" alt="1700408452763.png" style="zoom:50%;"><ul><li>D2 中最小的条目是个体 4 和 5 的条目，因此它们现在形成第二个双成员簇，并且发现了一组新的距离 <ul><li><em>d</em>(12)3 = 5.0 as before</li><li><em>d</em>(12)(45) = min[<em>d</em>14,<em>d</em>15,<em>d</em>24,<em>d</em>25] = 8.0</li><li><em>d</em>(45)3 = min[<em>d</em>34,<em>d</em>35] = <em>d</em>34 = 4.0</li></ul></li><li>These may be arranged in a matrix D3.</li></ul><img src="https://pic.hanjiaming.com.cn/2023/11/19/162988b772dad.png" alt="1700408721546.png" style="zoom:50%;"><ul><li>现在 d(45)3 中的最小条目，因此个体 3 被添加到包含个体 4 和 5 的簇中。最后，包含个体 1、2 和 3、4、5 的组被组合成单个簇。每个阶段产生的分区在右侧。</li></ul><img src="https://pic.hanjiaming.com.cn/2023/11/19/52d18f8f1f93d.png" alt="1700408787791.png" style="zoom:50%;"><img src="https://pic.hanjiaming.com.cn/2023/11/19/a1a96bc1574c8.png" alt="1700408816282.png" style="zoom:50%;"></div><ul><li>Decompose data objects into a several levels of nested partitioning (tree of clusters), called a dendrogram. 「将数据对象分解成几层嵌套分区（聚类树），称为树枝图。」</li><li>数据对象的聚类是通过在所需的层次上切割树枝图来实现的，然后每个相连的成分形成一个聚类。</li></ul><h4 id="complete-linkage-method" tabindex="-1"><a class="header-anchor" href="#complete-linkage-method" aria-hidden="true">#</a> Complete Linkage Method</h4><ul><li>定义：在完全链接聚类中，两个簇之间的距离定义为簇内最远的两个点之间的距离。</li><li>例子：假设有两个簇，簇A有点1和2，簇B有点3和4。如果点1和点4之间的距离是所有点对之间最远的，那么这个距离就是簇A和簇B之间的距离。</li></ul><h4 id="group-average-clustering-method" tabindex="-1"><a class="header-anchor" href="#group-average-clustering-method" aria-hidden="true">#</a> Group-average Clustering Method</h4><ul><li><strong>定义</strong>：在群平均聚类中，两个簇之间的距离是这两个簇中所有点对之间距离的平均值。</li><li><strong>例子</strong>：继续上面的例子，我们会计算点1到点3、点1到点4、点2到点3和点2到点4这四对点之间的距离，然后取这些距离的平均值作为簇A和簇B之间的距离。</li></ul><h4 id="centroid-clustering-method" tabindex="-1"><a class="header-anchor" href="#centroid-clustering-method" aria-hidden="true">#</a> Centroid Clustering Method</h4><ul><li><strong>定义</strong>：在质心聚类中，每个簇由其所有点的平均值（或质心）代表。两个簇之间的距离是它们的质心之间的距离。</li><li><strong>例子</strong>：假设簇A的质心是点1和点2坐标的平均值，簇B的质心是点3和点4坐标的平均值。那么簇A和簇B之间的距离就是这两个质心之间的距离。</li></ul><p>这些不同的方法影响着聚类的最终结果。例如，</p><ul><li>完全链接聚类倾向于产生更加紧密和均匀大小的簇，因为它避免了将距离较远的点合并到同一个簇中。</li><li>而群平均聚类提供了一种平衡的方法，既考虑了簇内的紧密程度，也考虑了簇的整体大小。</li><li>质心聚类则侧重于簇中点的整体“中心”位置。</li></ul><h3 id="divisive-analysis" tabindex="-1"><a class="header-anchor" href="#divisive-analysis" aria-hidden="true">#</a> Divisive Analysis</h3><figure><img src="https://pic.hanjiaming.com.cn/2023/11/19/353aba923b821.png" alt="1700409067277.png" tabindex="0" loading="lazy"><figcaption>1700409067277.png</figcaption></figure>',42);function Pl(Wl,Ol){const p=e("ExternalLinkIcon"),m=e("RouterLink");return t(),n("div",null,[h,s("p",g,[s("span",d,[s("span",u,[_,s("span",v,[s("span",y,[b,w,x,s("span",f,[s("span",z,[s("span",M,[s("span",k,[j,s("span",A,[S,s("span",C,[s("span",B,[(t(),n("svg",D,H))])])])])])])]),E,N,s("span",R,[s("span",L,[s("span",Y,[s("span",I,[T,s("span",G,[K,s("span",V,[s("span",J,[(t(),n("svg",P,O))])])])]),Q]),U])]),F,X,Z,$]),s("span",ss,[as,s("span",ts,[s("span",ns,[ls,s("span",es,[s("span",is,[ps,s("span",ms,[s("span",cs,[s("span",rs,[s("span",os,[s("span",hs,[gs,s("span",ds,[us,s("span",_s,[s("span",vs,[(t(),n("svg",ys,ws))])])])])])])]),xs]),fs,zs,Ms,s("span",ks,[s("span",js,[s("span",As,[s("span",Ss,[s("span",Cs,[Bs,s("span",Ds,[qs,s("span",Hs,[s("span",Es,[(t(),n("svg",Ns,Ls))])])])])])])]),Ys]),Is]),Ts]),Gs,Ks,Vs,s("span",Js,[s("span",Ps,[Ws,s("span",Os,[s("span",Qs,[s("span",Us,[s("span",Fs,[s("span",Xs,[Zs,s("span",$s,[sa,s("span",aa,[s("span",ta,[(t(),n("svg",na,ea))])])])])])])]),ia]),pa,ma,ca,s("span",ra,[s("span",oa,[s("span",ha,[s("span",ga,[s("span",da,[ua,s("span",_a,[va,s("span",ya,[s("span",ba,[(t(),n("svg",wa,fa))])])])])])])]),za]),Ma]),ka]),ja,s("span",Aa,[s("span",Sa,[Ca,s("span",Ba,[s("span",Da,[s("span",qa,[s("span",Ha,[s("span",Ea,[Na,s("span",Ra,[La,s("span",Ya,[s("span",Ia,[(t(),n("svg",Ta,Ka))])])])])])])]),Va]),Ja,Pa,Wa,s("span",Oa,[s("span",Qa,[s("span",Ua,[s("span",Fa,[s("span",Xa,[Za,s("span",$a,[st,s("span",at,[s("span",tt,[(t(),n("svg",nt,et))])])])])])])]),it]),pt]),mt]),ct]),rt])])])])])]),s("p",null,[l("where "),s("span",ot,[ht,s("span",gt,[s("span",dt,[ut,s("span",_t,[s("span",vt,[s("span",yt,[s("span",bt,[wt,s("span",xt,[ft,s("span",zt,[s("span",Mt,[(t(),n("svg",kt,At))])])])])])])]),St,Ct,Bt]),Dt])]),l(" and "),s("span",qt,[Ht,s("span",Et,[s("span",Nt,[Rt,s("span",Lt,[s("span",Yt,[s("span",It,[s("span",Tt,[Gt,s("span",Kt,[Vt,s("span",Jt,[s("span",Pt,[(t(),n("svg",Wt,Qt))])])])]),Ut]),Ft])]),Xt,Zt,$t]),sn])]),l(" are 两个(p)维数据对象，(q)是一个正整数")]),an,s("p",tn,[s("span",nn,[s("span",ln,[en,s("span",pn,[s("span",mn,[cn,rn,on,s("span",hn,[s("span",gn,[s("span",dn,[s("span",un,[_n,s("span",vn,[yn,s("span",bn,[s("span",wn,[(t(),n("svg",xn,zn))])])])])])])]),Mn,kn,s("span",jn,[s("span",An,[s("span",Sn,[s("span",Cn,[Bn,s("span",Dn,[qn,s("span",Hn,[s("span",En,[(t(),n("svg",Nn,Ln))])])])]),Yn]),In])]),Tn,Gn,Kn,Vn]),Jn])])])]),Pn,s("p",Wn,[s("span",On,[s("span",Qn,[Un,s("span",Fn,[s("span",Xn,[Zn,$n,sl,s("span",al,[s("span",tl,[s("span",nl,[s("span",ll,[el,s("span",il,[pl,s("span",ml,[s("span",cl,[(t(),n("svg",rl,hl))])])])])])])]),gl,dl,s("span",ul,[s("span",_l,[s("span",vl,[s("span",yl,[bl,s("span",wl,[xl,s("span",fl,[s("span",zl,[(t(),n("svg",Ml,jl))])])])]),Al]),Sl])]),Cl,Bl,Dl,ql]),Hl])])])]),El,Nl,Rl,Ll,Yl,Il,s("p",null,[l("可以在 "),s("a",Tl,[l("https://www.naftaliharris.com/blog/visualizing-k-means-clustering/"),i(p)]),l(" 查看 Demo")]),Gl,s("p",null,[Kl,l(' 是集群中所有（数据）点的平均值。这意味着中心点是一个 "人工 "点。区别于 '),Vl,l("，对比请参考 "),i(m,{to:"/note/ds/ml/regression-models/clustering.html#centroid-clustroid"},{default:r(()=>[l("Centroid & Clustroid")]),_:1})]),Jl])}const Fl=c(o,[["render",Pl],["__file","cluster.html.vue"]]);export{Fl as default};
