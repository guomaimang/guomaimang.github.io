import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{o as e,c as t,e as a}from"./app-466d1a99.js";const n={},r=a('<h1 id="computer-security" tabindex="-1"><a class="header-anchor" href="#computer-security" aria-hidden="true">#</a> Computer Security</h1><h2 id="c-i-a-triangle" tabindex="-1"><a class="header-anchor" href="#c-i-a-triangle" aria-hidden="true">#</a> C.I.A. Triangle</h2><p>THREE main security goals</p><ul><li>Confidentiality「保密性」</li><li>Integrity「完整性」</li><li>Availability「可用性」</li></ul><img src="https://pic.hanjiaming.com.cn/2023/02/02/4383fee8a8262.png" alt="1675319874957.png" style="zoom:33%;"><h3 id="confidentiality" tabindex="-1"><a class="header-anchor" href="#confidentiality" aria-hidden="true">#</a> Confidentiality</h3><ul><li>Confidentiality is the concealment「掩饰」 of information or resources</li><li>对信息保密的需求来自于计算机在政府和工业等秘密领域的使用。</li><li><strong>Access control mechanisms</strong> 支持保密性 <ul><li>例如，密码学「cryptography」 -&gt; 加密技术「encryption techniques」</li></ul></li><li>Confidentiality 也适用于数据的存在，它有时比数据本身更有启示性</li><li><strong>Resource hiding</strong> is another important aspect</li><li>Sites wish to conceal「掩饰」 their configuration as well as what systems they are using</li><li>Organisations may not wish unauthorized personnel, both insiders or outsiders, to know about specific equipment they are using</li><li><u>Assumptions「假设」 and trust「信任」</u> underlie「基础」 confidentiality mechanisms</li></ul><h3 id="integrity" tabindex="-1"><a class="header-anchor" href="#integrity" aria-hidden="true">#</a> Integrity</h3><p>Integrity refers to the <strong>trustworthiness</strong>「可信程度」 of data or resources, and it is usually phrased in terms of preventing「被表述为」 improper or un-authorized change.</p><p>Integrity includes</p><ul><li>来源的完整性「origin integrity」（数据的来源，通常称为认证「authentication」）</li><li>数据完整性「data integrity」（信息的内容）</li></ul><p><strong>Integrity mechanisms</strong> fall into two classes:</p><ul><li>Prevention mechanisms: 通过阻止任何未经授权的改变数据的企图或任何以未经授权的方式改变数据的企图，力求保持数据的完整性</li><li>Detection mechanisms: Do not try to prevent violations of integrity; they simply <strong>report</strong> that the data’s integrity is <strong>no longer trustworthy</strong></li></ul><p>Integrity includes both the <strong>correctness</strong> and the <strong>trustworthiness</strong> of the data</p><ul><li>谁发送/创建的数据？(源头)</li><li>数据在到达目的地之前被保护得如何？</li><li>数据在电脑上的保护程度如何？</li></ul><h3 id="availability" tabindex="-1"><a class="header-anchor" href="#availability" aria-hidden="true">#</a> Availability</h3><p>Availability refers to the <strong>ability</strong> to use the information or resource desired.</p><ul><li>可用性与系统设计的可靠性也有很大关系，因为一个不可用的系统与没有系统一样糟糕。</li><li>某些人可能故意通过使其不可用来拒绝对数据或资源的访问</li></ul><p>试图阻止可用性的做法被称为拒绝服务（DoS）攻击「 denial of service (DoS) attacks」</p><ul><li>DoS攻击难以检测，因为它要求分析人员确定异常的访问模式是否归因于对资源或环境的故意操纵</li><li>有时，DoS攻击似乎只是一个异常「atypical」事件，或者在某些情况下，它们甚至不是异常的。</li></ul><h2 id="threat" tabindex="-1"><a class="header-anchor" href="#threat" aria-hidden="true">#</a> Threat</h2><p>A threat is a potential violation of security「威胁是对安全的潜在侵犯」</p><ul><li>The violation「侵犯」 need not occur for there to be a threat</li><li>The fact that the violation <strong>MIGHT</strong> occur is a threat</li></ul><p>If the actions occur, it is an <strong>attack</strong></p><p>The one who causes the attack to happen is an <strong>attacker/adversary</strong></p><div class="hint-container info"><p class="hint-container-title">Who are Adversaries?</p><ul><li>Career criminals</li><li>Hackers</li><li>Malicious users「恶意用户」</li><li>Careless users</li></ul></div><h2 id="terminologies" tabindex="-1"><a class="header-anchor" href="#terminologies" aria-hidden="true">#</a> Terminologies</h2><ul><li>Disclosure「泄露」:Unauthorized access to information</li><li>Deception「欺骗」:Acceptance of false data「接受虚假数据」</li><li>Disruption「中断」:Interruption or prevention of correct operatio</li><li>Usurpation「篡夺」:Unauthorized control of some part of a system「未经授权控制一个系统的某些部分」</li><li>Snooping「窥探」:Unauthorized interception of data「未经授权的数据拦截」</li><li>Modification or Alteration「修改或变更」:Unauthorized change of data「未经授权更改数据」</li><li>Masquerading or Spoofing「伪装或欺骗」: Impersonation of「冒名顶替」 one entity by another</li><li>Repudiation of origin「否认原籍」:A false denial that an entity sent or created something「虚假地否认一个实体发送或创造了某种东西」</li><li>Denial of receipt「拒绝收据」:A false denial that an entity received some information or message「虚假地否认一个实体收到某些信息或消息」</li><li>Delay: Temporary inhibition of a service「暂时禁止服务」</li><li>Denial of Service: A long-term inhibition of a service</li></ul><h2 id="security-service" tabindex="-1"><a class="header-anchor" href="#security-service" aria-hidden="true">#</a> Security Service</h2><p>复制「replicate」与真实世界应用程序相关的安全要求</p><ul><li>有签名「signatures」和日期</li><li>需要防止披露「disclosure」、篡改「tampering」或破坏「destruction」</li><li>要经过公证「notarized」或见证「witnessed」</li><li>要有许可证「licensed」</li></ul><h2 id="security-policy" tabindex="-1"><a class="header-anchor" href="#security-policy" aria-hidden="true">#</a> Security Policy</h2><p>安全政策「security policy」是关于什么是允许的，什么是不允许的声明。</p><ul><li>Usually described in English as what users are allowed to do. <ul><li>E.g., All remote access tools or systems that allow communication to ABC Bank resources from the Internet or external partner systems must require multi-factor authentication. Examples include authentication tokens and smart cards that require an additional PIN or password</li></ul></li><li>Can be highly mathematical <ul><li>E.g., A subject s is allowed read access to an object o if and only if C(s) dominates C(o)</li></ul></li></ul><h2 id="security-mechanism" tabindex="-1"><a class="header-anchor" href="#security-mechanism" aria-hidden="true">#</a> Security Mechanism</h2><p>A <strong>security mechanism</strong> is a method, tool, or procedure for enforcing a security policy.「安全机制」是一种执行安全策略的方法、工具或程序。</p><p>Can be non-technical. E.g., how can your save your passwords?</p><p>Goal of Security Mechanisms:</p><ul><li><strong>Prevent</strong> an attack (before it happens) <ul><li>Ideal solution</li><li>This is where technology should be helping most!</li></ul></li><li><strong>Detect</strong> the attack (when it happens) <ul><li>Know what is going on, who is causing it</li><li>This is really where technology is helping most!</li></ul></li><li><strong>Recover</strong> from an attack (as soon as possible) <ul><li>Stop the attack</li><li>Assess and repair the damage caused</li></ul></li></ul><h2 id="assumptions-and-trust" tabindex="-1"><a class="header-anchor" href="#assumptions-and-trust" aria-hidden="true">#</a> Assumptions and Trust</h2><p>Security rests on assumptions</p><p>For example, Opening a door lock requires a key -&gt; The assumption: the lock is secure against lock picking</p><p>在设计安全机制时，我们倾向于使用 &quot;较弱 &quot;的假设，而不是 &quot;较强 &quot;的假设。例如，我们有两种加密方案</p><p>Specification, Design and Implementation「规范、设计和实施」</p><ul><li>类似于软件（系统）开发 <ul><li>规范「specification」是对（安全）系统所需功能的陈述</li><li>设计将规范转化为能够实现它们的组件</li><li>实施创造了一个满足设计的系统。</li></ul></li><li>如果一个程序的执行情况符合要求，那么它就是正确的</li></ul><h2 id="security-principles" tabindex="-1"><a class="header-anchor" href="#security-principles" aria-hidden="true">#</a> Security Principles</h2><ul><li>安全机制的构建是基于一些安全原则的 <ul><li>最容易渗透的原则「easiest penetration」</li><li>充分保护的原则「Principle of adequate protection」</li><li>有效性原则「Principle of effectiveness」</li></ul></li><li>这些原则的目的是促进 <ul><li>security analysis <ul><li>assessment of effectiveness and efficiency「效果和效率的评估」</li></ul></li></ul></li></ul><h3 id="principle-of-easiest-penetration" tabindex="-1"><a class="header-anchor" href="#principle-of-easiest-penetration" aria-hidden="true">#</a> Principle of easiest penetration</h3><ul><li>入侵者「Intruders」会使用任何可用的渗透「penetration」手段</li><li>这使得对安全的评估变得困难，因为必须对所有可能破坏安全的方式进行审查「examined」</li><li>Security is only as strong as the weakest link in the system「安全性取决于系统中最薄弱的环节」</li></ul><h3 id="principle-of-adequate-protection" tabindex="-1"><a class="header-anchor" href="#principle-of-adequate-protection" aria-hidden="true">#</a> Principle of adequate protection</h3><p>物品只应在其有价值时受到保护，而且保护的程度应与它们的价值相符。-&gt;设置保护措施总是有成本的</p><p>这是一个非常实用「practical」的原则，是很大一部分现代计算机安全的基础。</p><h3 id="principle-of-effectiveness" tabindex="-1"><a class="header-anchor" href="#principle-of-effectiveness" aria-hidden="true">#</a> Principle of effectiveness</h3><ul><li>Controls must be used properly to be effective</li><li>Controls should be efficient, easy to use and appropriate</li><li>Dilemma「困境」? Cost vs Security?</li></ul><p>Case study: 以前，要登录汇丰银行的电子银行服务，除了原始密码外，用户还必须输入一个由物理安全令牌生成的一次性密码。汇丰银行通过使用用户的移动电话和另一个密码/指纹的组合来取代这一信物。</p><p>用户可以使用他们的手机和密码/指纹来生成一次性密码。</p>',56),l=[r];function s(o,c){return e(),t("div",null,l)}const d=i(n,[["render",s],["__file","index.html.vue"]]);export{d as default};
