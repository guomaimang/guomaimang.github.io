import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{o as e,c as l,e as o}from"./app-9673d752.js";const a={},n=o('<h1 id="advanced-android" tabindex="-1"><a class="header-anchor" href="#advanced-android" aria-hidden="true">#</a> Advanced Android</h1><h2 id="image-uploader" tabindex="-1"><a class="header-anchor" href="#image-uploader" aria-hidden="true">#</a> Image Uploader</h2><ol><li>请求互联网访问的使用权限</li><li>更新 build.grade 和 libs.versions.toml 并同步</li><li>设置与FastAPI连接的POST方法</li><li>创建一个可序列化的数据模型：数据类 <code>PostModel(val data: String)</code></li><li>设计图片上传界面</li><li>将Uri转换为位图，并将位图转换为字节数组，然后编码字节数组为字符串，并将数据模型发送到FastAPI</li></ol><p>在FastAPI</p><ul><li>创建数据模型</li><li>直接将byteArray保存到图像文件中</li></ul><h2 id="google-play-services" tabindex="-1"><a class="header-anchor" href="#google-play-services" aria-hidden="true">#</a> Google Play Services</h2><ul><li>谷歌Play服务是一套为Android设备提供的云服务和API</li><li>Allows you to integrate various services from Google into the mobile app</li><li>谷歌的一些服务包括 <ul><li>Location detection</li><li>Geocoding and reverse geo-coding</li><li>Maps API (e.g. navigation, street views)</li><li>Google Drive for cloud storage</li><li>Google Wallet for online payment</li></ul></li></ul><p>Accessing Google APIs</p><p>要访问各种Google API，您需要创建GoogleApi子类的一个实例。</p><ul><li>它们自动管理连接到谷歌应用商店服务。</li><li>离线时排队请求。当有连接可用时按顺序执行。</li><li>GoogleApi对象也易于创建，因此您可以根据需要实例化它们以访问Google服务。</li></ul><p>要访问不需要 API 授权的服务，请获取该服务的客户端对象的实例，并将其传递给当前的 Context 或 Activity。</p><p>要访问需要API授权的服务，首先登录用户并请求权限。然后获取服务客户端对象的实例，将其传递给GoogleSignInAccount和当前的Context或Activity。</p><h2 id="location-detection" tabindex="-1"><a class="header-anchor" href="#location-detection" aria-hidden="true">#</a> Location Detection</h2><p>位置检测是智能手机最常用的功能之一</p><ul><li>Maps, transportation and navigation</li><li>Location-based social networking</li><li>Tracking</li></ul><p>手机可以利用多种数据源来检测位置</p><ul><li>GPS (Global Positioning System)</li><li>Information of base stations (Cell ID)</li><li>Wi-Fi + IP Address</li></ul><p>Android 提供简单的 API，通过结合来自不同来源的输入来返回用户的当前位置</p><ul><li>Android Framework&#39;s Location API (android.location) -&gt; Not recommended for access location</li><li>Google Location Services API (com.google.android.gms.location) -&gt; Preferred way to add location-awareness</li></ul><p>如果您的应用需要使用位置服务，则需要请求用户的许可</p><img src="https://pic.hanjiaming.com.cn/2024/12/11/5946e2a4676e7.png" alt="1733851912365.png" style="zoom:33%;"><h3 id="google-play-services-location-apis" tabindex="-1"><a class="header-anchor" href="#google-play-services-location-apis" aria-hidden="true">#</a> Google Play Services Location APIs</h3><img src="https://pic.hanjiaming.com.cn/2024/12/11/53c4294096ab3.png" alt="1733851957170.png" style="zoom:33%;"><h3 id="set-up-a-location-request" tabindex="-1"><a class="header-anchor" href="#set-up-a-location-request" aria-hidden="true">#</a> Set Up a Location Request</h3><ul><li>如果您的应用需要请求位置更新，设备需要启用相应的系统组件（例如GPS或Wi-Fi扫描）。</li><li>您的应用程序不是直接启用服务，而是指定要请求的参数。</li></ul><img src="https://pic.hanjiaming.com.cn/2024/12/11/306969b2ad924.png" alt="1733852016967.png" style="zoom:33%;"><h2 id="using-google-maps" tabindex="-1"><a class="header-anchor" href="#using-google-maps" aria-hidden="true">#</a> Using Google Maps</h2><p>您可以使用 Google Maps Android API 在您的应用中嵌入交互式地图</p><p>Google Maps functions include:</p><ul><li>提供交互式地图，包括3D地图、卫星视图、地形视图、路线图等。</li><li>允许叠加不同的组件，例如标记、多边形等。</li><li>控制用户的视图，例如旋转、缩放、平移</li><li>Street view</li></ul><h2 id="geocoding-and-reverse-geocoding" tabindex="-1"><a class="header-anchor" href="#geocoding-and-reverse-geocoding" aria-hidden="true">#</a> Geocoding and Reverse Geocoding</h2><p>这两个功能都可以通过使用Android中的Geocoder类来实现。</p><ul><li>Geocoding: Converting an address to a geographic location (latitude/longitude)</li><li>Reverse Geocoding: Converting a geographic location (latitude/longitude) to an address</li></ul><p>在移动应用程序中，您可能希望让用户输入地图上的位置，而不是获取当前位置。</p><ul><li>考虑一个用于获取司机接送或食品配送投递的应用程序。</li><li>然后您需要将地点名称翻译成地理坐标（地理编码）。</li></ul><p>在移动应用中，你可能需要将地理位置转换为街道地址（反向地理编码）。</p><ul><li>例如，获取当前位置的名称，然后在网络上搜索附近的餐厅。</li><li>要使用反向地理编码，您需要一个精确的地理位置，因此您应该请求ACCESS_FINE_LOCATION权限。</li><li>您也可以使用Geocoder类来执行反向地理编码。</li></ul><p>getFromLocation() 函数是阻塞的，可能需要几秒钟才能响应。</p><ul><li>您不应该在UI线程上执行此操作。</li><li>相反，您应该使用其中一种异步访问方法，例如： <ul><li>AsyncTask</li><li>意图服务（IntentService）与结果接收器（ResultReceiver）或本地广播（LocalBroadcastManager）</li><li>Coroutine</li></ul></li></ul><h2 id="gradle" tabindex="-1"><a class="header-anchor" href="#gradle" aria-hidden="true">#</a> Gradle</h2><p>Gradle 是 Android 应用程序的官方构建工具</p><ul><li>它帮助您构建（编译）、测试、运行和打包您的应用程序</li><li>它通过Android Gradle插件集成到Android Studio中</li><li>也可以从命令行独立执行</li></ul><p>Benefits of Gradle</p><ul><li>Configure and customize the build process</li><li>创建具有不同功能、设置或参数的同一项目下的不同版本的应用程序</li><li>轻松将第三方模块集成到您的应用程序中</li></ul><h2 id="proguard" tabindex="-1"><a class="header-anchor" href="#proguard" aria-hidden="true">#</a> ProGuard</h2><p>Pro Guard 是一个可以帮助您缩小、优化和混淆应用程序代码的工具, 它通过删除未使用的代码、使用语义上晦涩的名称重命名类、字段和方法来实现这一点.</p><p>Why?</p><ul><li>Creates an APK file with smaller size</li><li>Makes the app more difficult to reverse engineer</li></ul>',48),r=[n];function t(d,s){return e(),l("div",null,r)}const p=i(a,[["render",t],["__file","advs.html.vue"]]);export{p as default};
