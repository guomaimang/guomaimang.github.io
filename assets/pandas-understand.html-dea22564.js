import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as p,c as l,a as n,b as a,d as c,e as s}from"./app-e7e54c71.js";const d={},o=s(`<h1 id="understand-pandas" tabindex="-1"><a class="header-anchor" href="#understand-pandas" aria-hidden="true">#</a> Understand Pandas</h1><h2 id="pandas-数据结构" tabindex="-1"><a class="header-anchor" href="#pandas-数据结构" aria-hidden="true">#</a> Pandas 数据结构</h2><ul><li>Pandas 主要是 DataFrame &amp; Series</li><li>Numpy 主要是 ndarray</li></ul><figure><img src="https://pic.hanjiaming.com.cn/2022/06/03/3beb0e1a75b0e.png" alt="1654254861923.png" tabindex="0" loading="lazy"><figcaption>1654254861923.png</figcaption></figure><p>当然DataFrame可能有多维数据</p><p>仅有数据列表即可产生最简单的Series</p><h3 id="创建series" tabindex="-1"><a class="header-anchor" href="#创建series" aria-hidden="true">#</a> 创建Series</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>s1 <span class="token operator">=</span> pd<span class="token punctuation">.</span>Series<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span><span class="token number">5.2</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
s1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>0      1
1      a
2    5.2
3      7
dtype: object
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建一个具有标签索引的series" tabindex="-1"><a class="header-anchor" href="#创建一个具有标签索引的series" aria-hidden="true">#</a> 创建一个具有标签索引的Series</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>s2 <span class="token operator">=</span> pd<span class="token punctuation">.</span>Series<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token number">5.2</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="使用python字典创建series" tabindex="-1"><a class="header-anchor" href="#使用python字典创建series" aria-hidden="true">#</a> 使用Python字典创建Series</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>sdata<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;Ohio&#39;</span><span class="token punctuation">:</span><span class="token number">35000</span><span class="token punctuation">,</span><span class="token string">&#39;Texas&#39;</span><span class="token punctuation">:</span><span class="token number">72000</span><span class="token punctuation">,</span><span class="token string">&#39;Oregon&#39;</span><span class="token punctuation">:</span><span class="token number">16000</span><span class="token punctuation">,</span><span class="token string">&#39;Utah&#39;</span><span class="token punctuation">:</span><span class="token number">5000</span><span class="token punctuation">}</span>
s3<span class="token operator">=</span>pd<span class="token punctuation">.</span>Series<span class="token punctuation">(</span>sdata<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建dataframe" tabindex="-1"><a class="header-anchor" href="#创建dataframe" aria-hidden="true">#</a> 创建DataFrame</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Create a empty dataframe </span>
df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="settingwithcopywarning" tabindex="-1"><a class="header-anchor" href="#settingwithcopywarning" aria-hidden="true">#</a> SettingWithCopyWarning</h2><p><strong>核心要诀: pandas的dataframel的修改写操作,只允许在源dataframe上进行,一步到位</strong></p><h3 id="复现" tabindex="-1"><a class="header-anchor" href="#复现" aria-hidden="true">#</a> 复现</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 只选出3月份的数据用于分析</span>
<span class="token comment"># 返回一列布尔值</span>
condition <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&quot;ymd&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">str</span><span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">&quot;2018-03&quot;</span><span class="token punctuation">)</span>

<span class="token comment"># 设置温差</span>
<span class="token comment"># 这一步发生警告</span>
df<span class="token punctuation">[</span>condition<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&quot;wen_cha&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&quot;bWendu&quot;</span><span class="token punctuation">]</span><span class="token operator">-</span>df<span class="token punctuation">[</span><span class="token string">&quot;yWendu&quot;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>原因是链式操作，其实是两个步骤，先get后set，get得到的dataframe可能是view也可能是copy，pandas发出警告</p><p><strong>总之，pandas不允许先筛选子dataframe，再进行修改写入</strong></p><h3 id="解决方案" tabindex="-1"><a class="header-anchor" href="#解决方案" aria-hidden="true">#</a> 解决方案</h3><p>使用loc</p><h2 id="pandas-元素方法" tabindex="-1"><a class="header-anchor" href="#pandas-元素方法" aria-hidden="true">#</a> Pandas 元素方法</h2><p>Pandas 的元素操作一般都是一整行或者一整列，即pd.Series。因此需要使用pd元素定义的方法处理。当然也可以用apply。</p>`,25),r={href:"https://pandas.pydata.org/pandas-docs/stable/reference/series.html#string-handling",target:"_blank",rel:"noopener noreferrer"},u=s(`<p>其实和Python 中的String的用法很相似。</p><h2 id="axis-参数" tabindex="-1"><a class="header-anchor" href="#axis-参数" aria-hidden="true">#</a> Axis 参数</h2><ul><li>axis=0 或者&quot;index&quot;： <ul><li>如果是单行操作，就指的是某一行</li><li>如果是聚合操作，指的是跨行cross rows</li></ul></li><li>axis=1 或者&quot;columns&quot;： <ul><li>如果是单列操作，就指的是某一列</li><li>如果是聚合操作，指的是跨列cross columns</li></ul></li></ul><p><strong>按哪个axis，就是这个axis要动起来(类似被for遍历)，其它的axis保持不变化</strong></p><img src="https://pic.hanjiaming.com.cn/2022/06/04/5e5ec7be91dcc.png" alt="1654275406038.png" style="zoom:50%;"><img src="https://pic.hanjiaming.com.cn/2022/06/04/a9e6e78971bbf.png" alt="1654275425505.png" style="zoom:50%;"><img src="https://pic.hanjiaming.com.cn/2022/06/04/55abf17f9f5a1.png" alt="1654275484829.png" style="zoom:50%;"><h2 id="index-作用" tabindex="-1"><a class="header-anchor" href="#index-作用" aria-hidden="true">#</a> index 作用</h2><h3 id="index的用途总结" tabindex="-1"><a class="header-anchor" href="#index的用途总结" aria-hidden="true">#</a> index的用途总结</h3><ol><li>更方便的数据查询；</li><li>使用index可以获得性能提升；</li><li>自动的数据对齐功能；</li><li>更多更强大的数据结构支持；</li></ol><h3 id="使用index会提升查询性能" tabindex="-1"><a class="header-anchor" href="#使用index会提升查询性能" aria-hidden="true">#</a> 使用index会提升查询性能</h3><ul><li>如果index是唯一的，Pandas会使用哈希表优化，查询性能为O(1);</li><li>如果index不是唯一的，但是有序，Pandas会使用二分查找算法，查询性能为O(logN);</li><li>如果index是完全随机的，那么每次查询都要扫描全表，查询性能为O(N);</li></ul><h3 id="使用index更多更强大的数据结构支持" tabindex="-1"><a class="header-anchor" href="#使用index更多更强大的数据结构支持" aria-hidden="true">#</a> 使用index更多更强大的数据结构支持</h3><p>很多强大的索引数据结构</p><ul><li>CategoricalIndex，基于分类数据的Index，提升性能；</li><li>MultiIndex，多维索引，用于groupby多维聚合后结果等；</li><li>DatetimeIndex，时间类型索引，强大的日期和时间的方法支持</li></ul><h2 id="分层索引" tabindex="-1"><a class="header-anchor" href="#分层索引" aria-hidden="true">#</a> 分层索引</h2><p>为什么要学习分层索引MultiIndex？</p><ul><li>分层索引：在一个轴向上拥有多个索引层级，可以表达更高维度数据的形式；</li><li>可以更方便的进行数据筛选，如果有序则性能更好；</li><li>groupby等操作的结果，如果是多KEY，结果是分层索引，需要会使用</li><li>一般不需要自己创建分层索引(MultiIndex有构造函数但一般不用)</li></ul><img src="https://pic.hanjiaming.com.cn/2022/06/04/c51fe9467bd71.png" alt="1654276612403.png" style="zoom:50%;"><img src="https://pic.hanjiaming.com.cn/2022/06/04/49b3e0f4f0770.png" alt="1654276637634.png" style="zoom:45%;"><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&gt;&gt;&gt; ser.index

MultiIndex([(&#39;BABA&#39;, &#39;2019-10-01&#39;),
            (&#39;BABA&#39;, &#39;2019-10-02&#39;),
            (&#39;BABA&#39;, &#39;2019-10-03&#39;),
            (&#39;BIDU&#39;, &#39;2019-10-01&#39;),
            (&#39;BIDU&#39;, &#39;2019-10-02&#39;),
            (&#39;BIDU&#39;, &#39;2019-10-03&#39;),
            (  &#39;IQ&#39;, &#39;2019-10-01&#39;),
            (  &#39;IQ&#39;, &#39;2019-10-02&#39;),
            (  &#39;IQ&#39;, &#39;2019-10-03&#39;),
            (  &#39;JD&#39;, &#39;2019-10-01&#39;),
            (  &#39;JD&#39;, &#39;2019-10-02&#39;),
            (  &#39;JD&#39;, &#39;2019-10-03&#39;)],
           names=[&#39;公司&#39;, &#39;日期&#39;])
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># unstack把二级索引变成列</span>
ser<span class="token punctuation">.</span>unstack<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><img src="https://pic.hanjiaming.com.cn/2022/06/04/30cf912f3ca02.png" alt="1654276720929.png" style="zoom:50%;"><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 多层索引，可以用元组的形式筛选</span>
ser<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">&#39;BIDU&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2019-10-02&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>DataFrame有多层索引MultiIndex怎样筛选数据？</p><p>在选择数据时：</p><ul><li>元组(key1,key2)代表筛选多层索引，其中key1是索引第一级，key2是第二级，比如key1=JD, key2=2019-10-02</li><li>列表[key1,key2]代表同一层的多个KEY，其中key1和key2是并列的同级索引，比如key1=JD, key2=BIDU</li></ul>`,27);function h(m,k){const e=i("ExternalLinkIcon");return p(),l("div",null,[o,n("p",null,[a("Series.str字符串方法列表参考文档: "),n("a",r,[a("https://pandas.pydata.org/pandas-docs/stable/reference/series.html#string-handling"),c(e)])]),u])}const b=t(d,[["render",h],["__file","pandas-understand.html.vue"]]);export{b as default};
