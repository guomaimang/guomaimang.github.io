import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o,c as i,a,b as n,d as c,e as s}from"./app-8a03df4a.js";const l={},u=s(`<h1 id="sampling-and-random" tabindex="-1"><a class="header-anchor" href="#sampling-and-random" aria-hidden="true">#</a> Sampling and Random</h1><h2 id="简单随机抽样" tabindex="-1"><a class="header-anchor" href="#简单随机抽样" aria-hidden="true">#</a> 简单随机抽样</h2><h3 id="df-sample" tabindex="-1"><a class="header-anchor" href="#df-sample" aria-hidden="true">#</a> df.sample()</h3><p>1786年，皮埃尔-西蒙-拉普拉斯意识到你可以用较少的精力来估计人口。他没有询问每一个住户，而是询问了一小部分住户，并利用统计学来估计整个人口的数量。这种对整个人口的一个子集进行研究的技术被称为抽样。通过抽样，由样本特征可预测总体特征。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>pts_vs_flavor_samp <span class="token operator">=</span> pts_vs_flavor_pop<span class="token punctuation">.</span>sample<span class="token punctuation">(</span>n<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>			total_cup_points 	flavor
1088 	80.33 						7.17
......
1027 	80.92 						7.25
62 		85.58 						8.17

[10 rows x 2 columns]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="设置种子" tabindex="-1"><a class="header-anchor" href="#设置种子" aria-hidden="true">#</a> 设置种子</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>coffee_ratings<span class="token punctuation">.</span>sample<span class="token punctuation">(</span>n<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">19000113</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><img src="https://pic.hanjiaming.com.cn/2022/07/04/9e34ec6fb33aa.png" alt="1656865235288.png" style="zoom:33%;"><h2 id="抽样偏差" tabindex="-1"><a class="header-anchor" href="#抽样偏差" aria-hidden="true">#</a> 抽样偏差</h2><p>::: detail 查看一关于美国大选的民意调查</p><img src="https://pic.hanjiaming.com.cn/2022/06/29/3378153795e85.png" alt="1656511769607.png" style="zoom:50%;"><p>1936年，一家名为《文学文摘》的报纸进行了一次广泛的民意调查，试图预测下一届美国总统选举。他们给1000万选民打了电话，得到了200多万份答复。大约有一百三十万人说他们会投票给兰登，只有不到一百万人说他们会投票给罗斯福。也就是说，兰登被预测将获得百分之五十七的选票，而罗斯福被预测将获得百分之四十三的选票。由于样本量如此之大，人们推测这项民调会非常准确。然而，在选举中，罗斯福以压倒性优势赢得了百分之六十二的选票。那么，什么地方出了问题？好吧，在1936年，电话是一种奢侈品，所以《文学文摘》所联系的人都是比较有钱的。选民的样本并不能代表整个选民群体，因此民调出现了样本偏差。数据是通过最简单的方法收集的，在这种情况下就是打电话给人们。这被称为便利抽样，往往容易出现样本偏差。在取样之前，我们需要思考我们的数据收集过程，以避免有偏见的结果。</p><ul><li>预测：Landon 获得 57%；罗斯福获得 43%</li><li>实际结果：Landon 获得 38%；罗斯福 62%</li></ul><p>:::</p><ul><li>样本不代表总体，导致样本偏差</li><li>用最简单的方法收集数据称为便利抽样</li></ul><p>直方图是可视化选择偏差的一个好方法。注意到在使用随机抽样时，分布的形状是如何更紧密地结合在一起的。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
coffee_ratings<span class="token punctuation">[</span><span class="token string">&quot;total_cup_points&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>hist<span class="token punctuation">(</span>bins<span class="token operator">=</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">59</span><span class="token punctuation">,</span> <span class="token number">93</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>

coffee_ratings_first10<span class="token punctuation">[</span><span class="token string">&quot;total_cup_points&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>hist<span class="token punctuation">(</span>bins<span class="token operator">=</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">59</span><span class="token punctuation">,</span> <span class="token number">93</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><img src="https://pic.hanjiaming.com.cn/2022/06/29/32536b1e645e7.png" alt="1656511847303.png" style="zoom:50%;"><h2 id="生成随机数" tabindex="-1"><a class="header-anchor" href="#生成随机数" aria-hidden="true">#</a> 生成随机数</h2>`,20),r={id:"np-random-xxx",tabindex:"-1"},d=a("a",{class:"header-anchor",href:"#np-random-xxx","aria-hidden":"true"},"#",-1),m={href:"http://np.random.xxx",target:"_blank",rel:"noopener noreferrer"},k=s(`<p>由计算机生成的随机数通常为伪随机数。</p><ul><li>伪随机数生成既便宜又快速</li><li>从前一个“随机”数计算的下一个“随机”数</li><li>从种子计算的第一个“随机”数</li><li>相同的种子值产生相同的随机数</li></ul><h3 id="随机数生成函数" tabindex="-1"><a class="header-anchor" href="#随机数生成函数" aria-hidden="true">#</a> 随机数生成函数</h3><p>Prepend with numpy.random , such as numpy.random.beta()</p><ul><li>numpy.random.random() 生成随机数</li><li>np.random.uniform(low = 0, high = 5, size = 5000)</li></ul><img src="https://pic.hanjiaming.com.cn/2022/06/29/2af478dfe40cc.png" alt="1656513565026.png" style="zoom:33%;"><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>seed<span class="token punctuation">(</span><span class="token number">20000229</span><span class="token punctuation">)</span>
<span class="token comment"># 以 mean = 2， std = 1.5 随机取样</span>
np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span>loc<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> scale<span class="token operator">=</span><span class="token number">1.5</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>array([-0.59030264, 1.87821258])
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="python-random" tabindex="-1"><a class="header-anchor" href="#python-random" aria-hidden="true">#</a> Python Random</h3><p>使用python 原生 random 对 原生list随机抽样。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Create a list of unique JobRole values</span>
job_roles_pop <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>attrition_pop<span class="token punctuation">[</span><span class="token string">&quot;JobRole&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>unique<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># Randomly sample four JobRole values</span>
job_roles_samp <span class="token operator">=</span> random<span class="token punctuation">.</span>sample<span class="token punctuation">(</span>job_roles_pop<span class="token punctuation">,</span> k <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">)</span>

<span class="token comment"># Print the result</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>job_roles_samp<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[&#39;Research_Director&#39;, &#39;Research_Scientist&#39;, &#39;Human_Resources&#39;, &#39;Manager&#39;]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="系统抽样" tabindex="-1"><a class="header-anchor" href="#系统抽样" aria-hidden="true">#</a> 系统抽样</h2><p>在我们的咖啡评级数据集中，人口由咖啡品种组成，而不是抽奖券或彩票球。为了执行简单的随机抽样，我们随机抽取一些，一次一个。每种咖啡都有与其他咖啡相同的机会被采摘。使用这种技术时，有时我们可能会得到两个在数据集中彼此相邻的咖啡，有时我们可能会得到数据集中的大片区域根本没有选择。另一种抽样方法被称为系统抽样。这种方法以固定的时间间隔对人口进行抽样。在这里，从上到下，从左到右的每一行中，每五杯咖啡都被抽样。</p><p>Systematic sampling</p><img src="https://pic.hanjiaming.com.cn/2022/07/04/92bdc2e34f3cb.png" alt="1656865271371.png" style="zoom:25%;"><h3 id="系统抽样过程" tabindex="-1"><a class="header-anchor" href="#系统抽样过程" aria-hidden="true">#</a> 系统抽样过程</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>sample_size <span class="token operator">=</span> <span class="token number">5</span>
pop_size <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>coffee_ratings<span class="token punctuation">)</span>
interval <span class="token operator">=</span> pop_size <span class="token operator">//</span> sample_size
coffee_ratings<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span>interval<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://pic.hanjiaming.com.cn/2022/07/04/150b33abcadde.png" alt="1656865346717.png" tabindex="0" loading="lazy"><figcaption>1656865346717.png</figcaption></figure><h3 id="系统抽样的问题" tabindex="-1"><a class="header-anchor" href="#系统抽样的问题" aria-hidden="true">#</a> 系统抽样的问题</h3><p>但是，系统抽样存在问题。假设我们对咖啡的余味属性的统计感兴趣。为了检查这一点，首先，我们使用 reset_index 在我们可以绘制的数据框中创建一列索引值。根据索引绘制余味显示了一种模式。前面的行通常比后面的行具有更高的回味分数。这会在我们计算的统计数据中引入偏差。一般来说，只有当这样的图没有模式时，使用系统抽样才是安全的；也就是说，它只是看起来像噪音。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>coffee_ratings_with_id <span class="token operator">=</span> coffee_ratings<span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span><span class="token punctuation">)</span>
coffee_ratings_with_id<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">&quot;index&quot;</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">&quot;aftertaste&quot;</span><span class="token punctuation">,</span> kind<span class="token operator">=</span><span class="token string">&quot;scatter&quot;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><img src="https://pic.hanjiaming.com.cn/2022/07/04/bb34963fb8a0b.png" alt="1656865448582.png" style="zoom:5%;"><p>仅当我们在此扫描图中看不到模式时，系统抽样才是安全的。为确保系统采样安全，我们需要打乱样本</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># frac = 1 = 100%，相当于随机抽取100%的样本，相当于打乱</span>
shuffled <span class="token operator">=</span> coffee_ratings<span class="token punctuation">.</span>sample<span class="token punctuation">(</span>frac<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
shuffled <span class="token operator">=</span> shuffled<span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span>drop<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span><span class="token punctuation">)</span>
shuffled<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">&quot;index&quot;</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">&quot;aftertaste&quot;</span><span class="token punctuation">,</span> kind<span class="token operator">=</span><span class="token string">&quot;scatter&quot;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><img src="https://pic.hanjiaming.com.cn/2022/07/04/edb4ee8702221.png" alt="1656865533187.png" style="zoom:5%;"><p>但，洗行+系统抽样 与 简单随机抽样 相同。</p><h2 id="分层抽样" tabindex="-1"><a class="header-anchor" href="#分层抽样" aria-hidden="true">#</a> 分层抽样</h2><p>分层抽样「Stratified sampling」可以</p><ul><li>按各种类占总体比例取样</li><li>对每种类取同样个数</li><li>自定义权重</li></ul><p>如果您关心子组，分层抽样很有用。否则，简单随机抽样更为合适。</p><img src="https://pic.hanjiaming.com.cn/2022/07/04/0fc83d278fbe6.png" alt="1656866688095.png" style="zoom:50%;"><div class="hint-container tip"><p class="hint-container-title">用途</p><ul><li>政治投票</li><li>计算加权平均数</li></ul></div><h3 id="按比例抽样" tabindex="-1"><a class="header-anchor" href="#按比例抽样" aria-hidden="true">#</a> 按比例抽样</h3><p>其实即使不分层，抽样结果依旧是接近按按各种类占总体比例取样。不过，为了让结果完全按照比例取样，需要</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Proportion of employees by Education level</span>
education_counts_pop <span class="token operator">=</span> attrition_pop<span class="token punctuation">[</span><span class="token string">&#39;Education&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value_counts<span class="token punctuation">(</span>normalize<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

<span class="token comment"># Print education_counts_pop</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>education_counts_pop<span class="token punctuation">)</span>

<span class="token comment"># Proportional stratified sampling for 40% of each Education group</span>
attrition_strat <span class="token operator">=</span> attrition_pop<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;Education&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>sample<span class="token punctuation">(</span>frac<span class="token operator">=</span><span class="token number">0.4</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">2022</span><span class="token punctuation">)</span>

<span class="token comment"># Calculate the Education level proportions from attrition_strat</span>
education_counts_strat <span class="token operator">=</span> attrition_strat<span class="token punctuation">[</span><span class="token string">&#39;Education&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value_counts<span class="token punctuation">(</span>normalize<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

<span class="token comment"># Print education_counts_strat</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>education_counts_strat<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;script.py&gt; output:
    Bachelor         0.389
    Master           0.271
    College          0.192
    Below_College    0.116
    Doctor           0.033
    Name: Education, dtype: float64
    Bachelor         0.389
    Master           0.270
    College          0.192
    Below_College    0.116
    Doctor           0.032
    Name: Education, dtype: float64
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="每种取同样个数" tabindex="-1"><a class="header-anchor" href="#每种取同样个数" aria-hidden="true">#</a> 每种取同样个数</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Get 30 employees from each Education group</span>
attrition_eq <span class="token operator">=</span> attrition_pop<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;Education&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>sample<span class="token punctuation">(</span>n<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">2022</span><span class="token punctuation">)</span>      

<span class="token comment"># Get the proportions from attrition_eq</span>
education_counts_eq <span class="token operator">=</span> attrition_eq<span class="token punctuation">[</span><span class="token string">&quot;Education&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value_counts<span class="token punctuation">(</span>normalize <span class="token operator">=</span> <span class="token boolean">True</span><span class="token punctuation">)</span>

<span class="token comment"># Print the results</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>education_counts_eq<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;script.py&gt; output:
    Below_College    0.2
    College          0.2
    Bachelor         0.2
    Master           0.2
    Doctor           0.2
    Name: Education, dtype: float64
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="自定义权重" tabindex="-1"><a class="header-anchor" href="#自定义权重" aria-hidden="true">#</a> 自定义权重</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Plot YearsAtCompany from attrition_pop as a histogram</span>
attrition_pop<span class="token punctuation">[</span><span class="token string">&#39;YearsAtCompany&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>hist<span class="token punctuation">(</span>bins<span class="token operator">=</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">41</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># Sample 400 employees weighted by YearsAtCompany</span>
attrition_weight <span class="token operator">=</span> attrition_pop<span class="token punctuation">.</span>sample<span class="token punctuation">(</span>n<span class="token operator">=</span><span class="token number">400</span><span class="token punctuation">,</span> weights<span class="token operator">=</span><span class="token string">&quot;YearsAtCompany&quot;</span><span class="token punctuation">)</span>

<span class="token comment"># Plot YearsAtCompany from attrition_weight as a histogram</span>
attrition_weight<span class="token punctuation">.</span>hist<span class="token punctuation">(</span><span class="token string">&quot;YearsAtCompany&quot;</span><span class="token punctuation">,</span>bins <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">41</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://pic.hanjiaming.com.cn/2022/07/04/7035163dce100.png" alt="1656870365432.png" style="zoom:25%;"><img src="https://pic.hanjiaming.com.cn/2022/07/04/6497a3b0ddaf4.png" alt="1656870383990.png" style="zoom:25%;"></p><h2 id="分组抽样" tabindex="-1"><a class="header-anchor" href="#分组抽样" aria-hidden="true">#</a> 分组抽样</h2><p>分层抽样的一个问题是，我们需要收集每一个子群体的数据。在收集数据很昂贵的情况下，例如，当我们必须亲自到某个地方去收集数据时，就会使我们的分析费用过高。有一种更便宜的替代方法，叫做分组抽样。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Create a list of unique JobRole values</span>
job_roles_pop <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>attrition_pop<span class="token punctuation">[</span><span class="token string">&#39;JobRole&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>unique<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># Randomly sample four JobRole values</span>
job_roles_samp <span class="token operator">=</span> random<span class="token punctuation">.</span>sample<span class="token punctuation">(</span>job_roles_pop<span class="token punctuation">,</span> k<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span>

<span class="token comment"># Filter for rows where JobRole is in job_roles_samp</span>
jobrole_condition <span class="token operator">=</span> attrition_pop<span class="token punctuation">[</span><span class="token string">&#39;JobRole&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>isin<span class="token punctuation">(</span>job_roles_samp<span class="token punctuation">)</span>
attrition_filtered <span class="token operator">=</span> attrition_pop<span class="token punctuation">[</span>jobrole_condition<span class="token punctuation">]</span>

<span class="token comment"># Remove categories with no rows</span>
attrition_filtered<span class="token punctuation">[</span><span class="token string">&#39;JobRole&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> attrition_filtered<span class="token punctuation">[</span><span class="token string">&#39;JobRole&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>cat<span class="token punctuation">.</span>remove_unused_categories<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># Randomly sample 10 employees from each sampled job role</span>
attrition_clust <span class="token operator">=</span> attrition_filtered<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;JobRole&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>sample<span class="token punctuation">(</span>n <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">,</span> random_state <span class="token operator">=</span> <span class="token number">2022</span><span class="token punctuation">)</span>

<span class="token comment"># Print the sample</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>attrition_clust<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,46);function v(b,h){const t=p("ExternalLinkIcon");return o(),i("div",null,[u,a("h3",r,[d,n(),a("a",m,[n("np.random.xxx"),c(t)]),n("()")]),k])}const f=e(l,[["render",v],["__file","Sampling.html.vue"]]);export{f as default};
