import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{o as e,c,e as o}from"./app-8c141c2f.js";const s={},r=o('<h1 id="现代模式-use-strict" tabindex="-1"><a class="header-anchor" href="#现代模式-use-strict" aria-hidden="true">#</a> 现代模式 &quot;use strict&quot;</h1><p>长久以来，JavaScript 不断向前发展且并未带来任何兼容性问题。新的特性被加入，旧的功能也没有改变。这种情况一直持续到 2009 年 ECMAScript 5 (ES5) 的出现。ES5 规范增加了新的语言特性并且修改了一些已经存在的特性。</p><p>&quot;use strict&quot;` 可以禁用已经废弃或者不被推荐的功能，这样更加规范和严格。这种严格模式也叫做现代模式。</p><h2 id="use-strict" tabindex="-1"><a class="header-anchor" href="#use-strict" aria-hidden="true">#</a> &quot;use strict&quot;</h2><p>这个指令看上去像一个字符串 <code>&quot;use strict&quot;</code> 或者 <code>&#39;use strict&#39;</code>。当它处于脚本文件的顶部时，则整个脚本文件都将以“现代”模式进行工作。</p><p><code>&quot;use strict&quot;</code> 可以被放在函数体的开头。这样则可以只在该函数中启用严格模式。但通常人们会在整个脚本中启用严格模式。请确保 <code>&quot;use strict&quot;</code> 出现在脚本的最顶部，否则严格模式可能无法启用。</p><p>没有办法取消 <code>use strict</code>&quot; 。一旦进入了严格模式，就没有回头路了。</p><h2 id="浏览器控制台" tabindex="-1"><a class="header-anchor" href="#浏览器控制台" aria-hidden="true">#</a> 浏览器控制台</h2><p>当你使用 <a href="info:devtools">开发者控制台</a> 运行代码时，请注意它默认是不启动 <code>use strict</code> 的。有时，当 <code>use strict</code> 会对代码产生一些影响时，你会得到错误的结果。</p><p>那么，怎么在控制台中启用 <code>use strict</code> 呢？首先，你可以尝试搭配使用 <code>key:Shift+Enter</code> 按键去输入多行代码，然后将 <code>use strict</code> 放在代码最顶部。它在大部分浏览器中都有效，像 Firefox 和 Chrome。</p><h2 id="我们应该使用-use-strict-吗" tabindex="-1"><a class="header-anchor" href="#我们应该使用-use-strict-吗" aria-hidden="true">#</a> 我们应该使用 &quot;use strict&quot; 吗？</h2><p><strong>因此，目前我们欢迎将 <code>&quot;use strict&quot;;</code> 写在脚本的顶部。稍后，当你的代码全都写在了 class 和 module 中时，你则可以将 <code>&quot;use strict&quot;;</code> 这行代码省略掉。</strong></p><p>本教程的所有例子都默认采用严格模式，除非特别指定（非常少）。</p>',13),d=[r];function i(u,a){return e(),c("div",null,d)}const p=t(s,[["render",i],["__file","strict.html.vue"]]);export{p as default};
