const e=JSON.parse('{"key":"v-0e394e0e","path":"/note/cs/co/Introduction-To-DigitalLogic/Combinational-Logic4.html","title":"Combinational Logic 4","lang":"zh-CN","frontmatter":{"article":false,"date":"2021-05-01T00:00:00.000Z","description":"Combinational Logic 4 Finite State Machine (FSM) Example：3-bit Synchronous Counter The counter will count through 000, 001, … , 111, then get back to 000 Each count (e.g., 001) is a state of the counter (machine) The number of possible states is finite","head":[["meta",{"property":"og:url","content":"https://guomaimang.github.io/note/cs/co/Introduction-To-DigitalLogic/Combinational-Logic4.html"}],["meta",{"property":"og:site_name","content":"HAN Jiaming"}],["meta",{"property":"og:title","content":"Combinational Logic 4"}],["meta",{"property":"og:description","content":"Combinational Logic 4 Finite State Machine (FSM) Example：3-bit Synchronous Counter The counter will count through 000, 001, … , 111, then get back to 000 Each count (e.g., 001) is a state of the counter (machine) The number of possible states is finite"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-15T05:33:29.000Z"}],["meta",{"property":"article:author","content":"Hirsun (HAN Jiaming)"}],["meta",{"property":"article:published_time","content":"2021-05-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-15T05:33:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"Combinational Logic 4\\",\\"description\\":\\"Combinational Logic 4 Finite State Machine (FSM) Example：3-bit Synchronous Counter The counter will count through 000, 001, … , 111, then get back to 000 Each count (e.g., 001) is a state of the counter (machine) The number of possible states is finite\\"}"]]},"headers":[{"level":2,"title":"Finite State Machine (FSM)","slug":"finite-state-machine-fsm","link":"#finite-state-machine-fsm","children":[{"level":3,"title":"Example：3-bit Synchronous Counter","slug":"example-3-bit-synchronous-counter","link":"#example-3-bit-synchronous-counter","children":[]},{"level":3,"title":"Concept","slug":"concept","link":"#concept","children":[]},{"level":3,"title":"Formal Model of FSM","slug":"formal-model-of-fsm","link":"#formal-model-of-fsm","children":[]},{"level":3,"title":"Represent","slug":"represent","link":"#represent","children":[]},{"level":3,"title":"Analytical Task","slug":"analytical-task","link":"#analytical-task","children":[]}]},{"level":2,"title":"Design of sequential circuits","slug":"design-of-sequential-circuits","link":"#design-of-sequential-circuits","children":[{"level":3,"title":"A Recap of Terminologies on Flip-Flops","slug":"a-recap-of-terminologies-on-flip-flops","link":"#a-recap-of-terminologies-on-flip-flops","children":[]},{"level":3,"title":"Common Flip-Flop Types","slug":"common-flip-flop-types","link":"#common-flip-flop-types","children":[]},{"level":3,"title":"Think","slug":"think","link":"#think","children":[]},{"level":3,"title":"Summary","slug":"summary","link":"#summary","children":[]}]}],"git":{"createdTime":1726378409000,"updatedTime":1726378409000,"contributors":[{"name":"hanjiaming","email":"47519540+guomaimang@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":23.96,"words":2396},"filePathRelative":"note/cs/co/Introduction-To-DigitalLogic/Combinational-Logic4.md","localizedDate":"2021年5月1日","excerpt":"<h1> Combinational Logic 4</h1>\\n<h2> Finite State Machine (FSM)</h2>\\n<h3> Example：3-bit Synchronous Counter</h3>\\n<ul>\\n<li>The counter will count through 000, 001, … , 111, then get back to 000</li>\\n<li>Each count (e.g., 001) is a <strong>state</strong> of the counter (machine)</li>\\n<li>The number of possible states is <strong>finite</strong></li>\\n</ul>","autoDesc":true}');export{e as data};
