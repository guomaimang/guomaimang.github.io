const e=JSON.parse('{"key":"v-1a99f6f9","path":"/note/it/pm/se/Software-Evolution.html","title":"Software Evolution","lang":"zh-CN","frontmatter":{"article":false,"date":"2022-12-13T00:00:00.000Z","order":9,"headerDepth":1,"description":"Software Evolution 理解软件系统必须适应和发展，如果它们要保持有用的话，软件变化和发展应该被视为软件工程的一个组成部分。 了解不同类型的软件维护，以及影响对遗留软件系统进行修改的成本的因素。 了解版本控制系统应该提供的基本功能，以及如何在集中式和分布式系统中实现这些功能。 了解什么是遗留系统，以及为什么这些系统对企业很重要。 了解如何对遗留系统进行评估，以决定它们是否应该被废弃、维护、重新设计或替换。","head":[["meta",{"property":"og:url","content":"https://guomaimang.github.io/note/it/pm/se/Software-Evolution.html"}],["meta",{"property":"og:site_name","content":"HAN Jiaming"}],["meta",{"property":"og:title","content":"Software Evolution"}],["meta",{"property":"og:description","content":"Software Evolution 理解软件系统必须适应和发展，如果它们要保持有用的话，软件变化和发展应该被视为软件工程的一个组成部分。 了解不同类型的软件维护，以及影响对遗留软件系统进行修改的成本的因素。 了解版本控制系统应该提供的基本功能，以及如何在集中式和分布式系统中实现这些功能。 了解什么是遗留系统，以及为什么这些系统对企业很重要。 了解如何对遗留系统进行评估，以决定它们是否应该被废弃、维护、重新设计或替换。"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-15T05:33:29.000Z"}],["meta",{"property":"article:author","content":"Hirsun (HAN Jiaming)"}],["meta",{"property":"article:published_time","content":"2022-12-13T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-15T05:33:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"Software Evolution\\",\\"description\\":\\"Software Evolution 理解软件系统必须适应和发展，如果它们要保持有用的话，软件变化和发展应该被视为软件工程的一个组成部分。 了解不同类型的软件维护，以及影响对遗留软件系统进行修改的成本的因素。 了解版本控制系统应该提供的基本功能，以及如何在集中式和分布式系统中实现这些功能。 了解什么是遗留系统，以及为什么这些系统对企业很重要。 了解如何对遗留系统进行评估，以决定它们是否应该被废弃、维护、重新设计或替换。\\"}"]]},"headers":[{"level":2,"title":"Software Change and Evolution","slug":"software-change-and-evolution","link":"#software-change-and-evolution","children":[]},{"level":2,"title":"Evolution and Servicing","slug":"evolution-and-servicing","link":"#evolution-and-servicing","children":[]},{"level":2,"title":"Evolution Processes","slug":"evolution-processes","link":"#evolution-processes","children":[]},{"level":2,"title":"A General Model","slug":"a-general-model","link":"#a-general-model","children":[]},{"level":2,"title":"Urgent Change Requests","slug":"urgent-change-requests","link":"#urgent-change-requests","children":[]},{"level":2,"title":"Agile Methods and Evolution","slug":"agile-methods-and-evolution","link":"#agile-methods-and-evolution","children":[]},{"level":2,"title":"Software Maintenance","slug":"software-maintenance","link":"#software-maintenance","children":[{"level":3,"title":"Maintenance Costs","slug":"maintenance-costs","link":"#maintenance-costs","children":[]},{"level":3,"title":"Maintenance Prediction","slug":"maintenance-prediction","link":"#maintenance-prediction","children":[]}]},{"level":2,"title":"Software Reengineering","slug":"software-reengineering","link":"#software-reengineering","children":[]},{"level":2,"title":"Refactoring","slug":"refactoring","link":"#refactoring","children":[]},{"level":2,"title":"Version Management","slug":"version-management","link":"#version-management","children":[{"level":3,"title":"Codelines and Baselines","slug":"codelines-and-baselines","link":"#codelines-and-baselines","children":[]},{"level":3,"title":"Version Control Systems","slug":"version-control-systems","link":"#version-control-systems","children":[]},{"level":3,"title":"Project Repository and Private Workspace","slug":"project-repository-and-private-workspace","link":"#project-repository-and-private-workspace","children":[]},{"level":3,"title":"Benefits of Distributed Version Control","slug":"benefits-of-distributed-version-control","link":"#benefits-of-distributed-version-control","children":[]}]},{"level":2,"title":"Storage Management","slug":"storage-management","link":"#storage-management","children":[]},{"level":2,"title":"Legacy Systems","slug":"legacy-systems","link":"#legacy-systems","children":[]},{"level":2,"title":"Summary","slug":"summary","link":"#summary","children":[]}],"git":{"createdTime":1726378409000,"updatedTime":1726378409000,"contributors":[{"name":"hanjiaming","email":"47519540+guomaimang@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":27.59,"words":2759},"filePathRelative":"note/it/pm/se/Software-Evolution.md","localizedDate":"2022年12月13日","excerpt":"<h1> Software Evolution</h1>\\n<ol>\\n<li>理解软件系统必须适应和发展，如果它们要保持有用的话，软件变化和发展应该被视为软件工程的一个组成部分。</li>\\n<li>了解不同类型的软件维护，以及影响对<strong>遗留软件系统</strong>进行修改的成本的因素。</li>\\n<li>了解<strong>版本控制系统</strong>应该提供的基本功能，以及如何在集中式和分布式系统中实现这些功能。</li>\\n<li>了解什么是<strong>遗留系统</strong>，以及为什么这些系统对企业很重要。</li>\\n<li>了解如何对遗留系统进行评估，以决定它们是否应该被废弃、维护、重新设计或替换。</li>\\n</ol>","autoDesc":true}');export{e as data};
