const e=JSON.parse('{"key":"v-6b3e3dc8","path":"/note/it/pm/se/Agile-Software-Development.html","title":"Agile Software Development","lang":"zh-CN","frontmatter":{"article":false,"date":"2022-12-14T00:00:00.000Z","order":3,"headerDepth":1,"description":"Agile Software Development 理解敏捷软件开发方法的原理，敏捷宣言，以及敏捷开发和计划驱动开发之间的区别。 了解重要的敏捷开发实践，如用户故事、重构、结对编程和测试优先的开发。 了解敏捷项目管理的 Scrum 方法 了解在开发大型软件系统时，扩展敏捷开发方法以及将敏捷方法与计划驱动的方法相结合的问题。 Rapid Software Development 快速开发和交付现在往往是对软件系统最重要的要求。 企业在快速变化的环境中运营，实际上不可能产生一套完整的稳定的软件需求 软件必须快速发展以反映不断变化的业务需求。","head":[["meta",{"property":"og:url","content":"https://guomaimang.github.io/note/it/pm/se/Agile-Software-Development.html"}],["meta",{"property":"og:site_name","content":"Hirsun HAN (Jiaming)"}],["meta",{"property":"og:title","content":"Agile Software Development"}],["meta",{"property":"og:description","content":"Agile Software Development 理解敏捷软件开发方法的原理，敏捷宣言，以及敏捷开发和计划驱动开发之间的区别。 了解重要的敏捷开发实践，如用户故事、重构、结对编程和测试优先的开发。 了解敏捷项目管理的 Scrum 方法 了解在开发大型软件系统时，扩展敏捷开发方法以及将敏捷方法与计划驱动的方法相结合的问题。 Rapid Software Development 快速开发和交付现在往往是对软件系统最重要的要求。 企业在快速变化的环境中运营，实际上不可能产生一套完整的稳定的软件需求 软件必须快速发展以反映不断变化的业务需求。"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-15T05:33:29.000Z"}],["meta",{"property":"article:author","content":"Hirsun (HAN Jiaming)"}],["meta",{"property":"article:published_time","content":"2022-12-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-15T05:33:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"Agile Software Development\\",\\"description\\":\\"Agile Software Development 理解敏捷软件开发方法的原理，敏捷宣言，以及敏捷开发和计划驱动开发之间的区别。 了解重要的敏捷开发实践，如用户故事、重构、结对编程和测试优先的开发。 了解敏捷项目管理的 Scrum 方法 了解在开发大型软件系统时，扩展敏捷开发方法以及将敏捷方法与计划驱动的方法相结合的问题。 Rapid Software Development 快速开发和交付现在往往是对软件系统最重要的要求。 企业在快速变化的环境中运营，实际上不可能产生一套完整的稳定的软件需求 软件必须快速发展以反映不断变化的业务需求。\\"}"]]},"headers":[{"level":2,"title":"Rapid Software Development","slug":"rapid-software-development","link":"#rapid-software-development","children":[]},{"level":2,"title":"Common Characteristics","slug":"common-characteristics","link":"#common-characteristics","children":[]},{"level":2,"title":"Plan-driven VS Agile","slug":"plan-driven-vs-agile","link":"#plan-driven-vs-agile","children":[]},{"level":2,"title":"Agile Methods","slug":"agile-methods","link":"#agile-methods","children":[]},{"level":2,"title":"Agile Principle","slug":"agile-principle","link":"#agile-principle","children":[]},{"level":2,"title":"Applicability","slug":"applicability","link":"#applicability","children":[]},{"level":2,"title":"Extreme Programming (XP)","slug":"extreme-programming-xp","link":"#extreme-programming-xp","children":[{"level":3,"title":"XP  Release Cycle","slug":"xp-release-cycle","link":"#xp-release-cycle","children":[]},{"level":3,"title":"XP Principles & Practices","slug":"xp-principles-practices","link":"#xp-principles-practices","children":[]},{"level":3,"title":"支持XP实践中的敏捷原则","slug":"支持xp实践中的敏捷原则","link":"#支持xp实践中的敏捷原则","children":[]},{"level":3,"title":"Key Practices","slug":"key-practices","link":"#key-practices","children":[]},{"level":3,"title":"Testing in XP","slug":"testing-in-xp","link":"#testing-in-xp","children":[]}]},{"level":2,"title":"User Stories for Requirements","slug":"user-stories-for-requirements","link":"#user-stories-for-requirements","children":[]},{"level":2,"title":"Test-Driven Development","slug":"test-driven-development","link":"#test-driven-development","children":[{"level":3,"title":"Customer Involvement","slug":"customer-involvement","link":"#customer-involvement","children":[]},{"level":3,"title":"Problems with Test-First Development","slug":"problems-with-test-first-development","link":"#problems-with-test-first-development","children":[]}]},{"level":2,"title":"Pair Programming","slug":"pair-programming","link":"#pair-programming","children":[]},{"level":2,"title":"Agile Project Management","slug":"agile-project-management","link":"#agile-project-management","children":[]},{"level":2,"title":"Scrum","slug":"scrum","link":"#scrum","children":[{"level":3,"title":"3 Stages","slug":"_3-stages","link":"#_3-stages","children":[]},{"level":3,"title":"Sprint Cycle","slug":"sprint-cycle","link":"#sprint-cycle","children":[]},{"level":3,"title":"Teamwork in Scrum","slug":"teamwork-in-scrum","link":"#teamwork-in-scrum","children":[]}]},{"level":2,"title":"Scrum Benefits","slug":"scrum-benefits","link":"#scrum-benefits","children":[]}],"git":{"createdTime":1726378409000,"updatedTime":1726378409000,"contributors":[{"name":"hanjiaming","email":"47519540+guomaimang@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":26.84,"words":2684},"filePathRelative":"note/it/pm/se/Agile-Software-Development.md","localizedDate":"2022年12月14日","excerpt":"<h1> Agile Software Development</h1>\\n<ol>\\n<li>理解敏捷软件开发方法的原理，敏捷宣言，以及敏捷开发和计划驱动开发之间的区别。</li>\\n<li>了解重要的敏捷开发实践，如用户故事、重构、结对编程和测试优先的开发。</li>\\n<li>了解敏捷项目管理的 Scrum 方法</li>\\n<li>了解在开发大型软件系统时，扩展敏捷开发方法以及将敏捷方法与计划驱动的方法相结合的问题。</li>\\n</ol>\\n<h2> Rapid Software Development</h2>\\n<p>快速开发和交付现在往往是对软件系统最重要的要求。</p>\\n<ul>\\n<li>企业在快速变化的环境中运营，实际上不可能产生一套完整的稳定的软件需求</li>\\n<li>软件必须快速发展以反映不断变化的业务需求。</li>\\n</ul>","autoDesc":true}');export{e as data};
