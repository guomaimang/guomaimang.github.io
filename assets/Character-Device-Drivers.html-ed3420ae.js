const e=JSON.parse('{"key":"v-76845086","path":"/note/cs/os/system-programming/Character-Device-Drivers.html","title":"Character Device Driver","lang":"zh-CN","frontmatter":{"article":false,"date":"2022-10-26T00:00:00.000Z","order":7,"headerDepth":2,"description":"Character Device Driver 在Unix中，有两个通用接口「 generic interfaces」与字符设备驱动开发有关。 用户程序：设备被视为特殊文件，用户只能通过文件操作系统调用（如打开、关闭、读、写等）访问设备，就像访问普通文件一样。 内核：为所有设备驱动程序提供通用接口和内核例程「generic interface and kernel routines」，以实现功能，并将功能注册到内核数据结构（如char/block设备驱动程序表）。 Interface for User Programs","head":[["meta",{"property":"og:url","content":"https://guomaimang.github.io/note/cs/os/system-programming/Character-Device-Drivers.html"}],["meta",{"property":"og:site_name","content":"Hirsun HAN (Jiaming) | 韩佳明"}],["meta",{"property":"og:title","content":"Character Device Driver"}],["meta",{"property":"og:description","content":"Character Device Driver 在Unix中，有两个通用接口「 generic interfaces」与字符设备驱动开发有关。 用户程序：设备被视为特殊文件，用户只能通过文件操作系统调用（如打开、关闭、读、写等）访问设备，就像访问普通文件一样。 内核：为所有设备驱动程序提供通用接口和内核例程「generic interface and kernel routines」，以实现功能，并将功能注册到内核数据结构（如char/block设备驱动程序表）。 Interface for User Programs"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-15T05:33:29.000Z"}],["meta",{"property":"article:author","content":"Hirsun (HAN Jiaming)"}],["meta",{"property":"article:published_time","content":"2022-10-26T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-15T05:33:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"Character Device Driver\\",\\"description\\":\\"Character Device Driver 在Unix中，有两个通用接口「 generic interfaces」与字符设备驱动开发有关。 用户程序：设备被视为特殊文件，用户只能通过文件操作系统调用（如打开、关闭、读、写等）访问设备，就像访问普通文件一样。 内核：为所有设备驱动程序提供通用接口和内核例程「generic interface and kernel routines」，以实现功能，并将功能注册到内核数据结构（如char/block设备驱动程序表）。 Interface for User Programs\\"}"]]},"headers":[{"level":2,"title":"Interface for User Programs","slug":"interface-for-user-programs","link":"#interface-for-user-programs","children":[]},{"level":2,"title":"设备驱动开发（内核）","slug":"设备驱动开发-内核","link":"#设备驱动开发-内核","children":[]},{"level":2,"title":"Char设备驱动的通用接口","slug":"char设备驱动的通用接口","link":"#char设备驱动的通用接口","children":[]},{"level":2,"title":"\\"Hello World\\"","slug":"hello-world","link":"#hello-world","children":[]},{"level":2,"title":"Kernel/User Memory Space","slug":"kernel-user-memory-space","link":"#kernel-user-memory-space","children":[]},{"level":2,"title":"Register/Unregister","slug":"register-unregister","link":"#register-unregister","children":[]},{"level":2,"title":"Compile and Load/Unload","slug":"compile-and-load-unload","link":"#compile-and-load-unload","children":[]},{"level":2,"title":"Test","slug":"test","link":"#test","children":[]},{"level":2,"title":"Summary","slug":"summary","link":"#summary","children":[]}],"git":{"createdTime":1726378409000,"updatedTime":1726378409000,"contributors":[{"name":"hanjiaming","email":"47519540+guomaimang@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":11.02,"words":1102},"filePathRelative":"note/cs/os/system-programming/Character-Device-Drivers.md","localizedDate":"2022年10月26日","excerpt":"<h1> Character Device Driver</h1>\\n<p>在Unix中，有两个通用接口「 generic interfaces」与字符设备驱动开发有关。</p>\\n<p>用户程序：设备被视为特殊文件，用户只能通过文件操作系统调用（如打开、关闭、读、写等）访问设备，就像访问普通文件一样。</p>\\n<p>内核：为所有设备驱动程序提供通用接口和内核例程「generic interface and kernel routines」，以实现功能，并将功能注册到内核数据结构（如char/block设备驱动程序表）。</p>\\n<h2> Interface for User Programs</h2>","autoDesc":true}');export{e as data};
