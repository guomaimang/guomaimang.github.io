const e=JSON.parse('{"key":"v-d020edc4","path":"/note/it/arch/mysql-vertical-table.html","title":"数据的垂直分表","lang":"zh-CN","frontmatter":{"article":false,"date":"2024-12-23T00:00:00.000Z","index":true,"order":2,"headerDepth":1,"category":["tech"],"description":"数据的垂直分表 垂直分表的出现背景 银行工作经验：曾在银行工作，核心业务表通常有上百个字段，当时认为这是习以为常的事情。 现状反思：现在认为当时的做法存在问题，在大厂应用中必须进行垂直分表，否则系统处理将成为灾难。 水平分表 vs 垂直分表 水平分表： 以行为单位对数据进行切分。 分片算法：范围法、哈希法。 解决数据量大的存储问题。 表结构相同，数据存储在不同数据库的不同表中。","head":[["meta",{"property":"og:url","content":"https://guomaimang.github.io/note/it/arch/mysql-vertical-table.html"}],["meta",{"property":"og:site_name","content":"Hirsun HAN (Jiaming)"}],["meta",{"property":"og:title","content":"数据的垂直分表"}],["meta",{"property":"og:description","content":"数据的垂直分表 垂直分表的出现背景 银行工作经验：曾在银行工作，核心业务表通常有上百个字段，当时认为这是习以为常的事情。 现状反思：现在认为当时的做法存在问题，在大厂应用中必须进行垂直分表，否则系统处理将成为灾难。 水平分表 vs 垂直分表 水平分表： 以行为单位对数据进行切分。 分片算法：范围法、哈希法。 解决数据量大的存储问题。 表结构相同，数据存储在不同数据库的不同表中。"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-22T20:15:45.000Z"}],["meta",{"property":"article:author","content":"Hirsun (HAN Jiaming)"}],["meta",{"property":"article:published_time","content":"2024-12-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-22T20:15:45.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"数据的垂直分表\\",\\"description\\":\\"数据的垂直分表 垂直分表的出现背景 银行工作经验：曾在银行工作，核心业务表通常有上百个字段，当时认为这是习以为常的事情。 现状反思：现在认为当时的做法存在问题，在大厂应用中必须进行垂直分表，否则系统处理将成为灾难。 水平分表 vs 垂直分表 水平分表： 以行为单位对数据进行切分。 分片算法：范围法、哈希法。 解决数据量大的存储问题。 表结构相同，数据存储在不同数据库的不同表中。\\"}"]]},"headers":[{"level":2,"title":"垂直分表的出现背景","slug":"垂直分表的出现背景","link":"#垂直分表的出现背景","children":[]},{"level":2,"title":"水平分表 vs 垂直分表","slug":"水平分表-vs-垂直分表","link":"#水平分表-vs-垂直分表","children":[]},{"level":2,"title":"MySQL InnoDB 存储引擎机制","slug":"mysql-innodb-存储引擎机制","link":"#mysql-innodb-存储引擎机制","children":[]},{"level":2,"title":"垂直分表的实际案例","slug":"垂直分表的实际案例","link":"#垂直分表的实际案例","children":[]},{"level":2,"title":"垂直分表的依据","slug":"垂直分表的依据","link":"#垂直分表的依据","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1734898545000,"updatedTime":1734898545000,"contributors":[{"name":"hanjiaming","email":"47519540+guomaimang@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":8.43,"words":843},"filePathRelative":"note/it/arch/mysql-vertical-table.md","localizedDate":"2024年12月23日","excerpt":"<h1> 数据的垂直分表</h1>\\n<h2> 垂直分表的出现背景</h2>\\n<ul>\\n<li><strong>银行工作经验</strong>：曾在银行工作，核心业务表通常有上百个字段，当时认为这是习以为常的事情。</li>\\n<li><strong>现状反思</strong>：现在认为当时的做法存在问题，在大厂应用中必须进行垂直分表，否则系统处理将成为灾难。</li>\\n</ul>\\n<h2> 水平分表 vs 垂直分表</h2>\\n<p><strong>水平分表</strong>：</p>\\n<ul>\\n<li>以行为单位对数据进行切分。</li>\\n<li>分片算法：范围法、哈希法。</li>\\n<li>解决数据量大的存储问题。</li>\\n<li>表结构相同，数据存储在不同数据库的不同表中。</li>\\n</ul>","autoDesc":true}');export{e as data};
