import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as l,a as n,b as s,d as t,e as p}from"./app-62cd3f25.js";const u={},i=p(`<h1 id="逐字节分析" tabindex="-1"><a class="header-anchor" href="#逐字节分析" aria-hidden="true">#</a> 逐字节分析</h1><p>Java 使用 UCS2 big-endian</p><h2 id="案例" tabindex="-1"><a class="header-anchor" href="#案例" aria-hidden="true">#</a> 案例</h2><p>运行以下Java 代码后将出现 <code>test1.bin</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestDataOutputStream1</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token keyword">var</span> out <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataOutputStream</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BufferedOutputStream</span><span class="token punctuation">(</span>
          <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span><span class="token string">&quot;test1.bin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      out<span class="token punctuation">.</span><span class="token function">writeByte</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span> <span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      out<span class="token punctuation">.</span><span class="token function">writeShort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span> <span class="token number">1_234</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      out<span class="token punctuation">.</span><span class="token function">writeInt</span><span class="token punctuation">(</span><span class="token number">1_234_567</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      out<span class="token punctuation">.</span><span class="token function">writeLong</span><span class="token punctuation">(</span><span class="token number">1_234_567_890_123_456L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      out<span class="token punctuation">.</span><span class="token function">writeFloat</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span> <span class="token class-name">Math<span class="token punctuation">.</span>E</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      out<span class="token punctuation">.</span><span class="token function">writeDouble</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      out<span class="token punctuation">.</span><span class="token function">writeBoolean</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      out<span class="token punctuation">.</span><span class="token function">writeChar</span><span class="token punctuation">(</span><span class="token char">&#39;€&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p><code>out.writeInt(1_234_567);</code> 这里面包括下划线是没有问题的，只是便于分割。</p><p>Java 7的一个特性是数字文字中的下划线。可以在任何数字文字的数字之间放置下划线，如：<code>int</code>，<code>byte</code>，<code>short</code>，<code>float</code>，<code>long</code>，<code>double</code>。在数字文字中使用下划线将它们分成组以获得更好的可读性。</p></div><p>使用 UltraEdit 打开文件，使用16进制预览</p><img src="https://pic.hanjiaming.com.cn/2022/05/30/05e21212f2a2b.png" alt="1653910510812.png" style="zoom:50%;">`,8),k=p("<li><code>7b</code> = 123 直接进制转换就可得到，Byte 1字节</li><li><code>04 d2</code> = 1,234 直接进制转换就可得到，Short 2字节</li><li><code>00 12 d6 87</code> = 1,234,567 直接进制转换就可得到，Float 4字节</li><li><code>00 04 62 d5 3c 8a ba c0</code> = 1,234,567,890,123,456 Double 8字节</li><li><code>40 2d f8 54</code> = 2.7182817 IEEE 32位转换法，4字节</li><li><code>40 09 21 fb 54 44 2d 18</code> = 3.141592653589793 IEEE 64位转换法，8字节</li><li><code>01</code> = true，1字节</li>",7),r=n("code",null,"20 ac",-1),d={href:"https://www.compart.com/de/unicode/U+20AC",target:"_blank",rel:"noopener noreferrer"},m=p(`<p>使用下面代码阅读</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestDataInputStream1</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token keyword">var</span> in <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataInputStream</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BufferedInputStream</span><span class="token punctuation">(</span>
          <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span><span class="token string">&quot;test1.bin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span><span class="token function">readByte</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span><span class="token function">readShort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span><span class="token function">readInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span><span class="token function">readLong</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span><span class="token function">readFloat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span><span class="token function">readDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span><span class="token function">readBoolean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span><span class="token function">readChar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>123
1234
1234567
1234567890123456
2.7182817
3.141592653589793
true
€
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="实用工具" tabindex="-1"><a class="header-anchor" href="#实用工具" aria-hidden="true">#</a> 实用工具</h2>`,4),v={href:"https://tooltt.com/floatconverter/",target:"_blank",rel:"noopener noreferrer"},b={href:"https://tool.oschina.net/hexconvert/",target:"_blank",rel:"noopener noreferrer"},h=n("h2",{id:"reference",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#reference","aria-hidden":"true"},"#"),s(" Reference")],-1),f={href:"https://www.happycoders.eu/java/writing-reading-structured-data-dataoutputstream-datainputstream/",target:"_blank",rel:"noopener noreferrer"};function w(y,_){const a=o("ExternalLinkIcon");return c(),l("div",null,[i,n("ul",null,[k,n("li",null,[r,s(" = '€' ("),n("a",d,[s("Unicode U-20AC"),t(a)]),s(") UCS ，char 是两字节")])]),m,n("ul",null,[n("li",null,[s("IEEE 小数在线转换: "),n("a",v,[s("https://tooltt.com/floatconverter/"),t(a)])]),n("li",null,[s("整数进制转换器："),n("a",b,[s("https://tool.oschina.net/hexconvert/"),t(a)])])]),h,n("p",null,[n("a",f,[s("https://www.happycoders.eu/java/writing-reading-structured-data-dataoutputstream-datainputstream/"),t(a)])])])}const x=e(u,[["render",w],["__file","byte-analysis.html.vue"]]);export{x as default};
