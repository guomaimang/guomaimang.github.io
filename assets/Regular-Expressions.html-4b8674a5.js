import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as l,c as n,e as t,a as s,b as a}from"./app-8df2fe0f.js";const i={},r=t(`<h1 id="regular-expressions" tabindex="-1"><a class="header-anchor" href="#regular-expressions" aria-hidden="true">#</a> Regular Expressions</h1><ul><li><strong>The rules for specifying token patterns are called regular expression.</strong>「用于指定标记模式的规则被称为正则表达式。」</li><li>A regular set (regular language) is the set of strings generated by a regular expression over an alphabet.「正则集（正则语言）是 <strong>由一个字母表上的正则表达式生成的字符串集</strong>。」</li></ul><h2 id="alphabet-and-strings" tabindex="-1"><a class="header-anchor" href="#alphabet-and-strings" aria-hidden="true">#</a> Alphabet and Strings</h2><p>一个字母表「<strong>alphabet</strong>」（通常表示为Σ）是一个有限的符号集「finite set of symbols」。</p><ul><li>E.g. {0,1} is the binary digits alphabet;</li><li>E.g. {a, b, ... , z, A, B, ... , Z} is the English letters alphabet.</li></ul><p>在一个字母表 Σ 上的字符串「<strong>string</strong>」 𝑠 是一个从该字母表中抽取的符号的有限序列。</p><ul><li><code>01001</code> is the string over Σ<sub>bin_digits</sub> = <code>{0,1}</code></li><li><code>wxyzabc</code> is the string over Σ<sub>lower_case_letters</sub> = <code>a, b, ... , z </code></li><li>𝜀 denotes the empty string (without any symbol)</li></ul><p>The length of a string 𝑠 is denoted as |𝑠|. E.g. |𝜀| = 0; |101| = 3; |abcdef| = 6.</p><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>𝜀 需要显式的在集合中写出来，以表示它的存在。</p></div><h2 id="kleene-closure-and-language" tabindex="-1"><a class="header-anchor" href="#kleene-closure-and-language" aria-hidden="true">#</a> Kleene Closure and Language</h2><p>字母表 Σ 的 <strong>Kleene closure</strong>，表示为 Σ<sup>*</sup>，是 字母表 Σ上<strong>所有字符串的集合</strong>，包括空字符串 𝜀。</p><ul><li>E.g. given alphabet Σ = {0,1}, then Σ<sup>*</sup> = {𝜀, 0, 1, 00, 01, 10, 11, 000, 001, ... }</li></ul><div class="hint-container warning"><p class="hint-container-title">注意</p><p>集合的元素是不重复的。</p></div><p>在一个字母表 Σ 上的任何字符串集，即 Σ<sup>*</sup> 的任何<strong>子集</strong>，被称为语言「<strong>Language</strong>」。</p><ul><li>E.g. the empty set ∅, {𝜀}, Σ, and Σ<sup>*</sup> are all languages;</li><li>{abc,Def,D,z} is a language over Σ<sub>letters</sub> = {a,b, ... ,z,A,B, ... ,Z}</li></ul><h3 id="operations-on-languages" tabindex="-1"><a class="header-anchor" href="#operations-on-languages" aria-hidden="true">#</a> Operations on languages</h3><p>Language 是一个<strong>集合</strong>，因此所有集合操作都可以应用于 Language。需要注意的是，操作出来的结果都是集合。</p><p>Particularly union「交集」, concatenation「并集」, Kleene closure, and positive closure「即不含 𝜀」.</p><figure><img src="https://pic.hanjiaming.com.cn/2022/11/09/529618f0c47f4.png" alt="1667927831142.png" tabindex="0" loading="lazy"><figcaption>1667927831142.png</figcaption></figure><div class="hint-container tip"><p class="hint-container-title">提示</p><p>LM 是 这种连接，必须是L的元素在前，M的元素在后。</p></div><h3 id="operations-on-languages-precedence" tabindex="-1"><a class="header-anchor" href="#operations-on-languages-precedence" aria-hidden="true">#</a> Operations on Languages: Precedence</h3><p>Kleene closure ≻ concatenation ≻ union</p><p>Examples for operations on languages, Given 𝐿 = {a,b} and 𝑀 = {a,bb}</p><figure><img src="https://pic.hanjiaming.com.cn/2022/11/09/66c9ef3e15daf.png" alt="241b4e311a783.png" tabindex="0" loading="lazy"><figcaption>241b4e311a783.png</figcaption></figure><p>Another example for operations on languages,</p><img src="https://pic.hanjiaming.com.cn/2022/11/09/ba5f8a1a995f7.png" alt="1667929110706.png" style="zoom:33%;"><h2 id="正则表达式" tabindex="-1"><a class="header-anchor" href="#正则表达式" aria-hidden="true">#</a> 正则表达式</h2><p>在字母 Σ 上定义正则表达式的规则：</p><ol><li>空字符串 𝜀 是一个正则表达式，表示语言 {𝜀}</li><li>单个符号 𝑎 ∈ Σ 是表示语言 {𝑎} 的正则表达式</li><li>假设 𝑟 和 𝑠 是表示语言 𝐿（𝑟）和 𝐿（𝑠）的正则表达式，那么 <ul><li>(𝑟) | (𝑠) 是一个正则表达式，表示 𝐿 (𝑟) ∪ 𝐿 (𝑠)</li><li>(𝑟) | (𝑠）是一个正则表达式，表示 𝐿 (𝑟）𝐿(𝑠)</li><li>(𝑟)<sup>*</sup> is a regular expression denoting (𝐿(𝑟))<sup>*</sup></li><li>(𝑟) is a regular expression denoting (𝐿 (𝑟) )</li></ul></li></ol><p>Regular Set (Regular Language): 每个正则表达式 𝑟 都表示一种**语言（集合）**𝐿 (𝑟) ，这被称为正则集（又称正则语言）。</p><p>E.g., given Σ = {a, b}, then a|b denotes the regular set {a, b}.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Example: Identifier in Pascal
Pascal identifier: a string of letters and digits beginning with a letter.

Regular definition:
LETTER → A|B| ... |Z|a|b ...|z
DIGIT → 0|1...|9
ID → LETTER(LETTER | DIGIT)∗
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Example: Unsigned Numbers in Pascal
Unsigned numbers in Pascal are strings such as 5230, 39.37, 6.336E4, or 1.89E-4.

Regular definition:
OPTIONAL_FRAC → .DIGITS|𝜀
OPTIONAL_EXP → (E(+|−|𝜀)DIGITS)|𝜀
NUM → DIGITS OPTIONAL_FRAC OPTIONAL_EXP
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><ol><li>单个字母表示 从集合中抽取1个元素</li><li>可以从老虎机的角度理解 <code>DIGITS OPTIONAL_FRAC OPTIONAL_EXP</code>,就像有三个竖着的码表，转到谁是谁。</li></ol></div><h2 id="符号速记法" tabindex="-1"><a class="header-anchor" href="#符号速记法" aria-hidden="true">#</a> 符号速记法</h2>`,35),m=s("ol",null,[s("li",null,[a("One or more instances: "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msup",null,[s("mi",null,"r"),s("mo",{lspace:"0em",rspace:"0em"},"+")]),s("mo",null,[s("mover",null,[s("mo",null,[s("mo",null,"=")]),s("mtext",null," def ")])]),s("mi",null,"r"),s("msup",null,[s("mi",null,"r"),s("mo",{lspace:"0em",rspace:"0em"},"∗")])]),s("annotation",{encoding:"application/x-tex"},"r^{+} \\stackrel{\\text { def }}{=} r r^{*}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.153em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.7713em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"+")])])])])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},[s("span",{class:"mop op-limits"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.153em"}},[s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",null,[s("span",{class:"mop"},"=")])]),s("span",{style:{top:"-3.5669em","margin-left":"0em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord text mtight"},[s("span",{class:"mord mtight"}," def ")])])])])])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6887em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.6887em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"∗")])])])])])])])])])])])]),s("li",null,[a("Zero or one instance: "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"r"),s("mo",{stretchy:"false"},"?"),s("mo",null,[s("mover",null,[s("mo",null,[s("mo",null,"=")]),s("mtext",null," def ")])]),s("mi",null,"r"),s("mo",null,"∣"),s("mi",null,"ε")]),s("annotation",{encoding:"application/x-tex"},"r ? \\stackrel{\\text { def }}{=} r \\mid \\varepsilon")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.153em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"mclose"},"?"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},[s("span",{class:"mop op-limits"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.153em"}},[s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",null,[s("span",{class:"mop"},"=")])]),s("span",{style:{top:"-3.5669em","margin-left":"0em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord text mtight"},[s("span",{class:"mord mtight"}," def ")])])])])])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"∣"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"ε")])])])]),s("li",null,[a("Character classes: "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mo",{stretchy:"false"},"["),s("mi",null,"a"),s("mo",null,"−"),s("mi",null,"z"),s("mo",{stretchy:"false"},"]"),s("mo",null,[s("mover",null,[s("mo",null,[s("mo",null,"=")]),s("mtext",null," def ")])]),s("mi",null,"a"),s("mi",{mathvariant:"normal"},"∣"),s("mi",null,"b"),s("mi",{mathvariant:"normal"},"∣"),s("mi",null,"c"),s("mi",{mathvariant:"normal"},"∣"),s("mo",null,"…"),s("mi",{mathvariant:"normal"},"∣"),s("mi",null,"z"),s("mo",{separator:"true"},","),s("mo",{stretchy:"false"},"["),s("mn",null,"0"),s("mo",null,"−"),s("mn",null,"9"),s("mo",{stretchy:"false"},"]"),s("mo",null,[s("mover",null,[s("mo",null,[s("mo",null,"=")]),s("mtext",null," def ")])]),s("mn",null,"0"),s("mi",{mathvariant:"normal"},"∣"),s("mn",null,"1"),s("mi",{mathvariant:"normal"},"∣"),s("mo",null,"…"),s("mo",null,"∣"),s("mn",null,"9")]),s("annotation",{encoding:"application/x-tex"},"[a-z] \\stackrel{\\text { def }}{=} a|b| c|\\ldots| z,[0-9] \\stackrel{\\text { def }}{=} 0|1| \\ldots \\mid 9")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.403em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.04398em"}},"z"),s("span",{class:"mclose"},"]"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},[s("span",{class:"mop op-limits"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.153em"}},[s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",null,[s("span",{class:"mop"},"=")])]),s("span",{style:{top:"-3.5669em","margin-left":"0em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord text mtight"},[s("span",{class:"mord mtight"}," def ")])])])])])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mord"},"∣"),s("span",{class:"mord mathnormal"},"b"),s("span",{class:"mord"},"∣"),s("span",{class:"mord mathnormal"},"c"),s("span",{class:"mord"},"∣"),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"minner"},"…"),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},"∣"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.04398em"}},"z"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mopen"},"["),s("span",{class:"mord"},"0"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.403em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},"9"),s("span",{class:"mclose"},"]"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},[s("span",{class:"mop op-limits"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.153em"}},[s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",null,[s("span",{class:"mop"},"=")])]),s("span",{style:{top:"-3.5669em","margin-left":"0em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord text mtight"},[s("span",{class:"mord mtight"}," def ")])])])])])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},"0∣1∣"),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"minner"},"…"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"∣"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"9")])])])])],-1),p=s("figure",null,[s("img",{src:"https://pic.hanjiaming.com.cn/2022/11/09/e780659e5ce27.png",alt:"1667963826783.png",tabindex:"0",loading:"lazy"}),s("figcaption",null,"1667963826783.png")],-1),c=[r,m,p];function o(g,h){return l(),n("div",null,c)}const v=e(i,[["render",o],["__file","Regular-Expressions.html.vue"]]);export{v as default};
