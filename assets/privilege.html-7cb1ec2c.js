import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as i,c as n,e as r}from"./app-c31a6da5.js";const a={},t=r(`<h1 id="privilege-and-own" tabindex="-1"><a class="header-anchor" href="#privilege-and-own" aria-hidden="true">#</a> Privilege and own</h1><p>Linux 系统是一种典型的多用户系统，不同的用户处于不同的地位，拥有不同的权限。</p><p>为了保护系统的安全性，Linux 系统对不同的用户访问同一文件（包括目录文件）的权限做了不同的规定。</p><p>在 Linux 中我们通常使用以下两个命令来修改文件或目录的所属用户与权限：</p><ul><li>chown (change owner) ： 修改所属用户与组。</li><li>chmod (change mode) ： 修改用户的权限。</li></ul><h2 id="查看文件属性" tabindex="-1"><a class="header-anchor" href="#查看文件属性" aria-hidden="true">#</a> 查看文件属性</h2><p>在 Linux 中我们可以使用 <strong>ll</strong> 或者 <strong>ls –l</strong> 命令来显示一个文件的属性以及文件所属的用户和组</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[root@www /]# ls -l
total 64
dr-xr-xr-x   2 root root 4096 Dec 14  2012 bin
dr-xr-xr-x   4 root root 4096 Apr 19  2012 boot
……
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 Linux 中第一个字符代表这个文件是目录、文件或链接文件等等。因为在linux中，一切皆文件。</p><ul><li>当为 <strong>d</strong> 则是目录</li><li>当为 <strong>-</strong> 则是文件；</li><li>若是 <strong>l</strong> 则表示为链接文档(link file)；</li><li>若是 <strong>b</strong> 则表示为装置文件里面的可供储存的接口设备(可随机存取装置)；</li><li>若是 <strong>c</strong> 则表示为装置文件里面的串行端口设备，例如键盘、鼠标(一次性读取装置)。</li></ul><figure><img src="https://pic.hanjiaming.com.cn/2022/04/30/24ba6d944195a.png" alt="1651332787274.png" tabindex="0" loading="lazy"><figcaption>1651332787274.png</figcaption></figure><p>接下来的字符中，以三个为一组，且均为 <strong>rwx</strong> 的三个参数的组合。其中， <strong>r</strong> 代表可读(read)、 <strong>w</strong> 代表可写(write)、 <strong>x</strong> 代表可执行(execute)。 要注意的是，这三个权限的位置不会改变，如果没有权限，就会出现减号 <strong>-</strong> 而已。</p><figure><img src="https://pic.hanjiaming.com.cn/2022/04/30/2ac473b7081ad.png" alt="1651332807274.png" tabindex="0" loading="lazy"><figcaption>1651332807274.png</figcaption></figure><h2 id="linux文件属主和属组" tabindex="-1"><a class="header-anchor" href="#linux文件属主和属组" aria-hidden="true">#</a> Linux文件属主和属组</h2><p>对于文件来说，它都有一个特定的所有者，也就是对该文件具有所有权的用户。</p><p>同时，在Linux系统中，<strong>用户是按组分类的，一个用户属于一个或多个组。</strong></p><p>文件所有者以外的用户又可以分为文件所属组的同组用户和其他用户。</p><p><strong>Linux系统按文件所有者（属主）、文件所有者同组用户（属组）和其他用户来规定了不同的文件访问权限。</strong></p><p>对于 root 用户来说，一般情况下，文件的权限对其不起作用。</p><h2 id="更改文件属性" tabindex="-1"><a class="header-anchor" href="#更改文件属性" aria-hidden="true">#</a> 更改文件属性</h2><h3 id="chgrp-更改文件属组" tabindex="-1"><a class="header-anchor" href="#chgrp-更改文件属组" aria-hidden="true">#</a> chgrp：更改文件属组</h3><p>语法：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>chgrp [-R] 属组名 文件名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数选项</p><ul><li>-R：递归更改文件属组，就是在更改某个目录文件的属组时，如果加上-R的参数，那么该目录下的所有文件的属组都会更改。</li></ul><h3 id="chown-更改文件属主" tabindex="-1"><a class="header-anchor" href="#chown-更改文件属主" aria-hidden="true">#</a> chown：更改文件属主</h3><p>也可以同时更改文件属组</p><p>语法：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>chown [–R] 属主名 文件名
chown [-R] 属主名：属组名 文件名  # 同时修改属组
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chmod-更改文件9个属性" tabindex="-1"><a class="header-anchor" href="#chmod-更改文件9个属性" aria-hidden="true">#</a> chmod：更改文件9个属性</h3><p>Linux文件属性有两种表示方法，一种是数字，一种是符号。</p><h4 id="数字表示权限" tabindex="-1"><a class="header-anchor" href="#数字表示权限" aria-hidden="true">#</a> 数字表示权限</h4><p>Linux 文件的基本权限就有九个，分别是 <strong>owner/group/others(拥有者/组/其他)</strong> 三种身份各有自己的 <strong>read/write/execute</strong> 权限。</p><blockquote><p>各权限的分数对照表如下：</p><ul><li>r:4</li><li>w:2</li><li>x:1</li></ul><p>每种身份(owner/group/others)各自的三个权限(r/w/x)分数是需要累加的，例如当权限为： <strong>-rwxrwx---</strong> 分数则是：</p><ul><li>owner = rwx = 4+2+1 = 7</li><li>group = rwx = 4+2+1 = 7</li><li>others= --- = 0+0+0 = 0</li></ul><p>所以等一下我们设定权限的变更时，该文件的权限数字就是 <strong>770</strong>。</p></blockquote><p>变更权限为770的指令 chmod 的语法是这样的：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code> chmod [-R] 770 文件或目录
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>选项与参数：</p><ul><li><strong>-R</strong> : 进行递归(recursive)的持续变更，以及连同次目录下的所有文件都会变更</li></ul><p>如果要将权限变成 <em>-rwxr-xr--</em> 呢？那么权限的分数就成为 <code>[4+2+1][4+0+1][4+0+0]=754</code>。</p><h4 id="符号表示权限" tabindex="-1"><a class="header-anchor" href="#符号表示权限" aria-hidden="true">#</a> 符号表示权限</h4><ol><li><p>我们需要将文件权限设置为 <strong>-rwxr-xr--</strong> ，可以使用 <code>chmod u=rwx,g=rx,o=r filename </code>来设定</p></li><li><p>我们也可以使用加减法来操作</p><p>下面的 a 表示所有人</p><figure><img src="https://pic.hanjiaming.com.cn/2022/04/30/02dcb37476c89.png" alt="CleanShot 2022-04-30 at 23.42.44@2x.png" tabindex="0" loading="lazy"><figcaption>CleanShot 2022-04-30 at 23.42.44@2x.png</figcaption></figure><p>比如 <code>chmod o-w, g+w test.txt</code> ：test.txt 的属主减去 可写 的权限, 属组添加 可写 的权限。</p></li></ol>`,41),o=[t];function l(d,s){return i(),n("div",null,o)}const p=e(a,[["render",l],["__file","privilege.html.vue"]]);export{p as default};
