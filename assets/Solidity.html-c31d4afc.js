const e=JSON.parse('{"key":"v-bad9df5e","path":"/note/cs/cn/bc/Solidity.html","title":"Solidity","lang":"zh-CN","frontmatter":{"article":false,"date":"2024-10-10T00:00:00.000Z","index":true,"order":7,"headerDepth":1,"description":"Solidity EVM 「Ethereum Virtual Machine」 Runtime environment 以太坊智能合约的运行时环境：EVM是以太坊智能合约的运行时环境，负责执行和管理智能合约。 Stack-based (1024 depth, 256-bit word), \\"gas\\" for operations EVM使用一个深度为1024的堆栈，每个堆栈单元为256位来执行操作。 操作的\\"燃料\\"：每个操作都需要消耗一定量的Gas，以防止资源滥用。 Consistently execute「持续执行」 across the Ethereum nodes EVM确保智能合约在所有以太坊节点上以一致的方式执行，保持网络一致性。 Updates old state with new transactions「用新交易更新旧状态」 每次交易都会引起状态的更新，EVM负责执行交易并更新全网的状态。 EVM有多种实现方式，如 geth（Go语言）、Py-EVM（Python）、evmone（C++）和 ethereumjs-vm（JavaScript）。","head":[["meta",{"property":"og:url","content":"https://guomaimang.github.io/note/cs/cn/bc/Solidity.html"}],["meta",{"property":"og:site_name","content":"韩佳明 & Hirsun"}],["meta",{"property":"og:title","content":"Solidity"}],["meta",{"property":"og:description","content":"Solidity EVM 「Ethereum Virtual Machine」 Runtime environment 以太坊智能合约的运行时环境：EVM是以太坊智能合约的运行时环境，负责执行和管理智能合约。 Stack-based (1024 depth, 256-bit word), \\"gas\\" for operations EVM使用一个深度为1024的堆栈，每个堆栈单元为256位来执行操作。 操作的\\"燃料\\"：每个操作都需要消耗一定量的Gas，以防止资源滥用。 Consistently execute「持续执行」 across the Ethereum nodes EVM确保智能合约在所有以太坊节点上以一致的方式执行，保持网络一致性。 Updates old state with new transactions「用新交易更新旧状态」 每次交易都会引起状态的更新，EVM负责执行交易并更新全网的状态。 EVM有多种实现方式，如 geth（Go语言）、Py-EVM（Python）、evmone（C++）和 ethereumjs-vm（JavaScript）。"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-11T08:57:11.000Z"}],["meta",{"property":"article:author","content":"Hirsun"}],["meta",{"property":"article:published_time","content":"2024-10-10T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-11T08:57:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"Solidity\\",\\"description\\":\\"Solidity EVM 「Ethereum Virtual Machine」 Runtime environment 以太坊智能合约的运行时环境：EVM是以太坊智能合约的运行时环境，负责执行和管理智能合约。 Stack-based (1024 depth, 256-bit word), \\\\\\"gas\\\\\\" for operations EVM使用一个深度为1024的堆栈，每个堆栈单元为256位来执行操作。 操作的\\\\\\"燃料\\\\\\"：每个操作都需要消耗一定量的Gas，以防止资源滥用。 Consistently execute「持续执行」 across the Ethereum nodes EVM确保智能合约在所有以太坊节点上以一致的方式执行，保持网络一致性。 Updates old state with new transactions「用新交易更新旧状态」 每次交易都会引起状态的更新，EVM负责执行交易并更新全网的状态。 EVM有多种实现方式，如 geth（Go语言）、Py-EVM（Python）、evmone（C++）和 ethereumjs-vm（JavaScript）。\\"}"]]},"headers":[{"level":2,"title":"EVM","slug":"evm","link":"#evm","children":[{"level":3,"title":"Runtime environment","slug":"runtime-environment","link":"#runtime-environment","children":[]},{"level":3,"title":"Life Cycle","slug":"life-cycle","link":"#life-cycle","children":[]},{"level":3,"title":"EVM Structure","slug":"evm-structure","link":"#evm-structure","children":[]}]},{"level":2,"title":"Solidity Language","slug":"solidity-language","link":"#solidity-language","children":[]},{"level":2,"title":"Structure","slug":"structure","link":"#structure","children":[]},{"level":2,"title":"Basics","slug":"basics","link":"#basics","children":[{"level":3,"title":"Constructor and State Variable","slug":"constructor-and-state-variable","link":"#constructor-and-state-variable","children":[]},{"level":3,"title":"Data Location","slug":"data-location","link":"#data-location","children":[]}]},{"level":2,"title":"Types","slug":"types","link":"#types","children":[{"level":3,"title":"Fixed-size (byte) arrays","slug":"fixed-size-byte-arrays","link":"#fixed-size-byte-arrays","children":[]},{"level":3,"title":"Dynamically-sized array","slug":"dynamically-sized-array","link":"#dynamically-sized-array","children":[]},{"level":3,"title":"Reference Type","slug":"reference-type","link":"#reference-type","children":[]},{"level":3,"title":"Mappings","slug":"mappings","link":"#mappings","children":[]},{"level":3,"title":"Structs","slug":"structs","link":"#structs","children":[]}]}],"git":{"createdTime":1728575358000,"updatedTime":1728637031000,"contributors":[{"name":"hanjiaming","email":"47519540+guomaimang@users.noreply.github.com","commits":3}]},"readingTime":{"minutes":36.07,"words":3607},"filePathRelative":"note/cs/cn/bc/Solidity.md","localizedDate":"2024年10月10日","excerpt":"<h1> Solidity</h1>\\n<h2> EVM</h2>\\n<p>「Ethereum Virtual Machine」</p>\\n<h3> Runtime environment</h3>\\n<p>以太坊智能合约的运行时环境：EVM是以太坊智能合约的运行时环境，负责执行和管理智能合约。</p>\\n<ul>\\n<li>Stack-based (1024 depth, 256-bit word), \\"gas\\" for operations\\n<ul>\\n<li>EVM使用一个深度为1024的堆栈，每个堆栈单元为256位来执行操作。</li>\\n<li>操作的\\"燃料\\"：每个操作都需要消耗一定量的Gas，以防止资源滥用。</li>\\n</ul>\\n</li>\\n<li>Consistently execute「持续执行」 across the Ethereum nodes<br>\\nEVM确保智能合约在所有以太坊节点上以一致的方式执行，保持网络一致性。</li>\\n<li>Updates old state with new transactions「用新交易更新旧状态」<br>\\n每次交易都会引起状态的更新，EVM负责执行交易并更新全网的状态。</li>\\n<li>EVM有多种实现方式，如 geth（Go语言）、Py-EVM（Python）、evmone（C++）和 ethereumjs-vm（JavaScript）。</li>\\n</ul>","autoDesc":true}');export{e as data};
