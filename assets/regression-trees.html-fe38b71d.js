import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{o as e,c as n,e as t}from"./app-ab6256e2.js";const r={},a=t('<h1 id="regression-trees" tabindex="-1"><a class="header-anchor" href="#regression-trees" aria-hidden="true">#</a> Regression Trees</h1><p>Regression Trees or Classification and Regression Tree (CART)</p><p>分类树用于处理离散的标签（如是/否、狗/猫），而回归树处理的是连续的数值（如房价、温度）。</p><p>Similarity</p><ul><li>用于连续结果变量</li><li>程序类似于分类树</li><li>尝试多次拆分，选择杂质最小的一次</li></ul><p>Difference</p><ul><li>预测结果按相关分支/规则的数字目标变量的平均值计算（参照决策树中的多数表决）。</li><li>杂质用与叶平均值的平方差之和来衡量</li><li>用 RMSE（均方根误差）衡量性能</li></ul><p>Regression Tree -&gt; Decision Tree for Regression</p><img src="https://pic.hanjiaming.com.cn/2023/11/20/4dd9f5d7ac0cd.png" alt="1700454085978.png" style="zoom:50%;"><h2 id="construction" tabindex="-1"><a class="header-anchor" href="#construction" aria-hidden="true">#</a> Construction</h2><ol><li>选择最佳分割点：在回归树中，我们使用不同的标准，通常是<strong>偏差减少</strong>（Deviation Reduction）。这意味着<u>我们要找到一个特征和一个分割点</u>，<strong>使得分割后的两个子集相对于原始数据集的总偏差（差异）最小化</strong>。</li><li><strong>偏差减少的计算</strong><ul><li>偏差通常通过计算每个点与其所在组的平均值的差的平方来衡量。</li><li>我们尝试不同的特征和分割点，计算每种情况下的总偏差，并选择使总偏差最小的分割。</li></ul></li><li><strong>递归分割</strong>： <ul><li>一旦找到最佳分割点，数据集被分为两个子集。</li><li>然后对每个子集重复这个过程，直到满足某个停止条件（如达到最大深度、子集大小低于阈值等）</li></ul></li><li><strong>预测输出</strong>：回归树的每个叶节点会得到一个预测值，这通常是该节点所有数据点的平均值。</li></ol><div class="hint-container info"><p class="hint-container-title">Example</p><p>假设我们有一个数据集，包含不同房屋的特征（如面积、卧室数量）和它们的售价（一个连续值）。我们的目标是构建一个回归树来预测房价。</p><ul><li>我们可能会检查不同的特征（面积、卧室数量）和不同的分割点（面积&gt;100平方米、卧室数量&gt;3等）。</li><li>对于每种可能的分割，我们<u>计算分割后两个子集中每个房子的售价与其所在子集平均售价的偏差</u>。</li><li>我们选择那个能使总偏差最小的分割点。比如，我们可能发现按照面积分割时偏差最小。</li><li>然后，我们在每个子集中重复这个过程，直到达到停止条件。</li></ul><p>最终，我们得到的回归树可以根据房屋的特征来预测其可能的售价。每个叶节点代表的是在那个特定条件下的房屋的平均售价。</p></div><h2 id="deviation-reduction" tabindex="-1"><a class="header-anchor" href="#deviation-reduction" aria-hidden="true">#</a> Deviation Reduction</h2><p>在回归树中，我们用一些统计度量来帮助我们构建树（分枝）以及决定何时停止分枝（终止分枝）。这个过程和计算均值、标准差和变异系数（CV）类似。</p><img src="https://pic.hanjiaming.com.cn/2023/11/20/350c68e0379d3.png" alt="1700455137716.png" style="zoom:50%;"><ul><li><strong>标准差（S）</strong>：用于树的构建（分枝） <ul><li>标准差是衡量数据点相对于平均值的离散程度的一个指标。</li><li>在回归树中，我们使用标准差来找到最好的分枝点。<u>选择一个分枝点会将数据分成两部分，我们希望这两部分内部的标准差尽可能小，这意味着每个子组内的数据更加相似</u>。</li></ul></li><li><strong>变异系数（CV, Coeffeicient of Variation）</strong>：用于确定分枝何时终止 <ul><li>变异系数是标准差与平均值的比率，通常表示为百分比。</li><li>在回归树中，如果一个节点的CV很小，意味着该节点内的数据变异不大，我们可能就不需要进一步分枝了。</li></ul></li><li><strong>平均值（Avg）</strong>：是叶节点中的值 <ul><li><u>在决定不再分枝后</u>，叶节点将代表该分支上数据的平均值。</li><li>对于预测任务，这个平均值就是我们基于输入数据预测的连续输出（比如房价、体重等）。</li></ul></li></ul><p>Standard deviation for two attributes</p><img src="https://pic.hanjiaming.com.cn/2023/12/14/c82d5902e33c5.png" alt="1702484088444.png" style="zoom:33%;"><h2 id="standard-deviation-reduction" tabindex="-1"><a class="header-anchor" href="#standard-deviation-reduction" aria-hidden="true">#</a> Standard Deviation Reduction</h2><p>Calculate the standard deviation for each branch</p><img src="https://pic.hanjiaming.com.cn/2023/12/14/6f95029a1f7f0.png" alt="1702484189145.png" style="zoom:50%;"><h2 id="constructing-tree" tabindex="-1"><a class="header-anchor" href="#constructing-tree" aria-hidden="true">#</a> Constructing Tree</h2><p>Constructing Regression Tree Based on SDR</p><img src="https://pic.hanjiaming.com.cn/2023/12/14/48ae1bd5a84c8.png" alt="1702484251790.png" style="zoom:50%;">',24),l=[a];function o(s,c){return e(),n("div",null,l)}const u=i(r,[["render",o],["__file","regression-trees.html.vue"]]);export{u as default};
