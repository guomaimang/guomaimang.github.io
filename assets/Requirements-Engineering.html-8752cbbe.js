import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as i,c as l,e as n}from"./app-12cfe852.js";const r={},t=n('<h1 id="requirements-engineering" tabindex="-1"><a class="header-anchor" href="#requirements-engineering" aria-hidden="true">#</a> Requirements Engineering</h1><ol><li>了解用户和系统需求的概念，以及为什么这些需求应该以不同的方式来写。</li><li>了解功能性和非功能性软件需求之间的区别。</li><li>理解主要的需求工程活动：征询、分析和验证，以及这些活动之间的关系。</li><li>了解为什么需求管理是必要的，以及它如何支持其他需求工程活动。</li></ol><p>对一个系统的要求是对一个系统应该提供的服务和对其运行的限制的描述。</p><ul><li>它的范围可以从服务或系统约束的高级、抽象声明到详细、正式的规范。</li><li>这是不可避免的，因为需求可能具有双重功能 <ul><li>可能是合同竞标的基础 - 因此必须开放解释。</li><li>可能是合同本身的基础 - 因此必须详细定义。</li><li>这两种说法都可以被称为要求。</li></ul></li></ul><p>发现、分析、记录和检查这些服务和约束的过程被称为需求工程（RE）。</p><h2 id="types-of-requirements" tabindex="-1"><a class="header-anchor" href="#types-of-requirements" aria-hidden="true">#</a> Types of Requirements</h2><ul><li>用户要求：用简洁的语言陈述，加上系统提供的服务和操作限制的图示。</li><li>系统要求：一个结构化的文件，详细描述了系统的功能、服务和操作限制。定义了应该实施的内容。可能是客户和承包商之间合同的一部分。</li><li>为了向不同类型的利益相关者传递系统的信息，需要不同类型的要求。</li></ul><div class="hint-container tip"><p class="hint-container-title">stakeholders</p><p>以某种方式受到系统影响的任何个人或组织.</p></div><img src="https://pic.hanjiaming.com.cn/2022/12/14/618c08fec4903.png" alt="1671024111675.png" style="zoom:50%;"><h2 id="agile-requirements" tabindex="-1"><a class="header-anchor" href="#agile-requirements" aria-hidden="true">#</a> Agile Requirements</h2><p>Requirements in agile processes</p><ul><li>许多敏捷方法认为，制作详细的系统需求是浪费时间，因为需求变化如此之快，以至于需求文件总是过时的。</li><li>敏捷方法通常使用增量的需求工程，并可能将需求表达为 &quot;用户故事&quot;。</li><li>这对业务系统来说是实用的，但对需要交付前分析的系统（如关键系统）或由几个团队开发的系统来说就有问题。</li></ul><p>一种 &quot;传统 &quot;的需求观点</p><ul><li>对于大多数大型系统来说，在开始实施系统之前，仍然有一个清晰可辨的需求工程阶段。</li><li>结果是需求文档。</li></ul><h2 id="functional-or-nf-requirements" tabindex="-1"><a class="header-anchor" href="#functional-or-nf-requirements" aria-hidden="true">#</a> Functional or NF Requirements</h2><ul><li>Functional requirements <ul><li>说明系统应该提供的服务，系统对特定的输入应该如何反应，以及系统在特定情况下应该如何表现。</li><li>May 说明系统不应该做什么。</li></ul></li><li>Non-Functional requirements <ul><li>对系统所提供的服务或功能的限制。</li><li>通常适用于<strong>整个系统</strong>，而不是系统的个别功能或服务。</li></ul></li></ul><p>在实践中，这两种类型的区别并不像这些简单的定义所暗示的那样明确。</p><ul><li>Requirements are not independent</li><li><strong>系统需求</strong>应指定系统的服务或功能，以及确保有效提供服务和功能的必要功能。</li></ul><h3 id="functional-requirements" tabindex="-1"><a class="header-anchor" href="#functional-requirements" aria-hidden="true">#</a> Functional Requirements</h3><p>描述功能或系统服务</p><ul><li>取决于正在开发的软件的类型，软件的预期用户，以及组织在编写需求时采取的一般方法。</li><li>功能性用户需求可能是系统应该做什么的高级陈述。</li><li>功能性系统需求应详细描述系统服务。</li><li></li></ul>',21),a=[t];function s(u,o){return i(),l("div",null,a)}const d=e(r,[["render",s],["__file","Requirements-Engineering.html.vue"]]);export{d as default};
